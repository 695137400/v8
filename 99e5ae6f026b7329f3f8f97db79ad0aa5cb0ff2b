{
  "comments": [
    {
      "key": {
        "uuid": "0d233775_737b0445",
        "filename": "src/builtins/math.tq",
        "patchSetId": 12
      },
      "lineNbr": 249,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-08-05T07:19:20Z",
      "side": 1,
      "message": "nit: if types are obvious you can omit declaring it, e.g. here and oneArgIsNan.",
      "revId": "99e5ae6f026b7329f3f8f97db79ad0aa5cb0ff2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be269e7d_87d423b7",
        "filename": "src/builtins/math.tq",
        "patchSetId": 12
      },
      "lineNbr": 249,
      "author": {
        "id": 1358537
      },
      "writtenOn": "2019-08-05T09:36:27Z",
      "side": 1,
      "message": "type omitted here, but unfortunately if I omit the type on oneArgIsNan the compiler thinks it should be const.",
      "parentUuid": "0d233775_737b0445",
      "revId": "99e5ae6f026b7329f3f8f97db79ad0aa5cb0ff2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00d31a83_6ffce4b3",
        "filename": "src/builtins/math.tq",
        "patchSetId": 12
      },
      "lineNbr": 254,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-08-05T07:19:20Z",
      "side": 1,
      "message": "Not sure how important perf is here but this seems a bit inefficient. In the standard case (!\u003d NaN) we Convert\u003cfloat64\u003e twice. I\u0027d suggest refactoring to first Convert\u003cfloat64\u003e, then create a helper Float64IsNaN based on BranchIfFloat64IsNaN and use that.\n\nAlso, why not use the same trick as in the old builtin to handle nans?",
      "revId": "99e5ae6f026b7329f3f8f97db79ad0aa5cb0ff2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dcd1134_c7ece051",
        "filename": "src/builtins/math.tq",
        "patchSetId": 12
      },
      "lineNbr": 254,
      "author": {
        "id": 1358537
      },
      "writtenOn": "2019-08-05T09:36:27Z",
      "side": 1,
      "message": "I will create the conversion.\n\nRE: using the builtins tricks, this torque code is based off V8\u0027s original builtin for handling Math.hypot. The \u0027simplified\u0027 builtin in our codebase today is incorrect for handling corner cases, hence v8:9546. The purpose of this CL is to undo those simplifications, and also to convert the builtin to torque.",
      "parentUuid": "00d31a83_6ffce4b3",
      "revId": "99e5ae6f026b7329f3f8f97db79ad0aa5cb0ff2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85123ad5_6835ffa8",
        "filename": "src/builtins/math.tq",
        "patchSetId": 12
      },
      "lineNbr": 267,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-08-05T07:19:20Z",
      "side": 1,
      "message": "nit: else if, also below.",
      "revId": "99e5ae6f026b7329f3f8f97db79ad0aa5cb0ff2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c18790b4_db63eb3c",
        "filename": "src/builtins/math.tq",
        "patchSetId": 12
      },
      "lineNbr": 267,
      "author": {
        "id": 1358537
      },
      "writtenOn": "2019-08-05T09:36:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85123ad5_6835ffa8",
      "revId": "99e5ae6f026b7329f3f8f97db79ad0aa5cb0ff2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9d6457f_0d2e8381",
        "filename": "src/codegen/code-stub-assembler.h",
        "patchSetId": 12
      },
      "lineNbr": 1198,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-08-05T07:19:20Z",
      "side": 1,
      "message": "This equals the above, except for the TNode-style return type, right? Let\u0027s please just change the return type above.",
      "revId": "99e5ae6f026b7329f3f8f97db79ad0aa5cb0ff2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e922f2e_c20aa21c",
        "filename": "src/codegen/code-stub-assembler.h",
        "patchSetId": 12
      },
      "lineNbr": 1198,
      "author": {
        "id": 1358537
      },
      "writtenOn": "2019-08-05T09:36:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d9d6457f_0d2e8381",
      "revId": "99e5ae6f026b7329f3f8f97db79ad0aa5cb0ff2b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}