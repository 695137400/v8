{
  "comments": [
    {
      "key": {
        "uuid": "2bb6c64b_3d66917c",
        "filename": "src/compiler/checkpoint-elimination.cc",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2019-11-13T15:05:46Z",
      "side": 1,
      "message": "This work around has quite a few subleties, as other places in TurboFan might also care about the precise frame state.\n\nI wonder if it would be better to instead have the Deoptimizer also deoptimize any existing optimized version of an inlined function for eager deopts? That way we ensure that we learn something.\n\nActually I\u0027m surprised that the optimized version for the inlined function doesn\u0027t deopt. That also sounds fishy.",
      "revId": "caf27e0dfbc81611b2805bf502905ab6c7366eca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00f12ba5_70f5b148",
        "filename": "src/compiler/checkpoint-elimination.cc",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2019-11-15T10:41:41Z",
      "side": 1,
      "message": "I don\u0027t understand the first sentence about precise frame state, could you clarify?\n\nYes, deoptimizing any code objects for the inlined function (and surrounding inlinees) is an alternative solution and I will think more about it. It\u0027s definitely not a simple change.\n\nWhy are you surprised that (without my changes) the optimized version of the inlinee doesn\u0027t deopt? That\u0027s a direct consequence of eliminating the inlinee\u0027s checkpoint.",
      "parentUuid": "2bb6c64b_3d66917c",
      "revId": "caf27e0dfbc81611b2805bf502905ab6c7366eca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37e11901_2ed35674",
        "filename": "src/compiler/checkpoint-elimination.cc",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2019-11-15T12:10:26Z",
      "side": 1,
      "message": "s/precise/exact/ in my previous statement.\n\nI\u0027m surprise because why deopt to the caller, which then still calls into the optimized code of what was the inlinee, and that code should also bake in the same assumptions as we did for the bigger code object, and therefore deoptimize individually. So somehow there\u0027s a mismatch between what\u0027s relevant in the context of inlining a function vs. optimizing it standalone.",
      "parentUuid": "00f12ba5_70f5b148",
      "revId": "caf27e0dfbc81611b2805bf502905ab6c7366eca",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}