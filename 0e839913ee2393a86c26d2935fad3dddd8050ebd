{
  "comments": [
    {
      "key": {
        "uuid": "8d249cf0_53a49b06",
        "filename": "src/builtins/wasm.tq",
        "patchSetId": 15
      },
      "lineNbr": 82,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-05-18T06:57:57Z",
      "side": 1,
      "message": "I don\u0027t fully get this part ;) If the only point here is to guarantee successful smi conversion, while still preserving the throw-on-oob inside the runtime function, why not have:\n\n StaticAssert(kTableSizeCap \u003c Convert\u003cuint32\u003e(kSmiMax));\n const dst: Smi \u003d SmiFromUint32WithSaturation(dstRaw);\n ...\n\nat callsites? There\u0027s no reason to cap precisely at wasm::kV8MaxWasmTableSize+1, is there?\n\nSmiFromUint32WithSaturation could be implemented something like:\n\n return Convert\u003cPositiveSmi\u003e(value) otherwise return kSmiMax;",
      "revId": "0e839913ee2393a86c26d2935fad3dddd8050ebd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}