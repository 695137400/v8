{
  "comments": [
    {
      "key": {
        "uuid": "3538de20_e2f0ffa4",
        "filename": "src/arm/macro-assembler-arm.h",
        "patchSetId": 3
      },
      "lineNbr": 411,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2017-08-28T08:49:22Z",
      "side": 1,
      "message": "Should not this be counted in words? (As far as I can see, it would not work for byte sizes that are not divisible by pointer size.)",
      "range": {
        "startLine": 410,
        "startChar": 0,
        "endLine": 411,
        "endChar": 31
      },
      "revId": "a78aa4ea05799e289f42c2227699e9df928c76df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "465956d9_9f6f6ba8",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 748,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2017-08-28T08:49:22Z",
      "side": 1,
      "message": "You should check that bytes is divisible by pointer size (or make PushCallerSaved return number of words).",
      "range": {
        "startLine": 748,
        "startChar": 44,
        "endLine": 748,
        "endChar": 64
      },
      "revId": "a78aa4ea05799e289f42c2227699e9df928c76df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33f04599_1a20c3b6",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 748,
      "author": {
        "id": 1229957
      },
      "writtenOn": "2017-08-28T11:53:09Z",
      "side": 1,
      "message": "`PushCallerSaved` saves both general and floating point registers, which may have different size, but both are divisible by pointer size, AFAIK.",
      "parentUuid": "465956d9_9f6f6ba8",
      "range": {
        "startLine": 748,
        "startChar": 44,
        "endLine": 748,
        "endChar": 64
      },
      "revId": "a78aa4ea05799e289f42c2227699e9df928c76df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4eefa2c_bfbd7d7e",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 753,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2017-08-28T08:49:22Z",
      "side": 1,
      "message": "You should also clear the SP delta here, no?",
      "range": {
        "startLine": 753,
        "startChar": 6,
        "endLine": 753,
        "endChar": 55
      },
      "revId": "a78aa4ea05799e289f42c2227699e9df928c76df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c42c910_ff07bded",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 753,
      "author": {
        "id": 1229957
      },
      "writtenOn": "2017-08-28T11:53:09Z",
      "side": 1,
      "message": "In the case for `kArchCallCFunction`, SP delta is cleared. `kArchRestoreCallerRegisters` always follows `kArchCallCFunction`.",
      "parentUuid": "e4eefa2c_bfbd7d7e",
      "range": {
        "startLine": 753,
        "startChar": 6,
        "endLine": 753,
        "endChar": 55
      },
      "revId": "a78aa4ea05799e289f42c2227699e9df928c76df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5356cfb_f4dba04a",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 753,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2017-08-28T12:45:48Z",
      "side": 1,
      "message": "Right, that is a bit worrisome that sp delta is out of sync here, but I think it should be ok.\n\nCould you at least DCHECK that the delta is 0 here?",
      "parentUuid": "5c42c910_ff07bded",
      "range": {
        "startLine": 753,
        "startChar": 6,
        "endLine": 753,
        "endChar": 55
      },
      "revId": "a78aa4ea05799e289f42c2227699e9df928c76df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "220c9d56_7b4213c9",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 753,
      "author": {
        "id": 1118629
      },
      "writtenOn": "2017-08-28T13:01:41Z",
      "side": 1,
      "message": "Actually, could kArchCallCFunction somehow set the SP delta to the right value? I would feel much more comfortable if the delta was kept in sync (as far as I remember, linux perf integration makes use of the delta to produce the right stack unwinding info - that could be broken by this CL).",
      "parentUuid": "f5356cfb_f4dba04a",
      "range": {
        "startLine": 753,
        "startChar": 6,
        "endLine": 753,
        "endChar": 55
      },
      "revId": "a78aa4ea05799e289f42c2227699e9df928c76df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4e6920b_9f244874",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 753,
      "author": {
        "id": 1229957
      },
      "writtenOn": "2017-08-29T10:51:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f5356cfb_f4dba04a",
      "range": {
        "startLine": 753,
        "startChar": 6,
        "endLine": 753,
        "endChar": 55
      },
      "revId": "a78aa4ea05799e289f42c2227699e9df928c76df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79718af4_387c4292",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 3
      },
      "lineNbr": 753,
      "author": {
        "id": 1229957
      },
      "writtenOn": "2017-08-29T10:51:36Z",
      "side": 1,
      "message": "I have added a few DCHECKS to ensure `kArchSaveCallerRegisters` is called before `kArchCallCFunction` when compiler code stubs using restricted register allocation config.",
      "parentUuid": "220c9d56_7b4213c9",
      "range": {
        "startLine": 753,
        "startChar": 6,
        "endLine": 753,
        "endChar": 55
      },
      "revId": "a78aa4ea05799e289f42c2227699e9df928c76df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}