{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f65c10cb_5da18a70",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1148154
      },
      "writtenOn": "2021-07-18T16:26:00Z",
      "side": 1,
      "message": "Could you provide some info on the asan bot failure?",
      "revId": "45cd0de7477d4c0a71fd71afd466b0ab0164bb5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53229558_14eaa2d8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1148154
      },
      "writtenOn": "2021-07-19T13:35:05Z",
      "side": 1,
      "message": "Hmm, I have a local asan build that has exactly the same gn args as the asan_rel_ng bot, and all those failure tests pass locally. I am going to spin another try.",
      "revId": "45cd0de7477d4c0a71fd71afd466b0ab0164bb5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2815c865_e0e0c5c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2021-07-19T14:54:13Z",
      "side": 1,
      "message": "I think that\u0027s what I also observed when investigating that the last time.\n\nWe need to reproduce this to fix as I don\u0027t see anything going wrong here from the code.",
      "parentUuid": "53229558_14eaa2d8",
      "revId": "45cd0de7477d4c0a71fd71afd466b0ab0164bb5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e0f11db_33114f44",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1148154
      },
      "writtenOn": "2021-07-20T13:59:44Z",
      "side": 1,
      "message": "I got a repro with this:\nASAN_OPTIONS\u003d\"detect_leaks\u003d1\" out/asan/content_browsertests --no-sandbox --gtest_filter\u003d",
      "revId": "45cd0de7477d4c0a71fd71afd466b0ab0164bb5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef3fccba_5eb7b1a9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2021-07-20T14:12:47Z",
      "side": 1,
      "message": "Can look at this tomorrow (July 21) the earliest.",
      "parentUuid": "0e0f11db_33114f44",
      "revId": "45cd0de7477d4c0a71fd71afd466b0ab0164bb5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "106c522a_e6be30f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1148154
      },
      "writtenOn": "2021-07-20T14:54:39Z",
      "side": 1,
      "message": "Thank you, please let me know if there is anything I can help.",
      "parentUuid": "ef3fccba_5eb7b1a9",
      "revId": "45cd0de7477d4c0a71fd71afd466b0ab0164bb5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c987be21_2d61b978",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2021-07-21T15:47:36Z",
      "side": 1,
      "message": "I figured out the LSAN isuse and it\u0027s already an issue on main without this CL.\n\nLSAN is not considering poisoned memory as root region, even when we are using __lsan_register_root_region().\n\nAll GCed memory is considered a root region for LSAN. The GC temporarily poisons memory during a GC to catch bugs.\n\nNow, this CL here makes GC in C++ workloads more likely, so there\u0027s a good chance that we run the GC when run the test and end up being in the GC when the test ends. If that happens, then all pointers contained in the heap that are in poisoned areas are considered leaked.\n\nSolutions:\n1) LSAN can consider poisoned memory as well (LSAN_OPTIONS\u003duse_poisoned\u003d1) when registered in a root region.\n2) We can finish the GC before running leak detection.\n\nInvestigating whether 2) is possible now, to avoid changing environment varialbes on the bots (which 1) requires).",
      "parentUuid": "106c522a_e6be30f2",
      "revId": "45cd0de7477d4c0a71fd71afd466b0ab0164bb5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46bfdda0_4cdef3e5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1148154
      },
      "writtenOn": "2021-07-23T14:18:58Z",
      "side": 1,
      "message": "It looks like the asan bot is green now. Thank you for your effort of fixing all the test failures.",
      "revId": "45cd0de7477d4c0a71fd71afd466b0ab0164bb5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a689682c_2409b524",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2021-07-23T14:29:44Z",
      "side": 1,
      "message": "Hannes, ptal. The code is unchanged from the review and 2 independent issues in Blink have been fixed to make this CL possible.",
      "revId": "45cd0de7477d4c0a71fd71afd466b0ab0164bb5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}