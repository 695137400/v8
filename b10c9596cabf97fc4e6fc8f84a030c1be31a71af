{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2e159a2f_3d7449ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2023-10-23T05:17:25Z",
      "side": 1,
      "message": "LGTM from my side, but Clemens is the real expert on the jump table, there may be details I don\u0027t know about.",
      "revId": "b10c9596cabf97fc4e6fc8f84a030c1be31a71af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82740ab4_1f2264cb",
        "filename": "BUILD.gn",
        "patchSetId": 16
      },
      "lineNbr": 1125,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2023-10-20T10:59:47Z",
      "side": 1,
      "message": "should we either merge `V8_ENABLE_CET_IBT` into this, or rename this to something like `V8_ENABLE_ARM64_PAC`?",
      "range": {
        "startLine": 1125,
        "startChar": 18,
        "endLine": 1125,
        "endChar": 50
      },
      "revId": "b10c9596cabf97fc4e6fc8f84a030c1be31a71af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc0d78c7_58042d86",
        "filename": "BUILD.gn",
        "patchSetId": 16
      },
      "lineNbr": 1125,
      "author": {
        "id": 1120979
      },
      "writtenOn": "2023-11-20T10:14:32Z",
      "side": 1,
      "message": "I think it makes sense to have a generic build flag for CFI for the non-experimental parts. In that case, we would eventually merge the CET_IBT into this, once we want to ship it by default.\nDoes that make sense?",
      "parentUuid": "82740ab4_1f2264cb",
      "range": {
        "startLine": 1125,
        "startChar": 18,
        "endLine": 1125,
        "endChar": 50
      },
      "revId": "b10c9596cabf97fc4e6fc8f84a030c1be31a71af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7dbaa34_b01a2f9b",
        "filename": "BUILD.gn",
        "patchSetId": 16
      },
      "lineNbr": 1125,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2023-11-23T09:35:56Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "dc0d78c7_58042d86",
      "range": {
        "startLine": 1125,
        "startChar": 18,
        "endLine": 1125,
        "endChar": 50
      },
      "revId": "b10c9596cabf97fc4e6fc8f84a030c1be31a71af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c49abb7_b1de556f",
        "filename": "src/wasm/jump-table-assembler.cc",
        "patchSetId": 16
      },
      "lineNbr": 79,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2023-10-23T05:17:25Z",
      "side": 1,
      "message": "why is this not within the parentheses?",
      "range": {
        "startLine": 79,
        "startChar": 47,
        "endLine": 79,
        "endChar": 64
      },
      "revId": "b10c9596cabf97fc4e6fc8f84a030c1be31a71af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "100fc226_534eb37f",
        "filename": "src/wasm/jump-table-assembler.cc",
        "patchSetId": 16
      },
      "lineNbr": 79,
      "author": {
        "id": 1120979
      },
      "writtenOn": "2023-11-20T10:02:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2c49abb7_b1de556f",
      "range": {
        "startLine": 79,
        "startChar": 47,
        "endLine": 79,
        "endChar": 64
      },
      "revId": "b10c9596cabf97fc4e6fc8f84a030c1be31a71af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eada8c63_71aa3d52",
        "filename": "src/wasm/jump-table-assembler.cc",
        "patchSetId": 16
      },
      "lineNbr": 80,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2023-10-23T08:45:21Z",
      "side": 1,
      "message": "This shouldn\u0027t happen. Can we have a DCHECK instead?",
      "revId": "b10c9596cabf97fc4e6fc8f84a030c1be31a71af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec988f4a_38b95b7a",
        "filename": "src/wasm/jump-table-assembler.cc",
        "patchSetId": 16
      },
      "lineNbr": 80,
      "author": {
        "id": 1120979
      },
      "writtenOn": "2023-11-20T10:02:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eada8c63_71aa3d52",
      "revId": "b10c9596cabf97fc4e6fc8f84a030c1be31a71af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3fe0f3e_d2b37302",
        "filename": "src/wasm/jump-table-assembler.cc",
        "patchSetId": 16
      },
      "lineNbr": 90,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2023-10-23T05:17:25Z",
      "side": 1,
      "message": "same here.",
      "range": {
        "startLine": 90,
        "startChar": 49,
        "endLine": 90,
        "endChar": 66
      },
      "revId": "b10c9596cabf97fc4e6fc8f84a030c1be31a71af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "838fbb69_313a42ce",
        "filename": "src/wasm/jump-table-assembler.cc",
        "patchSetId": 16
      },
      "lineNbr": 90,
      "author": {
        "id": 1120979
      },
      "writtenOn": "2023-11-20T10:02:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e3fe0f3e_d2b37302",
      "range": {
        "startLine": 90,
        "startChar": 49,
        "endLine": 90,
        "endChar": 66
      },
      "revId": "b10c9596cabf97fc4e6fc8f84a030c1be31a71af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb0700c7_d3111d34",
        "filename": "src/wasm/jump-table-assembler.cc",
        "patchSetId": 16
      },
      "lineNbr": 104,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2023-10-23T05:17:25Z",
      "side": 1,
      "message": "Can you add a comment why these 4 bytes are needed?",
      "revId": "b10c9596cabf97fc4e6fc8f84a030c1be31a71af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6b56e5a_2b900a10",
        "filename": "src/wasm/jump-table-assembler.cc",
        "patchSetId": 16
      },
      "lineNbr": 104,
      "author": {
        "id": 1120979
      },
      "writtenOn": "2023-11-20T10:02:22Z",
      "side": 1,
      "message": "reverted this part again, looks like the endbr is not needed here",
      "parentUuid": "cb0700c7_d3111d34",
      "revId": "b10c9596cabf97fc4e6fc8f84a030c1be31a71af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d765764c_a99826f8",
        "filename": "src/wasm/jump-table-assembler.h",
        "patchSetId": 16
      },
      "lineNbr": 184,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2023-10-23T08:45:21Z",
      "side": 1,
      "message": "Just a note: This nearly doubles the size of the jump table slot. We should re-evaluate if this is still more efficient than having a table of targets and doing an indirect jump/call to the address loaded from that table instead. That would also be a lot more platform-independent.",
      "revId": "b10c9596cabf97fc4e6fc8f84a030c1be31a71af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}