{
  "comments": [
    {
      "key": {
        "uuid": "7c25198c_dca330b4",
        "filename": "src/heap/heap.h",
        "patchSetId": 2
      },
      "lineNbr": 407,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-09-14T12:57:40Z",
      "side": 0,
      "message": "I was hoping that we can get rid of this flag completely by introducing a test helper:\ne.g. CcTest::ExactCollectGarbage() {\n  // 1. Finalize incremental marking.\n  // 2. Do GC.\n}",
      "range": {
        "startLine": 407,
        "startChar": 2,
        "endLine": 407,
        "endChar": 52
      },
      "revId": "09ab629de5285e049db5038fefa79cf2eafa2b47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc02b3c6_8a4172db",
        "filename": "src/heap/heap.h",
        "patchSetId": 2
      },
      "lineNbr": 407,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2018-09-14T14:15:57Z",
      "side": 0,
      "message": "As discussed offline: I added a PreciseCollectGarbage call and replaced the uses of abort incremental marking and make heap iterable with that one. \n\nThe uses in the memory reducing cases (GC loops) were removed.",
      "parentUuid": "7c25198c_dca330b4",
      "range": {
        "startLine": 407,
        "startChar": 2,
        "endLine": 407,
        "endChar": 52
      },
      "revId": "09ab629de5285e049db5038fefa79cf2eafa2b47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5653f99f_f31912bc",
        "filename": "src/heap/heap.h",
        "patchSetId": 2
      },
      "lineNbr": 407,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-09-14T14:18:01Z",
      "side": 0,
      "message": "Ack",
      "parentUuid": "fc02b3c6_8a4172db",
      "range": {
        "startLine": 407,
        "startChar": 2,
        "endLine": 407,
        "endChar": 52
      },
      "revId": "09ab629de5285e049db5038fefa79cf2eafa2b47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8a9120a_fa08769c",
        "filename": "src/heap/heap.h",
        "patchSetId": 2
      },
      "lineNbr": 411,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-09-14T12:57:40Z",
      "side": 0,
      "message": "This statement doesn\u0027t make sense to me. Heap iterability doesn\u0027t depend on incremental marking.\n\nLooks like we can just get rid of kMakeHeapIterableMask. It is used only in heap profiler and that triggers multiple GCs. So they will be non-incremental anyway.",
      "range": {
        "startLine": 410,
        "startChar": 1,
        "endLine": 411,
        "endChar": 72
      },
      "revId": "09ab629de5285e049db5038fefa79cf2eafa2b47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3239c348_b28237c6",
        "filename": "src/heap/heap.h",
        "patchSetId": 2
      },
      "lineNbr": 411,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2018-09-14T14:15:57Z",
      "side": 0,
      "message": "I replaced the uses of it with PreciseCollectGarbage where it was unclear what it actually did.",
      "parentUuid": "c8a9120a_fa08769c",
      "range": {
        "startLine": 410,
        "startChar": 1,
        "endLine": 411,
        "endChar": 72
      },
      "revId": "09ab629de5285e049db5038fefa79cf2eafa2b47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aceb420d_1b572caf",
        "filename": "src/heap/heap.h",
        "patchSetId": 2
      },
      "lineNbr": 411,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-09-14T14:18:01Z",
      "side": 0,
      "message": "Ack",
      "parentUuid": "3239c348_b28237c6",
      "range": {
        "startLine": 410,
        "startChar": 1,
        "endLine": 411,
        "endChar": 72
      },
      "revId": "09ab629de5285e049db5038fefa79cf2eafa2b47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a1712ef_33068f30",
        "filename": "src/heap/heap.h",
        "patchSetId": 3
      },
      "lineNbr": 408,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2018-09-14T14:15:57Z",
      "side": 0,
      "message": "This one is not really used. I will remove in a separate CL.",
      "range": {
        "startLine": 408,
        "startChar": 19,
        "endLine": 408,
        "endChar": 50
      },
      "revId": "09ab629de5285e049db5038fefa79cf2eafa2b47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e77914e_99a49522",
        "filename": "src/heap/heap.h",
        "patchSetId": 3
      },
      "lineNbr": 408,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-09-14T14:18:01Z",
      "side": 0,
      "message": "Ack",
      "parentUuid": "4a1712ef_33068f30",
      "range": {
        "startLine": 408,
        "startChar": 19,
        "endLine": 408,
        "endChar": 50
      },
      "revId": "09ab629de5285e049db5038fefa79cf2eafa2b47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}