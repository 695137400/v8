{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fb158608_012f3da4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-09T08:20:27Z",
      "side": 1,
      "message": "Hi folks, PTAL at this CL that adds support for JSArray arguments to the fast API.\n@Georg - PTAL at src/compiler and overall.\n@Camillo - PTAL at include/* and src/api/*.\n\nI\u0027ll try to care of the MSVC x86 compile failure, but I\u0027m not sure what\u0027s happening there - the code should be looking for ConvertDouble\u003cint32_t\u003e(double) and not ConvertDouble\u003cint\u003e(double) from what I can tell. If any of you can give an idea, it would be appreciated, thanks!",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e5f2613_0f9b3e2b",
        "filename": "include/v8.h",
        "patchSetId": 9
      },
      "lineNbr": 4426,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-09T09:34:17Z",
      "side": 1,
      "message": "This is an internal implementation technicality that we should not mention in the API documentation.",
      "range": {
        "startLine": 4426,
        "startChar": 34,
        "endLine": 4426,
        "endChar": 47
      },
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19cacac1_93efede9",
        "filename": "include/v8.h",
        "patchSetId": 9
      },
      "lineNbr": 4426,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-10T09:30:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e5f2613_0f9b3e2b",
      "range": {
        "startLine": 4426,
        "startChar": 34,
        "endLine": 4426,
        "endChar": 47
      },
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f530e2e7_1be78d90",
        "filename": "include/v8.h",
        "patchSetId": 9
      },
      "lineNbr": 4427,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-09T09:34:17Z",
      "side": 1,
      "message": "elements or values",
      "range": {
        "startLine": 4427,
        "startChar": 49,
        "endLine": 4427,
        "endChar": 58
      },
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5d44cb8_1084aa70",
        "filename": "include/v8.h",
        "patchSetId": 9
      },
      "lineNbr": 4427,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-09T09:34:17Z",
      "side": 1,
      "message": "Similarly \"double elements\" is internal or unclear.\nIn general we should word this conservatively by highlighting that the operation may fail and probably giving necessary but not sufficient conditions under which it succeeds.",
      "range": {
        "startLine": 4427,
        "startChar": 8,
        "endLine": 4427,
        "endChar": 28
      },
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41404860_55698fd5",
        "filename": "include/v8.h",
        "patchSetId": 9
      },
      "lineNbr": 4427,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-10T09:30:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f530e2e7_1be78d90",
      "range": {
        "startLine": 4427,
        "startChar": 49,
        "endLine": 4427,
        "endChar": 58
      },
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "358d6a97_b92f3d5a",
        "filename": "include/v8.h",
        "patchSetId": 9
      },
      "lineNbr": 4427,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-10T09:30:41Z",
      "side": 1,
      "message": "Reworded, PTAL again.",
      "parentUuid": "e5d44cb8_1084aa70",
      "range": {
        "startLine": 4427,
        "startChar": 8,
        "endLine": 4427,
        "endChar": 28
      },
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a80d0d8_a83cf7d5",
        "filename": "include/v8.h",
        "patchSetId": 9
      },
      "lineNbr": 4437,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-09T09:34:17Z",
      "side": 1,
      "message": "How about making this function take a CTypeInfo as argument instead of conversion_map?",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99a292e4_076afe8e",
        "filename": "include/v8.h",
        "patchSetId": 9
      },
      "lineNbr": 4437,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-10T09:30:41Z",
      "side": 1,
      "message": "The conversion map is intended to specify the mapping for all types used by this embedded, e.g. something like { float: restricted, double: restricted, int64: BigInt }. So FastArgConversion is not intended to describe a single argument (such as CTypeInfo), but rather all possible arguments for all CFunctions created by this embedder.",
      "parentUuid": "0a80d0d8_a83cf7d5",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53b61771_ff73b461",
        "filename": "include/v8.h",
        "patchSetId": 9
      },
      "lineNbr": 4437,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-10T10:05:24Z",
      "side": 1,
      "message": "I thought the plan was to have different CTypeInfos for the different flavors. E.g. regular double and restricted double would be represented by two distinct CTypeInfos. Then passing the CTypeInfo representing the desired conversion here seems most natural to me.",
      "parentUuid": "99a292e4_076afe8e",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79567a3c_ab9c0587",
        "filename": "include/v8.h",
        "patchSetId": 9
      },
      "lineNbr": 4437,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-11T07:46:52Z",
      "side": 1,
      "message": "Okay, that\u0027s also a viable option. I\u0027ll change the argument then, thanks!\nThis is not reflected though in the design doc (https://docs.google.com/document/d/1SAHn7d8M7CoazTd1laVF8gduFC_ikZWiYuytrR9c4Oc/edit#heading\u003dh.jw4qzchtw6tu, option d), so we should update that, I assume.",
      "parentUuid": "53b61771_ff73b461",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "470ff54f_77419cec",
        "filename": "include/v8.h",
        "patchSetId": 9
      },
      "lineNbr": 4437,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-14T09:30:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "79567a3c_ab9c0587",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce7da220_f8ea0f23",
        "filename": "src/compiler/effect-control-linearizer.cc",
        "patchSetId": 9
      },
      "lineNbr": 5006,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-09T09:34:17Z",
      "side": 1,
      "message": "This is redundant (see UNREACHABLE below).",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f577ee7_30281c3c",
        "filename": "src/compiler/effect-control-linearizer.cc",
        "patchSetId": 9
      },
      "lineNbr": 5006,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-10T09:30:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce7da220_f8ea0f23",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dcae4f4_21c3bee3",
        "filename": "src/compiler/effect-control-linearizer.cc",
        "patchSetId": 9
      },
      "lineNbr": 5007,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-09T09:34:17Z",
      "side": 1,
      "message": "I think it would be more natural to start this function by switching on the sequence type. In the IsSequence case you can then assert that GetType() is kVoid.",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "389424a2_c22966c3",
        "filename": "src/compiler/effect-control-linearizer.cc",
        "patchSetId": 9
      },
      "lineNbr": 5007,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-10T09:30:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5dcae4f4_21c3bee3",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12e2af8e_1b76db12",
        "filename": "src/compiler/effect-control-linearizer.cc",
        "patchSetId": 9
      },
      "lineNbr": 5007,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-14T14:39:58Z",
      "side": 1,
      "message": "I meant moving it to the start of the function (basically first switch on sequence type, then on type where needed).",
      "parentUuid": "389424a2_c22966c3",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b285187a_a0162713",
        "filename": "src/compiler/effect-control-linearizer.cc",
        "patchSetId": 9
      },
      "lineNbr": 5007,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-15T12:43:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "12e2af8e_1b76db12",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ce6c64a_bffd8c45",
        "filename": "src/compiler/effect-control-linearizer.cc",
        "patchSetId": 9
      },
      "lineNbr": 5110,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-09T09:34:17Z",
      "side": 1,
      "message": "Please move this into AdaptFastCallArgument.",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6fe820d_40f70c7c",
        "filename": "src/compiler/effect-control-linearizer.cc",
        "patchSetId": 9
      },
      "lineNbr": 5110,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-10T09:30:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2ce6c64a_bffd8c45",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2e74a07_c01ce8fb",
        "filename": "src/d8/d8-test.cc",
        "patchSetId": 9
      },
      "lineNbr": 140,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-09T09:34:17Z",
      "side": 1,
      "message": "This isn\u0027t needed.",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "098f2748_98c52bdd",
        "filename": "src/d8/d8-test.cc",
        "patchSetId": 9
      },
      "lineNbr": 140,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-10T09:30:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b2e74a07_c01ce8fb",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84847273_dd4ae568",
        "filename": "src/d8/d8-test.cc",
        "patchSetId": 9
      },
      "lineNbr": 143,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-09T09:34:17Z",
      "side": 1,
      "message": "isolate",
      "range": {
        "startLine": 143,
        "startChar": 6,
        "endLine": 143,
        "endChar": 23
      },
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "40b100ff_952c2eb1",
        "filename": "src/d8/d8-test.cc",
        "patchSetId": 9
      },
      "lineNbr": 143,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-10T09:30:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84847273_dd4ae568",
      "range": {
        "startLine": 143,
        "startChar": 6,
        "endLine": 143,
        "endChar": 23
      },
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f719e38a_73c74221",
        "filename": "src/d8/d8-test.cc",
        "patchSetId": 9
      },
      "lineNbr": 150,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-09T09:34:17Z",
      "side": 1,
      "message": "You can\u0027t expect that due to to fuzzing.",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99b3f761_a3483233",
        "filename": "src/d8/d8-test.cc",
        "patchSetId": 9
      },
      "lineNbr": 150,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-10T09:30:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f719e38a_73c74221",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04647c79_dc3ff796",
        "filename": "src/numbers/conversions-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 117,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-09T09:34:17Z",
      "side": 1,
      "message": "This is just a shortcut, right? Removing it would not change the result?\n\nCan it be extended to int64_t?",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ad49ccb_3671f4ac",
        "filename": "src/numbers/conversions-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 117,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-10T09:30:41Z",
      "side": 1,
      "message": "But it will make the function slower if I remove it, no? I think it makes sense for int64_t, if this is what you meant. Let\u0027s discuss it tomorrow!",
      "parentUuid": "04647c79_dc3ff796",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14b27c27_1cdd8c23",
        "filename": "src/numbers/conversions-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 117,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-10T10:05:24Z",
      "side": 1,
      "message": "I didn\u0027t suggest to remove it, I just want to understand.",
      "parentUuid": "0ad49ccb_3671f4ac",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a52e531_37b4a28c",
        "filename": "src/numbers/conversions-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 117,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-11T07:46:52Z",
      "side": 1,
      "message": "Okay, I see. As far as I understand, it\u0027s a shortcut indeed, a fast path for certain cases. I\u0027d suggest that it stays here.",
      "parentUuid": "14b27c27_1cdd8c23",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3324a560_7ee3f140",
        "filename": "src/numbers/conversions-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 117,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-06-14T08:21:29Z",
      "side": 1,
      "message": "+1 on extending this to int64",
      "parentUuid": "5a52e531_37b4a28c",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0737779_aea99905",
        "filename": "src/numbers/conversions-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 117,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-14T09:30:00Z",
      "side": 1,
      "message": "Gave it another try, PTAL again.",
      "parentUuid": "3324a560_7ee3f140",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b863713_0e9bc1e4",
        "filename": "src/numbers/conversions-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 117,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-06-15T13:54:32Z",
      "side": 1,
      "message": "The fast path is still 32bit only here, no?",
      "parentUuid": "f0737779_aea99905",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "592fc98c_d2db4704",
        "filename": "src/numbers/conversions-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 117,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-15T14:33:15Z",
      "side": 1,
      "message": "Yes, I reverted the change as per Georg\u0027s later suggestion.",
      "parentUuid": "5b863713_0e9bc1e4",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce13df33_a6227111",
        "filename": "src/numbers/conversions-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 117,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-06-15T14:33:38Z",
      "side": 1,
      "message": "How about checking InRange(kMinSafeInteger, kMaxSafeInteger) and then just to the double conversion?",
      "parentUuid": "5b863713_0e9bc1e4",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a604639_ea18f029",
        "filename": "src/numbers/conversions-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 117,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-15T14:45:13Z",
      "side": 1,
      "message": "Done, PTAL again.",
      "parentUuid": "ce13df33_a6227111",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73c778d6_bdb4fff0",
        "filename": "src/numbers/conversions-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 129,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-09T09:56:03Z",
      "side": 1,
      "message": "You are masking with a 64-bit value, so the result can cast to the minimal int64_t value -2^63. (In fact the masking is pointless because the mask has every bit set.)",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f30559e9_24e85b8d",
        "filename": "src/numbers/conversions-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 129,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-10T09:30:41Z",
      "side": 1,
      "message": "Good point, I removed the masking. PTAL again.",
      "parentUuid": "73c778d6_bdb4fff0",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "695a50bd_767da417",
        "filename": "src/numbers/conversions-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 129,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-10T10:05:24Z",
      "side": 1,
      "message": "That doesn\u0027t avoid the case where you multiply -1 with -2^63 and thus get undefined behavior.",
      "parentUuid": "f30559e9_24e85b8d",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37181fab_ba472de2",
        "filename": "src/numbers/conversions-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 129,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-11T07:46:52Z",
      "side": 1,
      "message": "Okay, maybe I didn\u0027t get the purpose of the original code then. What kind of mask can we apply for the 64-bit case?",
      "parentUuid": "695a50bd_767da417",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67994fe5_007a98d3",
        "filename": "src/numbers/conversions.h",
        "patchSetId": 9
      },
      "lineNbr": 76,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-06-09T14:31:10Z",
      "side": 1,
      "message": "could you add some explicit unittests for this as well?",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 76,
        "endChar": 41
      },
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf634d90_c5f01552",
        "filename": "src/numbers/conversions.h",
        "patchSetId": 9
      },
      "lineNbr": 76,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-14T09:30:00Z",
      "side": 1,
      "message": "I can\u0027t find unittests for the rest of the methods here. Could you point me to a good place to add them? Thanks!",
      "parentUuid": "67994fe5_007a98d3",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 76,
        "endChar": 41
      },
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "380c0519_94cbc2ab",
        "filename": "src/numbers/conversions.h",
        "patchSetId": 9
      },
      "lineNbr": 76,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-06-14T09:38:08Z",
      "side": 1,
      "message": "test/unittests/numbers/conversions-unittest.cc would be the place for it.",
      "parentUuid": "bf634d90_c5f01552",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 76,
        "endChar": 41
      },
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea01f8cb_532b272a",
        "filename": "src/numbers/conversions.h",
        "patchSetId": 9
      },
      "lineNbr": 76,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-14T12:21:23Z",
      "side": 1,
      "message": "Thanks, added tests for the signed versions of the new methods and for the 32-bit ones too, PTAL.",
      "parentUuid": "380c0519_94cbc2ab",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 76,
        "endChar": 41
      },
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f1a154f_82ccf829",
        "filename": "test/mjsunit/compiler/fast-api-sequences.js",
        "patchSetId": 9
      },
      "lineNbr": 15,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-09T09:34:17Z",
      "side": 1,
      "message": "Does this belong here?",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3742a68d_62a93747",
        "filename": "test/mjsunit/compiler/fast-api-sequences.js",
        "patchSetId": 9
      },
      "lineNbr": 15,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-10T09:30:41Z",
      "side": 1,
      "message": "Not really, thanks!",
      "parentUuid": "7f1a154f_82ccf829",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1795d38_bf3f7dd8",
        "filename": "test/mjsunit/compiler/fast-api-sequences.js",
        "patchSetId": 9
      },
      "lineNbr": 25,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-09T09:34:17Z",
      "side": 1,
      "message": "Please wrap long lines.",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51479655_8b24222f",
        "filename": "test/mjsunit/compiler/fast-api-sequences.js",
        "patchSetId": 9
      },
      "lineNbr": 25,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-10T09:30:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c1795d38_bf3f7dd8",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb79278b_f6fd29a1",
        "filename": "test/mjsunit/compiler/fast-api-sequences.js",
        "patchSetId": 9
      },
      "lineNbr": 33,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-06-09T09:34:17Z",
      "side": 1,
      "message": "How about making the array an argument to your test function so that you can write something easier to grasp:\n\nassertEquals(3, add_all_sequence_smi([-42, 45]));",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd7b9894_0f51997d",
        "filename": "test/mjsunit/compiler/fast-api-sequences.js",
        "patchSetId": 9
      },
      "lineNbr": 33,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-06-10T09:30:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb79278b_f6fd29a1",
      "revId": "2878018254813ad7adc9c9e6df3cb26154649b34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}