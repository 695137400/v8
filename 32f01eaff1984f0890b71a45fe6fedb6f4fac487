{
  "comments": [
    {
      "key": {
        "uuid": "f7e24b6f_c14c52a0",
        "filename": "test/cctest/cctest.status",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-03-02T11:04:44Z",
      "side": 0,
      "message": "No longer exists.",
      "revId": "32f01eaff1984f0890b71a45fe6fedb6f4fac487",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4eec9884_72e1f581",
        "filename": "test/mjsunit/mjsunit.status",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-03-02T09:49:39Z",
      "side": 0,
      "message": "This!\n\nThis is not the same as what the right side does. Test expectations are additive. With [ALWAYS, [FAIL]], [noi18n, [PASS]], you\u0027re re-creating the earlier situation of the test failing without anyone noticing, because the resulting expectations are:\n(normal): [FAIL]\n(noi18n): [PASS, FAIL]\nWhereas what you want is:\n(normal): [FAIL, PASS] # Don\u0027t care\n(noi18n): [PASS]",
      "range": {
        "startLine": 68,
        "startChar": 2,
        "endLine": 70,
        "endChar": 0
      },
      "revId": "32f01eaff1984f0890b71a45fe6fedb6f4fac487",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6419b854_a3416bad",
        "filename": "test/mjsunit/mjsunit.status",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-03-02T10:02:21Z",
      "side": 0,
      "message": "Damnit. I thought of our conversation while writing this CL but then forgot about checking whether this applies just to inline conditions (as above) or also to entire variant blocks like L385 below. \n\nAssuming it does apply to variant blocks, that\u0027s super-unexpected. Each block should really override any other settings for the same test case, or abort execution and print a warning about conflicting settings..\n\nIn any case I\u0027ll fix the issue here.",
      "parentUuid": "4eec9884_72e1f581",
      "range": {
        "startLine": 68,
        "startChar": 2,
        "endLine": 70,
        "endChar": 0
      },
      "revId": "32f01eaff1984f0890b71a45fe6fedb6f4fac487",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d34da1b7_206aa3d6",
        "filename": "test/mjsunit/mjsunit.status",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-03-02T11:05:09Z",
      "side": 0,
      "message": "Fixed in the latest PS.",
      "parentUuid": "6419b854_a3416bad",
      "range": {
        "startLine": 68,
        "startChar": 2,
        "endLine": 70,
        "endChar": 0
      },
      "revId": "32f01eaff1984f0890b71a45fe6fedb6f4fac487",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9090521_82043bc9",
        "filename": "test/mjsunit/mjsunit.status",
        "patchSetId": 5
      },
      "lineNbr": 397,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-03-02T11:04:44Z",
      "side": 0,
      "message": "AFAICT this was not meaningful.",
      "revId": "32f01eaff1984f0890b71a45fe6fedb6f4fac487",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}