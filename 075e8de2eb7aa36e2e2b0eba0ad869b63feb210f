{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "693621c0_944caa4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2023-05-05T06:40:52Z",
      "side": 1,
      "message": "Alex, could you take over this review?",
      "revId": "075e8de2eb7aa36e2e2b0eba0ad869b63feb210f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ac4cd5d_7226a74f",
        "filename": "tools/release/roll_merge_gerrit.py",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1524899
      },
      "writtenOn": "2023-05-05T14:01:01Z",
      "side": 1,
      "message": "Why does the status need to be `NEW`?\n\nI think you can directly add this into the the search filter as part of `QueryChanges`.",
      "range": {
        "startLine": 81,
        "startChar": 7,
        "endLine": 81,
        "endChar": 38
      },
      "revId": "075e8de2eb7aa36e2e2b0eba0ad869b63feb210f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9ef23a8_fb943f99",
        "filename": "tools/release/roll_merge_gerrit.py",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2023-05-05T14:07:06Z",
      "side": 1,
      "message": "Because I want to avoid trying to patch abandoned or merged CLs. Filtering in the query could work though -- the thinking here was that I first pick the latest CL, and only then check whether it was actually merged or not.",
      "parentUuid": "8ac4cd5d_7226a74f",
      "range": {
        "startLine": 81,
        "startChar": 7,
        "endLine": 81,
        "endChar": 38
      },
      "revId": "075e8de2eb7aa36e2e2b0eba0ad869b63feb210f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35dc5868_f53d7d38",
        "filename": "tools/release/roll_merge_gerrit.py",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1524899
      },
      "writtenOn": "2023-05-05T14:22:17Z",
      "side": 1,
      "message": "Is `gerrit_util.CherryPick` patching a CL? My understanding is that this script creates a new cherry-picked CL targeting the identified branch only.\n\nIf the script is only used to unblock roll CLs which cannot land, this makes sense. If we accept `new` and `merged` here, we update the most recently rolled branch, independent of being landed already?\n\nI am also wondering if a prompt could make sense to confirm that the dev really wanted to target this branch. It might happen that we have the most recent roll 11.5.49 (status new), and a newer cherry-pick on 11.5.40.1 (status new). The dev might plan to target 11.5.49, while he actually creates a cherry-pick on branch 11.5.40.",
      "parentUuid": "a9ef23a8_fb943f99",
      "range": {
        "startLine": 81,
        "startChar": 7,
        "endLine": 81,
        "endChar": 38
      },
      "revId": "075e8de2eb7aa36e2e2b0eba0ad869b63feb210f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0130f5e_967db926",
        "filename": "tools/release/roll_merge_gerrit.py",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2023-05-05T14:24:41Z",
      "side": 1,
      "message": "Perhaps then I should error if there are multiple `new` CLs? Patching a recently rolled branch doesn\u0027t make much sense, we almost always patch to unblock a roll, rather than to post-hoc fix a roll.",
      "parentUuid": "35dc5868_f53d7d38",
      "range": {
        "startLine": 81,
        "startChar": 7,
        "endLine": 81,
        "endChar": 38
      },
      "revId": "075e8de2eb7aa36e2e2b0eba0ad869b63feb210f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}