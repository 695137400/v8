{
  "comments": [
    {
      "key": {
        "uuid": "77b6f3c1_1db7191f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 17,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2019-04-30T01:06:42Z",
      "side": 1,
      "message": "CL description needs to be updated",
      "revId": "0ccf3fea4cf4fa964e390f718d66ab7b1984c5c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ae52d60_5fff6c2b",
        "filename": "src/ast/scopes.cc",
        "patchSetId": 21
      },
      "lineNbr": 152,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2019-04-30T01:06:42Z",
      "side": 1,
      "message": "Why is this needed? Can you lookup the brand in scope info always? Do you think it\u0027s too slow? I generally don\u0027t like having to keep multiple states in sync \n(DCHECK_IMPLIES(scope_info-\u003eHasClassBrand(), LookupInscopeInfo(ast_value_factory-\u003edot_brand_string(), this) !\u003d nullptr))",
      "range": {
        "startLine": 152,
        "startChar": 18,
        "endLine": 152,
        "endChar": 31
      },
      "revId": "0ccf3fea4cf4fa964e390f718d66ab7b1984c5c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "254e98cd_e659d6d3",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 21
      },
      "lineNbr": 1169,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2019-04-30T01:06:42Z",
      "side": 1,
      "message": "Isn\u0027t this exactly coped in VisitCallSuper? can you refactor everything into a single function?",
      "range": {
        "startLine": 1160,
        "startChar": 0,
        "endLine": 1169,
        "endChar": 5
      },
      "revId": "0ccf3fea4cf4fa964e390f718d66ab7b1984c5c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff1cd44b_74dc1741",
        "filename": "src/parsing/parser-base.h",
        "patchSetId": 21
      },
      "lineNbr": 4300,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2019-04-30T01:06:42Z",
      "side": 1,
      "message": "All this nested if-else is confusing. Please refactor to be more readable.\n\nif (V8_UNLIKELY(prop_info.is_private)) {\n  ...\n  impl()-\u003eInferFunctionName();\n  continue;\n}\n\nif (V8_UNLIKELY(is_field)) {\n  DCHECK(!prop_info.is_private);\n  ...\n  impl()-\u003eInferFunctionName();\n  continue;\n}\n\n\nimpl()-\u003eDeclarePublicClassMethod();\nimpl()-\u003eInferFunctionName();",
      "range": {
        "startLine": 4276,
        "startChar": 0,
        "endLine": 4300,
        "endChar": 5
      },
      "revId": "0ccf3fea4cf4fa964e390f718d66ab7b1984c5c6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}