{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a83dea30_2bd115e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-01-27T12:36:07Z",
      "side": 1,
      "message": "ptal since you suggested the JS pattern :)",
      "revId": "375d54b271dea40812981a342c6aceeaa4f43357",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ddfe4c71_336e0d87",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2022-01-27T16:24:38Z",
      "side": 1,
      "message": "LGTM with a suggestion.",
      "revId": "375d54b271dea40812981a342c6aceeaa4f43357",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e2b8ca4_adeb887c",
        "filename": "test/js-perf-test/Array/run.js",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2022-01-27T16:24:38Z",
      "side": 1,
      "message": "Well, if it _is_ allocation sites, then you can probably fix it by replacing line 45 with a copy of lines 37+38 (and accordingly for double/fast elements below).",
      "range": {
        "startLine": 39,
        "startChar": 52,
        "endLine": 39,
        "endChar": 69
      },
      "revId": "375d54b271dea40812981a342c6aceeaa4f43357",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa7f7ccd_c8b6246b",
        "filename": "test/js-perf-test/Array/run.js",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-02-08T11:19:18Z",
      "side": 1,
      "message": "So, more hacking on this just increased frustration. It\u0027s indeed allocation sites, but your suggestion is not sufficient to fix the issue since setup functions are reused through all subtests (filter, every, map, ...). Thus if any subtest changes the elements kind of the allocated array, that\u0027s propagated to the allocation site.\n\nNow a solution to this is to create a fresh setup closure for each subitem; that again helps but is not sufficient, I assume since the line item is itself run in a loop.\n\nSo, either we teach the runner itself to create a new setup closure on each iteration, or we disable allocation site tracking (impossible currently since it\u0027s a build-time flag).\n\nMy conclusion is, it\u0027s not worth the time to fix this test that nobody needs.\n\nOTOH it\u0027s misleading to keep the test around. Shall we just delete it?",
      "parentUuid": "6e2b8ca4_adeb887c",
      "range": {
        "startLine": 39,
        "startChar": 52,
        "endLine": 39,
        "endChar": 69
      },
      "revId": "375d54b271dea40812981a342c6aceeaa4f43357",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2b4615c_a4c6186b",
        "filename": "test/js-perf-test/Array/run.js",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2022-02-08T14:20:19Z",
      "side": 1,
      "message": "I\u0027d say: let\u0027s keep the test, including the TODO and the commented-out assert. As long as we claim to care about packed elements, we should test them, so we should fix this test. (I\u0027m fine with landing this CL as-is as an incremental improvement.)",
      "parentUuid": "fa7f7ccd_c8b6246b",
      "range": {
        "startLine": 39,
        "startChar": 52,
        "endLine": 39,
        "endChar": 69
      },
      "revId": "375d54b271dea40812981a342c6aceeaa4f43357",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b98947fb_d2f69680",
        "filename": "test/js-perf-test/Array/run.js",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-02-09T07:03:05Z",
      "side": 1,
      "message": "To clarify, you say \u0027test\u0027 but we\u0027re talking about microbenchmarks. In my experience, js-perf-tests are not useful (after perhaps a period of time in which the feature author actively watches the test). Perf sheriffs tend to ignore most js-perf-test alerts since they are so common and flaky.\n\nIMO a misleading benchmark with line items named \u0027packed\u0027, \u0027holey\u0027, ..., while the underlying behavior is actually different, is more harmful than helpful.\n\nAnyway - the current CL improves things slightly, so I\u0027ll go ahead and land it with your suggested change.",
      "parentUuid": "b2b4615c_a4c6186b",
      "range": {
        "startLine": 39,
        "startChar": 52,
        "endLine": 39,
        "endChar": 69
      },
      "revId": "375d54b271dea40812981a342c6aceeaa4f43357",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}