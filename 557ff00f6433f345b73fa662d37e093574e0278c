{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4eb599f9_ffcdd138",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-12-13T15:51:54Z",
      "side": 1,
      "message": "Finally gcc and msvc are satisfied.. \nVictor PTAL again.\nAlso Leszek PTAL.",
      "revId": "557ff00f6433f345b73fa662d37e093574e0278c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5db8d6be_597dabca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2022-12-14T09:26:24Z",
      "side": 1,
      "message": "LGTM! But wait for Leszek to review the template sorcery!",
      "revId": "557ff00f6433f345b73fa662d37e093574e0278c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c0c9163_bacfb794",
        "filename": "src/maglev/arm64/maglev-assembler-arm64-inl.h",
        "patchSetId": 11
      },
      "lineNbr": 131,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2022-12-14T10:28:59Z",
      "side": 1,
      "message": "maybe it\u0027s clearer to load `iter \u003d range.rbegin()` and `end \u003d range.rend()` before this `if`, and then do something like `PushAllReverse(masm, *iter, args...); iter++;` here.",
      "range": {
        "startLine": 130,
        "startChar": 0,
        "endLine": 131,
        "endChar": 61
      },
      "revId": "557ff00f6433f345b73fa662d37e093574e0278c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dca20496_da4e664f",
        "filename": "src/maglev/arm64/maglev-assembler-arm64-inl.h",
        "patchSetId": 11
      },
      "lineNbr": 131,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-12-14T10:55:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c0c9163_bacfb794",
      "range": {
        "startLine": 130,
        "startChar": 0,
        "endLine": 131,
        "endChar": 61
      },
      "revId": "557ff00f6433f345b73fa662d37e093574e0278c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "414df8b5_f00231ef",
        "filename": "src/maglev/arm64/maglev-assembler-arm64-inl.h",
        "patchSetId": 11
      },
      "lineNbr": 169,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2022-12-14T09:26:24Z",
      "side": 1,
      "message": "Maybe we should remove the ip0, ip1 dependency here.\nWrite something like\n```\n  UseScratchRegisterScope temps(masm);\n  Register r1 \u003d temps.AcquireX();\n  Register r2 \u003d temps.AcquireX();\n```\nIn the end, it will be ip0 and ip1 used, but this checks if they were not used by the Push caller before.",
      "range": {
        "startLine": 169,
        "startChar": 8,
        "endLine": 169,
        "endChar": 33
      },
      "revId": "557ff00f6433f345b73fa662d37e093574e0278c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fabb3c1f_4fc9fcd1",
        "filename": "src/maglev/arm64/maglev-assembler-arm64-inl.h",
        "patchSetId": 11
      },
      "lineNbr": 169,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-12-14T10:01:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "414df8b5_f00231ef",
      "range": {
        "startLine": 169,
        "startChar": 8,
        "endLine": 169,
        "endChar": 33
      },
      "revId": "557ff00f6433f345b73fa662d37e093574e0278c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62926957_a6345835",
        "filename": "src/maglev/maglev-assembler.h",
        "patchSetId": 11
      },
      "lineNbr": 490,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2022-12-14T10:28:59Z",
      "side": 1,
      "message": "would `base::iterator_range` work here instead of a custom type for maglev?",
      "range": {
        "startLine": 490,
        "startChar": 6,
        "endLine": 490,
        "endChar": 15
      },
      "revId": "557ff00f6433f345b73fa662d37e093574e0278c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b099a8b4_31126f1d",
        "filename": "src/maglev/maglev-assembler.h",
        "patchSetId": 11
      },
      "lineNbr": 490,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-12-14T10:55:21Z",
      "side": 1,
      "message": "Absolutely! Changed.",
      "parentUuid": "62926957_a6345835",
      "range": {
        "startLine": 490,
        "startChar": 6,
        "endLine": 490,
        "endChar": 15
      },
      "revId": "557ff00f6433f345b73fa662d37e093574e0278c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}