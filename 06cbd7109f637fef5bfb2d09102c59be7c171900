{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4c58ec4a_5a4047d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2021-07-05T09:56:10Z",
      "side": 1,
      "message": "Ross, Toon PTAL.\nDominik, PTAL at src/heap. ",
      "revId": "06cbd7109f637fef5bfb2d09102c59be7c171900",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4edfc313_85c9369f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2021-07-05T14:45:47Z",
      "side": 1,
      "message": "Overall approach looks good to me, thanks. I\u0027ll let Dominik review the GC parts in detail.",
      "revId": "06cbd7109f637fef5bfb2d09102c59be7c171900",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06d0341f_a58c15c8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2021-07-06T07:00:34Z",
      "side": 1,
      "message": "Very cool! LGTM with comments",
      "revId": "06cbd7109f637fef5bfb2d09102c59be7c171900",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f87a70df_03d795cb",
        "filename": "src/objects/js-function-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 288,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2021-07-05T14:45:47Z",
      "side": 1,
      "message": "nit - should we rename this enum and the values?",
      "range": {
        "startLine": 288,
        "startChar": 14,
        "endLine": 288,
        "endChar": 51
      },
      "revId": "06cbd7109f637fef5bfb2d09102c59be7c171900",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf13d8e6_e455d5e2",
        "filename": "src/objects/js-function-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 290,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2021-07-06T07:00:34Z",
      "side": 1,
      "message": "Hmm, AFAIU the JSFunction itself should always be fully initialized (please correct me if I am wrong). What might not be fully initialized here is the SFI (although we use acquire load to defend against that) and the Code object referenced from here.",
      "revId": "06cbd7109f637fef5bfb2d09102c59be7c171900",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63b275fd_2ae71dec",
        "filename": "src/objects/js-function-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 298,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2021-07-06T07:00:34Z",
      "side": 1,
      "message": "We only do a relaxed load to get the Code object, so I think Code::kind() might be uninitialized (again, please correct me if I am wrong). I think this is fine though, since for false positives we recheck in the final atomic pause and for false negatives we would flush them in the next GC. Should we add a comment to explain this?",
      "revId": "06cbd7109f637fef5bfb2d09102c59be7c171900",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a382cdfa_78f2e514",
        "filename": "src/objects/js-function-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 327,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2021-07-06T07:00:34Z",
      "side": 1,
      "message": "Nit: Maybe related to Ross\u0027 comment: Should the name of this flag change as well? We use this flag to also control baseline flushing here.",
      "revId": "06cbd7109f637fef5bfb2d09102c59be7c171900",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bbb382b_8c324e08",
        "filename": "src/objects/objects-body-descriptors-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 311,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2021-07-05T14:45:47Z",
      "side": 1,
      "message": "nit - fullstop",
      "range": {
        "startLine": 311,
        "startChar": 0,
        "endLine": 311,
        "endChar": 45
      },
      "revId": "06cbd7109f637fef5bfb2d09102c59be7c171900",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45d7cadf_581c087c",
        "filename": "src/objects/objects-body-descriptors-inl.h",
        "patchSetId": 9
      },
      "lineNbr": 318,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2021-07-06T07:00:34Z",
      "side": 1,
      "message": "Nit: typo",
      "revId": "06cbd7109f637fef5bfb2d09102c59be7c171900",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}