{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a6c978f5_cd7b43e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2021-12-28T10:08:50Z",
      "side": 1,
      "message": "The CL says it fixes a scope but I only see that it adds new scopes without touching existing ones. Am I missing something?",
      "revId": "047d1939f8fd65ad88d8cce005b8c745dac1cc7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89e15b97_8debdc2e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2021-12-28T10:22:17Z",
      "side": 1,
      "message": "It fixes the scope in the sense that, e.g., V8.GC.Cycle.Young will track additional time periods that it didn\u0027t track so far. Basically, this fix adjusts the value of the new metric V8.GC.Cycle.Young, so that it matches that of the old metric V8.GCScavenger. If the phrasing is misleading, let\u0027s change it.",
      "parentUuid": "a6c978f5_cd7b43e9",
      "revId": "047d1939f8fd65ad88d8cce005b8c745dac1cc7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb49b1ff_9dc09ea5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2021-12-28T11:04:34Z",
      "side": 1,
      "message": "lgtm",
      "revId": "047d1939f8fd65ad88d8cce005b8c745dac1cc7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11e6943e_99657082",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2021-12-28T11:04:34Z",
      "side": 1,
      "message": "Ack.\n(Maybe to rephrase to fixing the histogram/metric values since existing scopes remain the same)",
      "parentUuid": "89e15b97_8debdc2e",
      "revId": "047d1939f8fd65ad88d8cce005b8c745dac1cc7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ed8ae11_b2a02f07",
        "filename": "src/heap/heap.cc",
        "patchSetId": 3
      },
      "lineNbr": 1426,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2022-01-04T11:20:38Z",
      "side": 1,
      "message": "DCHECK_EQ(GarbageCollector::MARK_COMPACTOR, collector)",
      "revId": "047d1939f8fd65ad88d8cce005b8c745dac1cc7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb38b58b_78aab6df",
        "filename": "src/heap/heap.cc",
        "patchSetId": 3
      },
      "lineNbr": 1426,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2022-01-04T13:34:07Z",
      "side": 1,
      "message": "Done. This could similarly be added to Heap::GCTypeTimer.",
      "parentUuid": "2ed8ae11_b2a02f07",
      "revId": "047d1939f8fd65ad88d8cce005b8c745dac1cc7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9dcf12f_49503a1c",
        "filename": "src/heap/heap.cc",
        "patchSetId": 3
      },
      "lineNbr": 1776,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2022-01-04T11:20:38Z",
      "side": 1,
      "message": "The block below is not dealing with the \"finishing parts of the last GC cycle\". It\u0027s executing GC proglogue callbacks.",
      "range": {
        "startLine": 1776,
        "startChar": 22,
        "endLine": 1776,
        "endChar": 31
      },
      "revId": "047d1939f8fd65ad88d8cce005b8c745dac1cc7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27a60f2b_dbef1f52",
        "filename": "src/heap/heap.cc",
        "patchSetId": 3
      },
      "lineNbr": 1776,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2022-01-04T13:34:07Z",
      "side": 1,
      "message": "Yes, fixing the comment is the easy part.\nBut the epoch has not changed yet, so this will be attributed to the previous epoch. Does this make sense?",
      "parentUuid": "a9dcf12f_49503a1c",
      "range": {
        "startLine": 1776,
        "startChar": 22,
        "endLine": 1776,
        "endChar": 31
      },
      "revId": "047d1939f8fd65ad88d8cce005b8c745dac1cc7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e6689f2_0b3fb313",
        "filename": "src/heap/heap.cc",
        "patchSetId": 3
      },
      "lineNbr": 1817,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2022-01-04T11:20:38Z",
      "side": 1,
      "message": "Why? Epoch marks a new cycle and should be the same for all GCs, independent of whether they are using third party heap or not. L2166 is still doing the update, so this would update it twice?",
      "range": {
        "startLine": 1817,
        "startChar": 11,
        "endLine": 1817,
        "endChar": 16
      },
      "revId": "047d1939f8fd65ad88d8cce005b8c745dac1cc7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bd5432e_f943dae6",
        "filename": "src/heap/heap.cc",
        "patchSetId": 3
      },
      "lineNbr": 1817,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2022-01-04T13:34:07Z",
      "side": 1,
      "message": "This is for the case of the third-party heap. In this case, PerformGarbageCollection is not called, so this should be the only invocation of UpdateCurrentEpoch.\n\nThis could only be problematic if the third-party heap kept a pointer to the heap object and its CollectGarbage method updated the heap\u0027s epoch.",
      "parentUuid": "6e6689f2_0b3fb313",
      "range": {
        "startLine": 1817,
        "startChar": 11,
        "endLine": 1817,
        "endChar": 16
      },
      "revId": "047d1939f8fd65ad88d8cce005b8c745dac1cc7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52545d1e_64685aeb",
        "filename": "src/heap/heap.cc",
        "patchSetId": 3
      },
      "lineNbr": 2188,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2022-01-04T11:20:38Z",
      "side": 1,
      "message": "Why can\u0027t we just move this one somewhere around L1773.\n\nWith all the different blocks using the same scope id it\u0027s easy to miss some action in between.",
      "range": {
        "startLine": 2188,
        "startChar": 2,
        "endLine": 2188,
        "endChar": 16
      },
      "revId": "047d1939f8fd65ad88d8cce005b8c745dac1cc7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "611a9944_c68e19fc",
        "filename": "src/heap/heap.cc",
        "patchSetId": 3
      },
      "lineNbr": 2188,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2022-01-04T13:34:07Z",
      "side": 1,
      "message": "The first CL that I had did just this.\nI talked to Dominik and he confirmed that it\u0027s wrong, though.\n\nIn that case, some of the tracing would be associated with the wrong epoch.\nThe lifetime of the GCTracer spans two successive epochs.\nSome things should be traced in the first epoch and some in the second.",
      "parentUuid": "52545d1e_64685aeb",
      "range": {
        "startLine": 2188,
        "startChar": 2,
        "endLine": 2188,
        "endChar": 16
      },
      "revId": "047d1939f8fd65ad88d8cce005b8c745dac1cc7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}