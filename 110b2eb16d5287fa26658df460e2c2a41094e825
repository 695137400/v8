{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bfd1151f_5bbb226a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2023-11-17T14:27:47Z",
      "side": 1,
      "message": "@dinfuehr@chromium.org: PTAL\n@dmercadier@chromium.org: FYI",
      "revId": "110b2eb16d5287fa26658df460e2c2a41094e825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eff8ad83_b383d82e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2023-11-17T15:04:16Z",
      "side": 1,
      "message": "src/base, src/compiler and test LGTM ;)\n(or, put otherwise: everything LGTM, except src/handles, which I didn\u0027t review)",
      "revId": "110b2eb16d5287fa26658df460e2c2a41094e825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c929c671_c57c749e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2023-11-17T19:18:53Z",
      "side": 1,
      "message": "src/handles LGTM",
      "revId": "110b2eb16d5287fa26658df460e2c2a41094e825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "863c159a_278ac99d",
        "filename": "src/base/doubly-threaded-list.h",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2023-11-17T14:27:47Z",
      "side": 1,
      "message": "We cannot use `std::find(begin(), end(), needle) !\u003d end()` because the iterators don\u0027t have the same type. We can fix this in a follow up.",
      "range": {
        "startLine": 132,
        "startChar": 4,
        "endLine": 132,
        "endChar": 7
      },
      "revId": "110b2eb16d5287fa26658df460e2c2a41094e825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5fc8943_8abcd79a",
        "filename": "src/base/doubly-threaded-list.h",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2023-11-17T19:19:27Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "863c159a_278ac99d",
      "range": {
        "startLine": 132,
        "startChar": 4,
        "endLine": 132,
        "endChar": 7
      },
      "revId": "110b2eb16d5287fa26658df460e2c2a41094e825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "654dead9_8e6e25f2",
        "filename": "src/handles/traced-handles.cc",
        "patchSetId": 1
      },
      "lineNbr": 463,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2023-11-17T14:27:47Z",
      "side": 1,
      "message": "DoublyThreadedList doesn\u0027t have a `Size()` because it wants to have a `static Remove(T x)` that can just unlink without knowing the head.",
      "range": {
        "startLine": 463,
        "startChar": 9,
        "endLine": 463,
        "endChar": 20
      },
      "revId": "110b2eb16d5287fa26658df460e2c2a41094e825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "590fbfdf_39ec6419",
        "filename": "src/handles/traced-handles.cc",
        "patchSetId": 1
      },
      "lineNbr": 463,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2023-11-17T19:19:27Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "654dead9_8e6e25f2",
      "range": {
        "startLine": 463,
        "startChar": 9,
        "endLine": 463,
        "endChar": 20
      },
      "revId": "110b2eb16d5287fa26658df460e2c2a41094e825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95a98248_dc2dd0ec",
        "filename": "src/handles/traced-handles.cc",
        "patchSetId": 1
      },
      "lineNbr": 508,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2023-11-17T14:27:47Z",
      "side": 1,
      "message": "I introduce the invariant here that full blocks are immediately removed from the `used_blocks_` list to be able to rely on this in L518.",
      "range": {
        "startLine": 508,
        "startChar": 25,
        "endLine": 508,
        "endChar": 31
      },
      "revId": "110b2eb16d5287fa26658df460e2c2a41094e825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6288d65_677588ff",
        "filename": "src/handles/traced-handles.cc",
        "patchSetId": 1
      },
      "lineNbr": 508,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2023-11-17T19:18:53Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "95a98248_dc2dd0ec",
      "range": {
        "startLine": 508,
        "startChar": 25,
        "endLine": 508,
        "endChar": 31
      },
      "revId": "110b2eb16d5287fa26658df460e2c2a41094e825",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "110b2eb16d5287fa26658df460e2c2a41094e825",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "110b2eb16d5287fa26658df460e2c2a41094e825",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "110b2eb16d5287fa26658df460e2c2a41094e825",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "110b2eb16d5287fa26658df460e2c2a41094e825",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}