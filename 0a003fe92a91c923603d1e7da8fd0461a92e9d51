{
  "comments": [
    {
      "key": {
        "uuid": "8286bbe6_c2ecdddd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2019-09-20T10:44:25Z",
      "side": 1,
      "message": "Are there an benchmark results that show this improves performance?",
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29eb7202_99aa6d4b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2019-09-20T10:45:34Z",
      "side": 1,
      "message": "Afaik the main reason is to, in the future, save memory by removing the extension slot from contexts that can\u0027t have it.",
      "parentUuid": "8286bbe6_c2ecdddd",
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "301b9f62_6c0c49a1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2019-09-20T10:50:04Z",
      "side": 1,
      "message": "Sounds reasonable, can we add that to the comment and bug?",
      "parentUuid": "29eb7202_99aa6d4b",
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0347000a_676fadeb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2019-09-20T10:52:04Z",
      "side": 1,
      "message": "Precisely, I am trying to land this small CL that just adds a bit in the length field, later I will remove the extension slots and save memory. It will probably also improve a bit performance, since interpreter-assembler.cc:GotoIfHasContextExtensionUpToDepth checks a single bit now, instead of comparing pointers.",
      "parentUuid": "29eb7202_99aa6d4b",
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eefa520d_a9e644d3",
        "filename": "src/heap/factory.cc",
        "patchSetId": 2
      },
      "lineNbr": 1424,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2019-09-20T09:58:26Z",
      "side": 1,
      "message": "Should the method be called initialize_length_and_extension_bit?\n\nNit: we generally prefer enum class with descriptive name instead of boolean values. It improve readability, e.g.\n\ncontext-\u003einitialize_length_and_extenstion(variadic_part_length, HasExtension::kYes);",
      "range": {
        "startLine": 1424,
        "startChar": 11,
        "endLine": 1424,
        "endChar": 28
      },
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05812421_1017fdf4",
        "filename": "src/heap/factory.cc",
        "patchSetId": 2
      },
      "lineNbr": 1424,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2019-09-20T10:07:38Z",
      "side": 1,
      "message": "Sure. I can modify this.",
      "parentUuid": "eefa520d_a9e644d3",
      "range": {
        "startLine": 1424,
        "startChar": 11,
        "endLine": 1424,
        "endChar": 28
      },
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65898143_66ebad2f",
        "filename": "src/heap/factory.cc",
        "patchSetId": 2
      },
      "lineNbr": 1424,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2019-09-20T10:52:04Z",
      "side": 1,
      "message": "No need for the enum at the moment.",
      "parentUuid": "05812421_1017fdf4",
      "range": {
        "startLine": 1424,
        "startChar": 11,
        "endLine": 1424,
        "endChar": 28
      },
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "874704b9_d78df4db",
        "filename": "src/heap/factory.cc",
        "patchSetId": 2
      },
      "lineNbr": 1424,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2019-09-20T11:06:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65898143_66ebad2f",
      "range": {
        "startLine": 1424,
        "startChar": 11,
        "endLine": 1424,
        "endChar": 28
      },
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2fe42f1f_276b6a3f",
        "filename": "src/interpreter/interpreter-assembler.cc",
        "patchSetId": 2
      },
      "lineNbr": 207,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2019-09-20T10:44:25Z",
      "side": 1,
      "message": "Any reason  to move this to VariableList? A CL just landed moving these to initializer lists in the Lable constructor where possible",
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24436738_36ce8528",
        "filename": "src/interpreter/interpreter-assembler.cc",
        "patchSetId": 2
      },
      "lineNbr": 207,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2019-09-20T10:52:04Z",
      "side": 1,
      "message": "My mistake, I will revert that.",
      "parentUuid": "2fe42f1f_276b6a3f",
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f73d3848_e0e8ce7e",
        "filename": "src/interpreter/interpreter-assembler.cc",
        "patchSetId": 2
      },
      "lineNbr": 228,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2019-09-20T10:44:25Z",
      "side": 1,
      "message": "I\u0027d prefer this was scoped withini the context_search scope since it\u0027s still part of that loop.",
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "279c14c3_d3ad8aab",
        "filename": "src/interpreter/interpreter-assembler.cc",
        "patchSetId": 2
      },
      "lineNbr": 228,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2019-09-20T10:52:04Z",
      "side": 1,
      "message": "Ok.",
      "parentUuid": "f73d3848_e0e8ce7e",
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38add308_b7a988d9",
        "filename": "src/interpreter/interpreter-assembler.cc",
        "patchSetId": 2
      },
      "lineNbr": 228,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2019-09-20T11:06:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "279c14c3_d3ad8aab",
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53f353d4_c530b96f",
        "filename": "src/objects/contexts-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2019-09-20T09:58:26Z",
      "side": 1,
      "message": "How is it possible that the extension bit is set but the extension is the hole?",
      "range": {
        "startLine": 110,
        "startChar": 9,
        "endLine": 110,
        "endChar": 33
      },
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e69ccfd_1c46f996",
        "filename": "src/objects/contexts-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2019-09-20T10:07:38Z",
      "side": 1,
      "message": "The extension flag actually says that the context might have an extension field. It could still be the hole. I will submit another CL later to remove the extension field for theses contexts that we know they could never have an extension.",
      "parentUuid": "53f353d4_c530b96f",
      "range": {
        "startLine": 110,
        "startChar": 9,
        "endLine": 110,
        "endChar": 33
      },
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09c5b404_4fe93972",
        "filename": "src/objects/contexts-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2019-09-20T10:52:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e69ccfd_1c46f996",
      "range": {
        "startLine": 110,
        "startChar": 9,
        "endLine": 110,
        "endChar": 33
      },
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42e3bdef_1af21dc8",
        "filename": "src/objects/contexts-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2019-09-20T09:58:26Z",
      "side": 1,
      "message": "DCHECK that object is not the hole?",
      "range": {
        "startLine": 117,
        "startChar": 23,
        "endLine": 117,
        "endChar": 29
      },
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe6c9311_1e3404de",
        "filename": "src/objects/contexts-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2019-09-20T10:07:38Z",
      "side": 1,
      "message": "This can still be the hole. See previous comment.",
      "parentUuid": "42e3bdef_1af21dc8",
      "range": {
        "startLine": 117,
        "startChar": 23,
        "endLine": 117,
        "endChar": 29
      },
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f09c92d6_76eaebc5",
        "filename": "src/objects/contexts-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2019-09-20T10:52:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe6c9311_1e3404de",
      "range": {
        "startLine": 117,
        "startChar": 23,
        "endLine": 117,
        "endChar": 29
      },
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93e9dbc5_dea240e5",
        "filename": "src/objects/contexts-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 118,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2019-09-20T10:29:44Z",
      "side": 1,
      "message": "what does this mean? is the TODO to check if object.IsTheHole()?",
      "range": {
        "startLine": 118,
        "startChar": 2,
        "endLine": 118,
        "endChar": 62
      },
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5cc0e66_9f03e89f",
        "filename": "src/objects/contexts-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 118,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2019-09-20T10:39:59Z",
      "side": 1,
      "message": "At the moment, there are a lot o set_extension calls from heap/factory by contexts that do not have an extension. In a later CL, I want to set the extension bit only for these contexts that might potentially have an extension (those that we can only be sure dynamically).",
      "parentUuid": "93e9dbc5_dea240e5",
      "range": {
        "startLine": 118,
        "startChar": 2,
        "endLine": 118,
        "endChar": 62
      },
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ee01a2e_8bc97c03",
        "filename": "src/objects/contexts-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 118,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2019-09-20T10:52:04Z",
      "side": 1,
      "message": "I removed the TODO.",
      "parentUuid": "b5cc0e66_9f03e89f",
      "range": {
        "startLine": 118,
        "startChar": 2,
        "endLine": 118,
        "endChar": 62
      },
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "091acd7b_e3ac12ea",
        "filename": "src/objects/contexts.h",
        "patchSetId": 2
      },
      "lineNbr": 458,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2019-09-20T10:29:44Z",
      "side": 1,
      "message": "normally we would split this into two methods, set_length and set_has_extension, which each set the appropriate bits on the bitfield.",
      "range": {
        "startLine": 458,
        "startChar": 17,
        "endLine": 458,
        "endChar": 34
      },
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dfa87a0_6135ebb1",
        "filename": "src/objects/contexts.h",
        "patchSetId": 2
      },
      "lineNbr": 458,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2019-09-20T10:30:46Z",
      "side": 1,
      "message": "Okay, I can do that!",
      "parentUuid": "091acd7b_e3ac12ea",
      "range": {
        "startLine": 458,
        "startChar": 17,
        "endLine": 458,
        "endChar": 34
      },
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6ab7e99_87d77a51",
        "filename": "src/objects/contexts.h",
        "patchSetId": 2
      },
      "lineNbr": 458,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2019-09-20T11:06:05Z",
      "side": 1,
      "message": "No need for set_has_extension actually.",
      "parentUuid": "1dfa87a0_6135ebb1",
      "range": {
        "startLine": 458,
        "startChar": 17,
        "endLine": 458,
        "endChar": 34
      },
      "revId": "0a003fe92a91c923603d1e7da8fd0461a92e9d51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}