{
  "comments": [
    {
      "key": {
        "uuid": "7a7cc348_a067e1e7",
        "filename": "src/heap/heap-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 396,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-06-26T12:17:02Z",
      "side": 1,
      "message": "Is the intention to use this function only in the write-barrier (where I can see that it is hard to get the heap)? If so can we rename it more specifically? e.g. FromHeapObjectForWriteBarrier and forbid any use besides the write barrier case?\n\nIf it is intended to be used in general, then it seems too fragile.",
      "range": {
        "startLine": 396,
        "startChar": 6,
        "endLine": 396,
        "endChar": 26
      },
      "revId": "b1fe3a88114b30a384a20ed125d9298333d4a665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1a93dbc_e31d2e19",
        "filename": "src/heap/heap-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 396,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2018-06-26T12:32:59Z",
      "side": 1,
      "message": "Not uniquely for write barriers, but rather for writable objects that we can\u0027t guarantee are writable from type alone (e.g. FixedArray can\u0027t be guaranteed to be writable because empty_fixed_array is in RO space). I could change it to something like FromWritableHeapObject?\n\nAre you worried about the checks being too fragile?",
      "parentUuid": "7a7cc348_a067e1e7",
      "range": {
        "startLine": 396,
        "startChar": 6,
        "endLine": 396,
        "endChar": 26
      },
      "revId": "b1fe3a88114b30a384a20ed125d9298333d4a665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54c60065_b8204b91",
        "filename": "src/heap/heap-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 396,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-06-26T12:40:18Z",
      "side": 1,
      "message": "FromWritableHeapObject sounds good. I was worried that people will start using this function without realizing that it does not work for RO space and dchecks do not catch it.",
      "parentUuid": "b1a93dbc_e31d2e19",
      "range": {
        "startLine": 396,
        "startChar": 6,
        "endLine": 396,
        "endChar": 26
      },
      "revId": "b1fe3a88114b30a384a20ed125d9298333d4a665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90a25364_0086c707",
        "filename": "src/heap/heap-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 401,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-06-26T12:17:02Z",
      "side": 1,
      "message": "Can this be DCHECK?",
      "range": {
        "startLine": 401,
        "startChar": 2,
        "endLine": 401,
        "endChar": 13
      },
      "revId": "b1fe3a88114b30a384a20ed125d9298333d4a665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e255fe12_17137d67",
        "filename": "src/heap/heap-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 401,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2018-06-26T12:32:59Z",
      "side": 1,
      "message": "It can, I made it SLOW_DCHECK because the below check is a SLOW_DCHECK in the original GetHeap.",
      "parentUuid": "90a25364_0086c707",
      "range": {
        "startLine": 401,
        "startChar": 2,
        "endLine": 401,
        "endChar": 13
      },
      "revId": "b1fe3a88114b30a384a20ed125d9298333d4a665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa857499_1afa2896",
        "filename": "src/heap/heap-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 401,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-06-26T12:40:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e255fe12_17137d67",
      "range": {
        "startLine": 401,
        "startChar": 2,
        "endLine": 401,
        "endChar": 13
      },
      "revId": "b1fe3a88114b30a384a20ed125d9298333d4a665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c67568c_82745e79",
        "filename": "src/heap/heap-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 404,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-06-26T12:17:02Z",
      "side": 1,
      "message": "Can this be DCHECK?",
      "range": {
        "startLine": 404,
        "startChar": 2,
        "endLine": 404,
        "endChar": 13
      },
      "revId": "b1fe3a88114b30a384a20ed125d9298333d4a665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "647d8f94_6d979bfd",
        "filename": "src/heap/heap-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 404,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2018-06-26T12:32:59Z",
      "side": 1,
      "message": "As above.",
      "parentUuid": "8c67568c_82745e79",
      "range": {
        "startLine": 404,
        "startChar": 2,
        "endLine": 404,
        "endChar": 13
      },
      "revId": "b1fe3a88114b30a384a20ed125d9298333d4a665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1fb6420_f76fa035",
        "filename": "src/heap/heap-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 404,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-06-26T12:40:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "647d8f94_6d979bfd",
      "range": {
        "startLine": 404,
        "startChar": 2,
        "endLine": 404,
        "endChar": 13
      },
      "revId": "b1fe3a88114b30a384a20ed125d9298333d4a665",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}