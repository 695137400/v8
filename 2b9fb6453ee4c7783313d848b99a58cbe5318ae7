{
  "comments": [
    {
      "key": {
        "uuid": "dc704f06_a62190d1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-08-06T11:42:55Z",
      "side": 1,
      "message": "Hi, I added some comments, mostly concerning on where to put the methods.\ncheers",
      "revId": "2b9fb6453ee4c7783313d848b99a58cbe5318ae7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f304a98_f4020342",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2020-08-06T12:04:51Z",
      "side": 1,
      "message": "Thanks. I\u0027ll make a second pass, moving this to Object/JSReceiver, which I think will address several comments in one.",
      "revId": "2b9fb6453ee4c7783313d848b99a58cbe5318ae7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9acc9ebf_a4c49d5f",
        "filename": "include/v8.h",
        "patchSetId": 1
      },
      "lineNbr": 9549,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-08-06T11:42:55Z",
      "side": 1,
      "message": "These methods should live on the appropriate instanced, in the API and internally.\n\nFrom how our API is structured there should probably be a method on v8::Object.",
      "range": {
        "startLine": 9547,
        "startChar": 0,
        "endLine": 9549,
        "endChar": 0
      },
      "revId": "2b9fb6453ee4c7783313d848b99a58cbe5318ae7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1703cd60_dd2fabe5",
        "filename": "include/v8.h",
        "patchSetId": 1
      },
      "lineNbr": 9549,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2020-08-06T18:43:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9acc9ebf_a4c49d5f",
      "range": {
        "startLine": 9547,
        "startChar": 0,
        "endLine": 9549,
        "endChar": 0
      },
      "revId": "2b9fb6453ee4c7783313d848b99a58cbe5318ae7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fea2443a_fdc22939",
        "filename": "src/execution/isolate.cc",
        "patchSetId": 1
      },
      "lineNbr": 4769,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-08-06T11:42:55Z",
      "side": 1,
      "message": "This should be a private Symbol, see PRIVATE_SYMBOL_LIST_GENERATOR, so you avoid subsequent internalisation overhead.",
      "range": {
        "startLine": 4767,
        "startChar": 0,
        "endLine": 4769,
        "endChar": 69
      },
      "revId": "2b9fb6453ee4c7783313d848b99a58cbe5318ae7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cc927e5_948c32d4",
        "filename": "src/execution/isolate.cc",
        "patchSetId": 1
      },
      "lineNbr": 4769,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2020-08-06T18:43:08Z",
      "side": 1,
      "message": "Done. (And much nicer, too.)",
      "parentUuid": "fea2443a_fdc22939",
      "range": {
        "startLine": 4767,
        "startChar": 0,
        "endLine": 4769,
        "endChar": 69
      },
      "revId": "2b9fb6453ee4c7783313d848b99a58cbe5318ae7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f14fb98_1d62c21a",
        "filename": "src/execution/isolate.cc",
        "patchSetId": 1
      },
      "lineNbr": 4771,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-08-06T11:42:55Z",
      "side": 1,
      "message": "I think this only makes sense on JSReceiver, otherwise you only create a temporary wrapper object that is never referenced.\n\nMaybe I missed this in the initial proposal, should this also work with Strings?",
      "revId": "2b9fb6453ee4c7783313d848b99a58cbe5318ae7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7647d5d0_6fc7cf83",
        "filename": "src/execution/isolate.cc",
        "patchSetId": 1
      },
      "lineNbr": 4771,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2020-08-06T12:04:51Z",
      "side": 1,
      "message": "\u003e Maybe I missed this in the initial proposal, should this also work with Strings?\n\nThat\u0027s up for debate. The TC39 proposal is worded so that it\u0027d also work with strings, so a faithful implementation would have to follow.\n\nOur use case does not require that, though, so maybe we should adapt the proposal accordingly. (I think the proposal aims to be fairly generic.)",
      "parentUuid": "6f14fb98_1d62c21a",
      "revId": "2b9fb6453ee4c7783313d848b99a58cbe5318ae7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a67038e_8415ea56",
        "filename": "src/execution/isolate.cc",
        "patchSetId": 1
      },
      "lineNbr": 4771,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2020-08-06T18:43:08Z",
      "side": 1,
      "message": "Done. (THe JSReceiver/wrapper bit.)",
      "parentUuid": "7647d5d0_6fc7cf83",
      "revId": "2b9fb6453ee4c7783313d848b99a58cbe5318ae7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69ed0226_f8d319a0",
        "filename": "src/execution/isolate.cc",
        "patchSetId": 1
      },
      "lineNbr": 4784,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-08-06T11:42:55Z",
      "side": 1,
      "message": "You can directly return false if it\u0027s not a JSReceiver, and directly cast to a JSReceiver in the other case.",
      "range": {
        "startLine": 4782,
        "startChar": 0,
        "endLine": 4784,
        "endChar": 68
      },
      "revId": "2b9fb6453ee4c7783313d848b99a58cbe5318ae7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da7e9f89_87f06636",
        "filename": "src/execution/isolate.cc",
        "patchSetId": 1
      },
      "lineNbr": 4784,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2020-08-06T18:43:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69ed0226_f8d319a0",
      "range": {
        "startLine": 4782,
        "startChar": 0,
        "endLine": 4784,
        "endChar": 68
      },
      "revId": "2b9fb6453ee4c7783313d848b99a58cbe5318ae7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5dacd2a_b15aa96c",
        "filename": "src/execution/isolate.h",
        "patchSetId": 1
      },
      "lineNbr": 1558,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-08-06T11:42:55Z",
      "side": 1,
      "message": "See comment below. If you can only set the code_kind on JSReceiver then that\u0027s most likely where these two methods should live.\n\nOr have a dispatcher one on v8::internal::Object and the complex one (with the lookup) on JSReceiver",
      "range": {
        "startLine": 1557,
        "startChar": 0,
        "endLine": 1558,
        "endChar": 48
      },
      "revId": "2b9fb6453ee4c7783313d848b99a58cbe5318ae7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5cf4f7f_86fa3df1",
        "filename": "src/execution/isolate.h",
        "patchSetId": 1
      },
      "lineNbr": 1558,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2020-08-06T18:43:08Z",
      "side": 1,
      "message": "Done. (with i::Object \u003d\u003e JSReceiver dispatcher. The internal call sites make use of this.)",
      "parentUuid": "c5dacd2a_b15aa96c",
      "range": {
        "startLine": 1557,
        "startChar": 0,
        "endLine": 1558,
        "endChar": 48
      },
      "revId": "2b9fb6453ee4c7783313d848b99a58cbe5318ae7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}