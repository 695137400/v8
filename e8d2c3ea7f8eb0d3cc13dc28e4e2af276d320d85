{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "75e2cf55_9e24960d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2021-01-13T09:08:33Z",
      "side": 1,
      "message": "ptal",
      "revId": "e8d2c3ea7f8eb0d3cc13dc28e4e2af276d320d85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8afade9c_7a575efb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2021-01-13T11:33:38Z",
      "side": 1,
      "message": "lgtm once the compile errors are fixed.\n\nIIUC this change is backwards compatible and should not break the existing user code is very low.\n\nThe only potential risk I see if the code performs case distinction between existing Data type:\n\nif (data-\u003eIsValue()) {...}\nelse  if (data-\u003eIsModule()) {...}\n...\n",
      "revId": "e8d2c3ea7f8eb0d3cc13dc28e4e2af276d320d85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e91f419_25d47091",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2021-01-13T12:18:37Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "8afade9c_7a575efb",
      "revId": "e8d2c3ea7f8eb0d3cc13dc28e4e2af276d320d85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48866abf_942e1e10",
        "filename": "include/v8.h",
        "patchSetId": 1
      },
      "lineNbr": 10433,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2021-01-13T09:08:33Z",
      "side": 1,
      "message": "v8::Data also provides Is*() accessors. For the GC is this is all we need, which is why I didn\u0027t add v8::Data::IsContext().\n\nwdyt?",
      "range": {
        "startLine": 10433,
        "startChar": 26,
        "endLine": 10433,
        "endChar": 30
      },
      "revId": "e8d2c3ea7f8eb0d3cc13dc28e4e2af276d320d85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b2626c5_ff8f46b2",
        "filename": "include/v8.h",
        "patchSetId": 1
      },
      "lineNbr": 10433,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2021-01-13T11:33:38Z",
      "side": 1,
      "message": "I think we need v8::Data::IsContext and Context::Cast to be consistent.",
      "parentUuid": "48866abf_942e1e10",
      "range": {
        "startLine": 10433,
        "startChar": 26,
        "endLine": 10433,
        "endChar": 30
      },
      "revId": "e8d2c3ea7f8eb0d3cc13dc28e4e2af276d320d85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47e63ad8_2ab714a3",
        "filename": "include/v8.h",
        "patchSetId": 1
      },
      "lineNbr": 10433,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2021-01-13T12:18:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b2626c5_ff8f46b2",
      "range": {
        "startLine": 10433,
        "startChar": 26,
        "endLine": 10433,
        "endChar": 30
      },
      "revId": "e8d2c3ea7f8eb0d3cc13dc28e4e2af276d320d85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}