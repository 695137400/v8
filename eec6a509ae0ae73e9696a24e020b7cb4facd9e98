{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4e143b7b_23cf2dfb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-05-28T09:29:59Z",
      "side": 1,
      "message": "We\u0027re considering using the parameter count on the Code object in more places as we would like to deprecate the one in the untrusted SharedFunctionInfo object. This change makes the value available in more cases. We still need it for CppBuiltins though (and maybe others).\n\nDarius, could you take a look? Cc Igor FYI",
      "revId": "eec6a509ae0ae73e9696a24e020b7cb4facd9e98",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b03a848a_1de2f570",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-05-28T09:36:51Z",
      "side": 1,
      "message": "LGTM",
      "revId": "eec6a509ae0ae73e9696a24e020b7cb4facd9e98",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd143de9_39265438",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-05-28T09:38:03Z",
      "side": 1,
      "message": "Thanks!",
      "revId": "eec6a509ae0ae73e9696a24e020b7cb4facd9e98",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b9a85cd_66ab331e",
        "filename": "src/compiler/backend/code-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-05-28T09:29:59Z",
      "side": 1,
      "message": "The main reason this is set here and stored in a member field, instead of just having this block in `FinalizeCode` (where it\u0027s actually used) is that the `linkage()` often references a stack-allocated object, which will have gone out of scope in `FinalizeCode`.",
      "revId": "eec6a509ae0ae73e9696a24e020b7cb4facd9e98",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52b2f1fd_88736bc9",
        "filename": "src/compiler/backend/code-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-05-28T09:36:51Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "7b9a85cd_66ab331e",
      "revId": "eec6a509ae0ae73e9696a24e020b7cb4facd9e98",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "eec6a509ae0ae73e9696a24e020b7cb4facd9e98",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "eec6a509ae0ae73e9696a24e020b7cb4facd9e98",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "eec6a509ae0ae73e9696a24e020b7cb4facd9e98",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}