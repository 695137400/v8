{
  "comments": [
    {
      "key": {
        "uuid": "8ca9f846_d0ef4694",
        "filename": "src/arm64/assembler-arm64.h",
        "patchSetId": 2
      },
      "lineNbr": 1098,
      "author": {
        "id": 1307249
      },
      "writtenOn": "2019-02-20T01:03:23Z",
      "side": 1,
      "message": "Does this declaration need to be marked as inline to compensate the move of function body to .cc file?",
      "range": {
        "startLine": 1098,
        "startChar": 1,
        "endLine": 1098,
        "endChar": 29
      },
      "revId": "e36634b796f9b5e5a75632e22bc56331faee014b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f4c865c_acb5c28b",
        "filename": "src/arm64/assembler-arm64.h",
        "patchSetId": 2
      },
      "lineNbr": 1098,
      "author": {
        "id": 1312654
      },
      "writtenOn": "2019-02-20T03:14:09Z",
      "side": 1,
      "message": "I didn\u0027t see the \u0027inline\u0027 keyword in the original declaration, so I don\u0027t think it should be added here.\n\nIf I understand correctly, I switched the function definition from an inline definition--that is, the function is defined when the class is declared--to an out-of-line definition. This should not impact whether the function is seen as marked with the keyword \u0027inline\u0027.",
      "parentUuid": "8ca9f846_d0ef4694",
      "range": {
        "startLine": 1098,
        "startChar": 1,
        "endLine": 1098,
        "endChar": 29
      },
      "revId": "e36634b796f9b5e5a75632e22bc56331faee014b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5310fd8e_f4b09eea",
        "filename": "src/arm64/assembler-arm64.h",
        "patchSetId": 2
      },
      "lineNbr": 1098,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2019-02-20T18:37:45Z",
      "side": 1,
      "message": "Previously the function was implicitly inline. It would have been legal to explicitly mark it as inline, but unnecessary.\n\nOnce it is moved to the .cc file it is not inline and should not be tagged as such.",
      "parentUuid": "4f4c865c_acb5c28b",
      "range": {
        "startLine": 1098,
        "startChar": 1,
        "endLine": 1098,
        "endChar": 29
      },
      "revId": "e36634b796f9b5e5a75632e22bc56331faee014b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d33c200e_a24a1145",
        "filename": "src/arm64/assembler-arm64.h",
        "patchSetId": 2
      },
      "lineNbr": 1098,
      "author": {
        "id": 1312654
      },
      "writtenOn": "2019-02-20T21:38:22Z",
      "side": 1,
      "message": "That makes a lot more sense; it\u0027s clear I didn\u0027t understand correctly. Thanks!\n\nI could move it to the .inl file instead, so it stays inline, but I don\u0027t have a strong opinion either way.",
      "parentUuid": "5310fd8e_f4b09eea",
      "range": {
        "startLine": 1098,
        "startChar": 1,
        "endLine": 1098,
        "endChar": 29
      },
      "revId": "e36634b796f9b5e5a75632e22bc56331faee014b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d673321_019b7349",
        "filename": "src/arm64/assembler-arm64.h",
        "patchSetId": 2
      },
      "lineNbr": 1098,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-02-21T07:31:41Z",
      "side": 1,
      "message": "The current solution (in the .cc file) looks good imo.",
      "parentUuid": "d33c200e_a24a1145",
      "range": {
        "startLine": 1098,
        "startChar": 1,
        "endLine": 1098,
        "endChar": 29
      },
      "revId": "e36634b796f9b5e5a75632e22bc56331faee014b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}