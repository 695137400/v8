{
  "comments": [
    {
      "key": {
        "uuid": "290063d1_b03a5924",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 997,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "Why is do_compare not deferred, it\u0027s only jumped to from within deferred blocks. Is this to get around the bug linked next to do_compare_deferred? Also, I think you can move the declarations for both do_compare(assembler) and do_compare_deferred of these into the collect_fb_and_call_compare block since they are only called from there.",
      "range": {
        "startLine": 997,
        "startChar": 6,
        "endLine": 997,
        "endChar": 16
      },
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ca9c898_746e85be",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1006,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2017-03-22T15:10:04Z",
      "side": 1,
      "message": "Updating the feedback here instead of along with dispatch reduces few jumps and reduces the overall size of the code.  The jumps happen because of the way the Phi nodes are merged.",
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78d7a6e3_3e5418a5",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1006,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3ca9c898_746e85be",
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f217ff24_e09057a2",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1033,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "nit - how about just calling this slowpath",
      "range": {
        "startLine": 1033,
        "startChar": 49,
        "endLine": 1033,
        "endChar": 76
      },
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40bb4153_9fe01bdc",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1035,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "Capital (and below)",
      "range": {
        "startLine": 1035,
        "startChar": 18,
        "endLine": 1035,
        "endChar": 19
      },
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "055f767d_1b4c57bd",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1060,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "nit - \"Load HeapNumber values from lhs and rhs\"",
      "range": {
        "startLine": 1060,
        "startChar": 18,
        "endLine": 1060,
        "endChar": 34
      },
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb6af603_611d416e",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1069,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "floating point",
      "range": {
        "startLine": 1069,
        "startChar": 19,
        "endLine": 1069,
        "endChar": 25
      },
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af93cef3_ca10ac8b",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1117,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "I don\u0027t think you need these extra labels, just bind the result to true / false at the appropriate place and Goto(\u0026end).",
      "range": {
        "startLine": 1105,
        "startChar": 0,
        "endLine": 1117,
        "endChar": 0
      },
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33fdb440_cccdf064",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1121,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "what is the \"_fb\" here? Feedback? I\u0027d just remove it",
      "range": {
        "startLine": 1121,
        "startChar": 58,
        "endLine": 1121,
        "endChar": 60
      },
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e4fe8bd_129eaf13",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1123,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "This naming is confusing. How about value_to_check or similar?",
      "range": {
        "startLine": 1123,
        "startChar": 13,
        "endLine": 1123,
        "endChar": 20
      },
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cc34910_81909462",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1125,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "Be consistent with capitalization (elsewhere you have smi, I\u0027d do Smi everywhere. Also number-\u003eHeapNumber consistently",
      "range": {
        "startLine": 1125,
        "startChar": 40,
        "endLine": 1125,
        "endChar": 43
      },
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "676a61a0_07a7f6cc",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1128,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "Nit - move this section of text to a comment above the sentence describing the type constraints as a separate comment block (and describe what \"this\" is).",
      "range": {
        "startLine": 1126,
        "startChar": 16,
        "endLine": 1128,
        "endChar": 14
      },
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d293340_ca691a2c",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1132,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "number, so check if it is an oddball.",
      "range": {
        "startLine": 1132,
        "startChar": 52,
        "endLine": 1132,
        "endChar": 53
      },
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dd33271_84cc7f9c",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1140,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "Add comment like those above.",
      "range": {
        "startLine": 1140,
        "startChar": 3,
        "endLine": 1140,
        "endChar": 55
      },
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05a92391_c932473a",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1145,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "Why is this only for OrderedRelationCompareOps? The old code looked like it checked this in either case",
      "range": {
        "startLine": 1142,
        "startChar": 6,
        "endLine": 1145,
        "endChar": 33
      },
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b46fdcbb_50a5f004",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1189,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "Just update the feedback variable inline each time (it shouldn\u0027t actually generate any code, just update the Phi) and jump straight to do_compare (for all Goto(\u0026call_with_any_fb)).",
      "range": {
        "startLine": 1189,
        "startChar": 15,
        "endLine": 1189,
        "endChar": 31
      },
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e013978_5ac30e1e",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1192,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "check_if_number_or_oddball",
      "range": {
        "startLine": 1192,
        "startChar": 13,
        "endLine": 1192,
        "endChar": 33
      },
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06b9e6ef_6f5daddb",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1218,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "Not crbug.com/5998, this is a v8 bug",
      "range": {
        "startLine": 1218,
        "startChar": 14,
        "endLine": 1218,
        "endChar": 28
      },
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f49f484_d1d97d50",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1219,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "call_compare_stub",
      "range": {
        "startLine": 1219,
        "startChar": 11,
        "endLine": 1219,
        "endChar": 21
      },
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9878aad1_f13e702b",
        "filename": "src/interpreter/interpreter-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1230,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-22T17:21:16Z",
      "side": 1,
      "message": "Could you do the change to out-of-line these calls in a difference CL to see if there is any performance impact separately?",
      "range": {
        "startLine": 1230,
        "startChar": 13,
        "endLine": 1230,
        "endChar": 21
      },
      "revId": "9056f57d2969c70be699de6b815e225757ec940b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}