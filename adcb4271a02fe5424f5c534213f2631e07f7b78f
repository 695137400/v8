{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "47a37e2b_aab7215c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-27T16:36:00Z",
      "side": 1,
      "message": "Thanks for your feedback, Mathias!",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c42eed81_575977ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Looking good! Only nits and minor comments",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fe2515c_4766e889",
        "filename": "src/inspector/v8-webdriver-serializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Why not add it now? until fully implemented, it won\u0027t actually appear in `flags`, will it?",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3b2e908_0c0cba46",
        "filename": "src/inspector/v8-webdriver-serializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Good point. The idea of not adding it immediately arose before the feature was hidden behind a harmony flag.",
      "parentUuid": "9fe2515c_4766e889",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35dfc81a_dcf7844e",
        "filename": "src/inspector/value-mirror.cc",
        "patchSetId": 2
      },
      "lineNbr": 246,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Same here.",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3722b04_4fee9b8a",
        "filename": "src/inspector/value-mirror.cc",
        "patchSetId": 2
      },
      "lineNbr": 246,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35dfc81a_dcf7844e",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1f11959_c94925c6",
        "filename": "src/regexp/experimental/experimental-compiler.cc",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Since you don\u0027t add compiler support below, I think this should set `result_ \u003d false;`",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d00aa423_d47cfc24",
        "filename": "src/regexp/experimental/experimental-compiler.cc",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a1f11959_c94925c6",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a810cee_46a5e1a3",
        "filename": "src/regexp/experimental/experimental-compiler.cc",
        "patchSetId": 2
      },
      "lineNbr": 424,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "```\n // TODO(v8:11935): Add support.\n UNREACHABLE()\n ```",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5137e4f_a3e4209f",
        "filename": "src/regexp/experimental/experimental-compiler.cc",
        "patchSetId": 2
      },
      "lineNbr": 424,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a810cee_46a5e1a3",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7116f23_8b2d13f3",
        "filename": "src/regexp/regexp-ast.h",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "For all these args: `const ZoneList*` for incoming args, if possible.",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "691c8773_0a47db4e",
        "filename": "src/regexp/regexp-ast.h",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7116f23_8b2d13f3",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "681f386c_3aecf04a",
        "filename": "src/regexp/regexp-ast.h",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Please move up next to AddCaseEquivalents and explain the difference.",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ff220d6_d641bf4c",
        "filename": "src/regexp/regexp-ast.h",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T13:15:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "681f386c_3aecf04a",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b1e1d62_cb9eef25",
        "filename": "src/regexp/regexp-ast.h",
        "patchSetId": 2
      },
      "lineNbr": 357,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Add a brief comment explaining the 1 and 2.",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a126a329_20256513",
        "filename": "src/regexp/regexp-ast.h",
        "patchSetId": 2
      },
      "lineNbr": 357,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T13:15:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b1e1d62_cb9eef25",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "606031b2_31a5848e",
        "filename": "src/regexp/regexp-ast.h",
        "patchSetId": 2
      },
      "lineNbr": 360,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "const for all these accessors.",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f905250_da84589e",
        "filename": "src/regexp/regexp-ast.h",
        "patchSetId": 2
      },
      "lineNbr": 360,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "606031b2_31a5848e",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f019d2a4_1a5f9d9d",
        "filename": "src/regexp/regexp-ast.h",
        "patchSetId": 2
      },
      "lineNbr": 361,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "nit: either add `is_` everywhere (also the member name and ctor param) or not at all.",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c28891e7_ccdc6ff5",
        "filename": "src/regexp/regexp-ast.h",
        "patchSetId": 2
      },
      "lineNbr": 361,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f019d2a4_1a5f9d9d",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b53fbaec_acee415d",
        "filename": "src/regexp/regexp-ast.h",
        "patchSetId": 2
      },
      "lineNbr": 372,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "const where possible.",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56bb3ed0_2868363f",
        "filename": "src/regexp/regexp-ast.h",
        "patchSetId": 2
      },
      "lineNbr": 372,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b53fbaec_acee415d",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb5d95b1_7bbc1c66",
        "filename": "src/regexp/regexp-ast.h",
        "patchSetId": 2
      },
      "lineNbr": 374,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "The `\u003d nullptr` never applies since it\u0027s always initialized in the ctor, right?",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ce18b63_f68b7540",
        "filename": "src/regexp/regexp-ast.h",
        "patchSetId": 2
      },
      "lineNbr": 374,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "True. Just a general habit to always initialize pointers. I consider it best practice.",
      "parentUuid": "fb5d95b1_7bbc1c66",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5dfbb87d_6a18a090",
        "filename": "src/regexp/regexp-ast.h",
        "patchSetId": 2
      },
      "lineNbr": 374,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-29T06:33:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7ce18b63_f68b7540",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37783f4b_d799f5a3",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 433,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Suggestion: make this a non-static method",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d216b04_cf156005",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 433,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Why? This method operates on `ZoneList` of `CharacterRange` not a single `CharacterRange`. We don\u0027t access/modify the state of a `CharacterRange` directly so there is nothing to gain from making it non-static?",
      "parentUuid": "37783f4b_d799f5a3",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f043f4c_90cbcf8a",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 433,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-29T06:33:26Z",
      "side": 1,
      "message": "Ah indeed - good point.",
      "parentUuid": "3d216b04_cf156005",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3c477cb_398d94d6",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 482,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Do you perhaps have a link to related spec text or similar?",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3264d02_2cfd75e6",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 482,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Added a link.\nGeneral Q: I add links to sections as if they were in the released spec already, although they are not at the moment. OK?\nDirect link to the PR for this part if you want to look it up: https://arai-a.github.io/ecma262-compare/snapshot.html?pr\u003d2418#sec-compileatom",
      "parentUuid": "e3c477cb_398d94d6",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb6e2306_a5c14dfa",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 482,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-29T06:33:26Z",
      "side": 1,
      "message": "You mean the links are currently invalid / may become invalid? That\u0027d be a problem, otherwise 👍",
      "parentUuid": "c3264d02_2cfd75e6",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "845c70f0_6f2d844a",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 482,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2022-09-29T06:44:29Z",
      "side": 1,
      "message": "The official spec is the best place to link, but until the proposal lands (Stage 4), it cannot yet be used as a reference.\n\nOTOH, the arai-a.github.io links will stop working over time.\n\nIf we require working links, I guess we should use arai-a.github.io for now. Feel free to assign a TODO to me to update these when the proposal advances to Stage 4.",
      "parentUuid": "bb6e2306_a5c14dfa",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5dd8d8d5_049fdedc",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 482,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T07:45:33Z",
      "side": 1,
      "message": "OK I changed all links to arai-a.github.io with a TODO now.",
      "parentUuid": "845c70f0_6f2d844a",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "753e9534_b914b4a0",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 484,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "\u0027negated\u0027, and add that we create this range type internally.",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "488ceae3_a89ca4f1",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 484,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "753e9534_b914b4a0",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2065060_04905afc",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1490,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Btw is there a reason to always construct with capacity 2 for all the ZoneLists added in this CL?",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcd8c425_0e11b4ab",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1490,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Not really. My general assumption just was that the result ranges are \u003e1 (otherwise most likely people will stick to /u instead of /v for now), but we don\u0027t really know anything else.",
      "parentUuid": "b2065060_04905afc",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "846d9b8c_45d4a30c",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1490,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-29T06:33:26Z",
      "side": 1,
      "message": "Ack.. Thanks, I don\u0027t really have a better solution. But my gut feeling is that potentially avoiding one list reallocation is that beneficial and we could simply allocate empty zonelists initially. Food for thought for followups.",
      "parentUuid": "fcd8c425_0e11b4ab",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "993e292e_a21589ee",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1498,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Please comment somewhere what this fn does, or change the name to something like \u0027ToCharacterRanges\u0027",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7dfb6d5_0cf8a140",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1498,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T10:37:47Z",
      "side": 1,
      "message": "Renamed to `ComputeCharacterRanges` for now. With string disjunctions, this needs to be rewritten anyways.",
      "parentUuid": "993e292e_a21589ee",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "279b89ea_9b54b98a",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1502,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Looks like temp_ranges-\u003elength \u003d\u003d 0 is a precondition and postcondition?",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "737ff0c2_8f6cd5a4",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1502,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Perhaps add up here, just to clarify: DCHECK(IsCharacterClass || IsClassSet)",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b27dd6c_ccd17c46",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1502,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "737ff0c2_8f6cd5a4",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48850f19_4eef2d9a",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1502,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Correct. Added DCHECKs.",
      "parentUuid": "279b89ea_9b54b98a",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f475894_8c7002b9",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1502,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-29T06:33:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "48850f19_4eef2d9a",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cdc5caa_a82224c9",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1503,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Because? Is this relevant here?",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6648206c_b3bb2104",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1503,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Yes it is.\nIf the class was negated, just taking the ranges without explicitly negating the ranges would be wrong.\nIt is OK to just DCHECK this condition, as there are no negated character classes with /v (See comment in line 482 of this file).",
      "parentUuid": "4cdc5caa_a82224c9",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e4d8357_c1c87468",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1503,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-29T06:33:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6648206c_b3bb2104",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bef3054_63851f29",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1709,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Please move the effect-ful ++ out of the if for better readability.",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92cb733d_6b4c0882",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1709,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1bef3054_63851f29",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f618a66b_351c6a81",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1720,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "nit: lhs/rhs or left/right, here and for Intersection",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60bca885_509c9ac9",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1720,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Renamed for `Intersect`. Here I honestly think that `to_remove` is a way better name then `rhs`.",
      "parentUuid": "f618a66b_351c6a81",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e73cd3f9_e41562c7",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1720,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-29T06:33:26Z",
      "side": 1,
      "message": "Okay, fair enough.",
      "parentUuid": "60bca885_509c9ac9",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "293f70d2_2552db27",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1731,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Extract `to_remove-\u003eat(to_remove_index)`",
      "range": {
        "startLine": 1731,
        "startChar": 8,
        "endLine": 1731,
        "endChar": 38
      },
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24bd886e_8585e4e7",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1731,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "293f70d2_2552db27",
      "range": {
        "startLine": 1731,
        "startChar": 8,
        "endLine": 1731,
        "endChar": 38
      },
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61a5aa3e_48466f44",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1813,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "suggestion: left/right or lhs/rhs",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec0f2887_d676f70c",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1813,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "61a5aa3e_48466f44",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bf56fd9_cdd48ae8",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1815,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Both ranges must be canonicalized, right?",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65202b5d_0e7a40ed",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1815,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Not strictly a requirement I would say. I added a comment in the header explaining that this method checks if ranges are exactly equal.",
      "parentUuid": "3bf56fd9_cdd48ae8",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4eea5bbf_a8e1317e",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1815,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-29T06:33:26Z",
      "side": 1,
      "message": "Where \u0027exactly equal\u0027 may be false even though they\u0027re semantically the same? That seems potentially confusing with the generic \u0027Equals\u0027 name, would be nice to clarify this through naming.",
      "parentUuid": "65202b5d_0e7a40ed",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4090fe9_f5f4d007",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1815,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T10:37:47Z",
      "side": 1,
      "message": "Yeah I think after your comments I agree that we should use this method only on canonicalized ranges (that\u0027s the only use case right now anyways). Changed comments and added DCHECKs.",
      "parentUuid": "4eea5bbf_a8e1317e",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e60c3c1e_dfc5ffcc",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1815,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-29T10:49:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f4090fe9_f5f4d007",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "988a736c_1a02323f",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1818,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Let\u0027s define whatever we need to just do `lhs-\u003eat(i) !\u003d rhs-\u003eat(i)`.",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6332afc0_cf09837d",
        "filename": "src/regexp/regexp-compiler-tonode.cc",
        "patchSetId": 2
      },
      "lineNbr": 1818,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done.\n\nNote: Only added `\u003d\u003d` and `!\u003d`, not `\u003c`, `\u003e` and co, as we don\u0027t need it right now and thus the semantics would be chosen arbitrary now.",
      "parentUuid": "988a736c_1a02323f",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01e920f5_5ed6385d",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Not using \u0027enum class\u0027 was intentional?",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "859c6e94_6e36e0e9",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "No. Thanks!",
      "parentUuid": "01e920f5_5ed6385d",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc83f7df_350182d7",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "IsUnicodeMode",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "784dfa9a_337e1c78",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc83f7df_350182d7",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92e35775_bc23ee69",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 283,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "IsUnicodeMode",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9ea66a1_805ba447",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 283,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "92e35775_bc23ee69",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f86fb6c_50b59bda",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 289,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "unicode_sets",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1f3beed_9c113a22",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 289,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f86fb6c_50b59bda",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ad4bdc8_301ff9c0",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 441,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "\u0027unicode mode\u0027, or just move the comment inside the if.",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4363a590_c3d1ea91",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 441,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2ad4bdc8_301ff9c0",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad403b23_4cc03413",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 770,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "It\u0027s a bit confusing that \u0027CharacterClass\u0027 is both spec production terminology and a class name, where the two meanings are related but not identical. One option would be to rename ParseCharacterClass to ParseOpenBracket.. wdyt?",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5416b112_f7209107",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 770,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T10:37:47Z",
      "side": 1,
      "message": "Hmmm.. I think `ParseCharacterClass` is a better name than `ParseOpenBracket`.\nWhat do you think instead of renaming `RegExpCharacterClass` to `RegExpClassRanges` (and `RegExpClassSet` to `RegExpClassSetExpression`)? That way the meaning of the class names would be identical to the spec productions again.",
      "parentUuid": "ad403b23_4cc03413",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5274aa86_99e29ab8",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 770,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-29T10:49:50Z",
      "side": 1,
      "message": "That sgtm - please either rename in a separate CL before this one, or in a followup.",
      "parentUuid": "5416b112_f7209107",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "07c4f993_ed250379",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 770,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T11:42:29Z",
      "side": 1,
      "message": "Will do in a follow-up.",
      "parentUuid": "5274aa86_99e29ab8",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae360c2e_4c122cb8",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 827,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "\u0027and /v\u0027",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43994906_15a25ba4",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 827,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae360c2e_4c122cb8",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3294146c_68b1bce8",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 842,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Remove the /u mention.",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c704489a_4efe18af",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 842,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3294146c_68b1bce8",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "410550bd_e8130a11",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 970,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Same here",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15458bf7_49589eef",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 970,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "410550bd_e8130a11",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24f54b73_d62edc4e",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 1085,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "This needs to be updated for nested character classes.",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34af2e82_9b473df9",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 1085,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T10:37:47Z",
      "side": 1,
      "message": "Oh yeah I missed this, thanks!\n\nI think it should have actually worked, as `(` is invalid within a class with `/v`, so we would never wrongly identify a capture within a class.\nNevertheless accounting for nested classes is cleaner anyways.",
      "parentUuid": "24f54b73_d62edc4e",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15f28561_e6462bed",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 1092,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "For this case we\u0027d have to know the class nesting level.",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9552bad_2fba38f9",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 1092,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T10:37:47Z",
      "side": 1,
      "message": "This case should actually be fine. Within a class `\\k` is always an invalid escape, thus we should never call this method when we are currently within a class (added a DCHECK).",
      "parentUuid": "15f28561_e6462bed",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64a22999_d9b9b0ae",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 1092,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-29T10:49:50Z",
      "side": 1,
      "message": "That\u0027s assuming ScanForCaptures is only called for \\k (which probably won\u0027t change, but who knows). \n\nFor InClassEscapeState::kInClass with nesting depth !\u003d 0, does this method now work correctly?",
      "parentUuid": "b9552bad_2fba38f9",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0012a3d_fed19757",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 1092,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T11:42:29Z",
      "side": 1,
      "message": "No it does not. I added a DCHECK that this should never happen (at the moment it doesn\u0027t).\nIn my opinion this should be fine. Otherwise we would need to keep track of nesting levels eveywhere just for this method (which at the moment will never be called with a nesting level \u003e 0 as mentioned).",
      "parentUuid": "64a22999_d9b9b0ae",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bea14f1a_d1eb56ac",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 1092,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-29T11:47:10Z",
      "side": 1,
      "message": "Yeah I agree.. perhaps another spot where we could pick better names to avoid misuse (ScanCapturesForBackreferences or such).",
      "parentUuid": "e0012a3d_fed19757",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73e6992b_05ac52ae",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 1092,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T13:15:53Z",
      "side": 1,
      "message": "I prefer `ScanForCaptures` over `ScanCapturesForBackreferences`. I think the former is pretty descriptive for what the method actually does.\n\nExtended the comment on the method to clarify the nested class special case (the method already has (unchecked/uncheckable) conditions stated as comment).",
      "parentUuid": "bea14f1a_d1eb56ac",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1a811b4_727b87c3",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 1092,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-10-04T06:39:01Z",
      "side": 1,
      "message": "I still don\u0027t feel great about the new silent requirement.. Wdyt about tracking the current nesting level (perhaps in ParseClassSetOperand) and DCHECKing it in this method in debug mode? Also fine to do this in a followup..",
      "parentUuid": "73e6992b_05ac52ae",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "269e8886_da3c218d",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 1092,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-10-06T13:10:15Z",
      "side": 1,
      "message": "Ack.\nWould like to address it in a follow-up to land this CL asap.",
      "parentUuid": "f1a811b4_727b87c3",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4c9acd1_bd95942b",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 1778,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Please comment why only unicode_sets and not unicode. Spec text?",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc8d54f8_400eeec0",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 1778,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Link to spec added.",
      "parentUuid": "b4c9acd1_bd95942b",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d96f758e_e4ea595f",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 1991,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "No `Advance()`? That seems inconsistent with paths below.",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae33cedb_2c52dbff",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 1991,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Nice catch!\nThis wasn\u0027t caught by any test, as `ClassSetReservedPunctuator`s are valid escaped and non-escaped.\nSo without the missing `Advance` the character was simply added twice to the range, which had no affect after `Canonicalize`.",
      "parentUuid": "d96f758e_e4ea595f",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "919a861c_73afd1f4",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2024,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "We lost the CHECK_FAILED - should we keep an early return here? Perhaps keep the RegExpTree* return type for error propagation (also for `return ReportError`).",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "edce46d6_1b2b394b",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2024,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T10:37:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "919a861c_73afd1f4",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d34512b_a014607d",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2158,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "unicode_sets?",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d36abf6_34f26ddf",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2158,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "unicode mode is correct here, as `\\q` is not allowed with either `/v` or `/u`.",
      "parentUuid": "5d34512b_a014607d",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "493ec6f3_950b2723",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2158,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-29T06:33:26Z",
      "side": 1,
      "message": "My thought was that unicode_sets is already DCHECKed above (so the comment could explicitly refer to it). Optional :)",
      "parentUuid": "4d36abf6_34f26ddf",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0dda6458_04eaba5a",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2158,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T07:45:33Z",
      "side": 1,
      "message": "Ah gotcha.. Will leave as is though. Think it is less confusing.",
      "parentUuid": "493ec6f3_950b2723",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37901b5f_1a1e5d9a",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2171,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "This comment belongs to the overload in line 2204",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "afaff11d_5de01c8f",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2171,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Copied to line 2204 and updated this comment to be correct.",
      "parentUuid": "37901b5f_1a1e5d9a",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c07eefa_f088f545",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2208,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "suggestion: const, since it\u0027s used pretty far down as well",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb3fb8ff_d1bbcad8",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2208,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c07eefa_f088f545",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4eea3f2f_d9497b86",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2245,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "`c`",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ced4d49_27771781",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2245,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4eea3f2f_d9497b86",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4340e30a_6f29b1a7",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2266,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "DCHECK(unicodeSets());",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2fc51cc0_c4736f2d",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2266,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4340e30a_6f29b1a7",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "454d3fb5_0e60a87c",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2268,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Why? A short comment seems useful",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd32177d_8ac99cc7",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2268,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T10:37:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "454d3fb5_0e60a87c",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20c8f989_e6f1ec3b",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2272,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "The following block is quite long - can it be explained succinctly in a short paragraph?",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7914bb9_3fd66cc4",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2272,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T10:37:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20c8f989_e6f1ec3b",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ecd2373_7077d3bf",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2273,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Looks like we can simplify and remove `operand_type` (just use last_type everywhere instead)?",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd5b4d08_6e0b50d3",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2273,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ecd2373_7077d3bf",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c64bea17_f2086ea3",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2282,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "This equals `!has_more()`, no? Please stick to one style for this predicate (also elsewhere).",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04d69d63_c6ed53a5",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2282,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T10:37:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c64bea17_f2086ea3",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fce01a2c_49dc4891",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2290,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "The ParseClassSetOperand contract is pretty complex at callsites (when does it return something, or just modify ranges? how to mutate ranges when it returns non-nullptr?). Can we wrap this somehow to hide these details?\n\nIn any case, we might want to DCHECK the return value is nullptr here.",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9ec3c4b_221b8eba",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2290,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T10:37:47Z",
      "side": 1,
      "message": "Clarified in a comment on `ParseClassSetOperand` that either a tree is returned OR ranges modified (never both), based on `type_out`.\nAll possible outcomes are DCHECKed in the overload without ranges. I can only think of creating `AssertParseClassSetOperandContract` or similar to wrap all the DCHECKs and potentially calling it after `ParseClassSetOperand`, but that doesn\u0027t help in my opinion.\n\nIf you have any idea how we can hide the details I\u0027d be happy to hear about it. I have no good idea...",
      "parentUuid": "fce01a2c_49dc4891",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3c5fd0b_e90fed6c",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2290,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-10-04T06:39:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f9ec3c4b_221b8eba",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a095f4f_2a7a6874",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2307,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "nit: `DCHECK_NE(current(), \u0027-\u0027)` since the then-block is quite long",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "187a8305_803d887e",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2307,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a095f4f_2a7a6874",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae7fcae1_11a55674",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2337,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "q: is `template ` necessary here and in all other similar spots?",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2714f18f_53c97b1f",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2337,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Yes. Required by C++ standard (see page 338 point 4 here: https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4296.pdf)",
      "parentUuid": "ae7fcae1_11a55674",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a8f0de5_a2fef3ab",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2337,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-29T06:33:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2714f18f_53c97b1f",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8c3ae4c_0f2ff056",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2340,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "`DCHECK_EQ(current(), \u0027]\u0027)`?",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4c91e11_94f8038c",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2340,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a8c3ae4c_0f2ff056",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81e8515e_1cf99c31",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2349,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "DCHECK(unicodeSets());\nDCHECK(current() \u003d\u003d \u0027\u0026\u0027 \u0026\u0026 Next() \u003d\u003d \u0027\u0026\u0027);",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c6dc405_dae5debc",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2349,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "81e8515e_1cf99c31",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddffe813_97cf9d58",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2352,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "since this is unused please move next to the call and name it `dummy` or `unused`",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa4749d3_8d2070f3",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2352,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-28T15:43:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ddffe813_97cf9d58",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d22b7822_f1c6da12",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2357,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "q: Do we have the \u0027[lookahead ≠ \u0026]\u0027 here somewhere? Why is that actually needed?",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a5a35f8_e102f454",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2357,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T10:37:47Z",
      "side": 1,
      "message": "Good catch! I haven\u0027t handled the negative lookahead (somehow missed it).\nI have actually no idea why this is needed.\nIIUC that would mean that `/[a\u0026\u0026\u0026]/v` is invalid, whereas `/[\u0026\u0026\u0026a]/v` is valid. As intersection is symmetric, I have no idea why this is specced the way it is.\n@mathias@chromium.org can you clarify please?",
      "parentUuid": "d22b7822_f1c6da12",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca5ad43e_0b5e977f",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2357,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2022-10-04T09:22:16Z",
      "side": 1,
      "message": "@mscherer@google.com Do you remember why we specced it like this?",
      "parentUuid": "7a5a35f8_e102f454",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7237b79_607e7b70",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2357,
      "author": {
        "id": 1249238
      },
      "writtenOn": "2022-10-05T23:10:22Z",
      "side": 1,
      "message": "I don\u0027t think that `/[\u0026\u0026\u0026a]/v` is valid. It would have a ClassSetOperand on the left which is a ClassSetCharacter. And that can be any SourceCharacter-except-ClassSetSyntaxCharacter but only if `[lookahead ∉ ClassSetReservedDoublePunctuator]` where ClassSetReservedDoublePunctuator includes `\u0026\u0026`.\n\nSee https://arai-a.github.io/ecma262-compare/snapshot.html?pr\u003d2418#prod-ClassSetCharacter",
      "parentUuid": "ca5ad43e_0b5e977f",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2469136b_d9298c92",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2357,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-10-06T13:10:15Z",
      "side": 1,
      "message": "Ah you are right! the negative lookahead in `ClassSetCharacter` prevents this (it was actually already implemented that way). Thanks for clarifying.\nFixed the missing lookahead pointed out originally.",
      "parentUuid": "b7237b79_607e7b70",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "556881a4_e6066f3f",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2365,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "DCHECK_EQ(current(), \u0027]\u0027)?",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15d838ae_778b8385",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2365,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T10:37:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "556881a4_e6066f3f",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a85ef2e_8aa9dff0",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2374,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "DCHECK(unicodeSets());\nDCHECK(current() \u003d\u003d \u0027-\u0027 \u0026\u0026 Next() \u003d\u003d \u0027-\u0027);",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ddd0637_acdf1b5b",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2374,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T10:37:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a85ef2e_8aa9dff0",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7802e104_fbf1712a",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2377,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Same here",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd71c6c4_0bbb8494",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2377,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T10:37:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7802e104_fbf1712a",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35719574_a96f2547",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2390,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "DCHECK_EQ(current(), \u0027]\u0027)?",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49ef1551_e6e6ba3d",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2390,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T10:37:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35719574_a96f2547",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d289e21a_4c73abbc",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2422,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "DCHECK_EQ(current(), \u0027]\u0027)",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "164970e6_10a56b2c",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2422,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T10:37:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d289e21a_4c73abbc",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e7fe535_a00b2c78",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2737,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "and /v",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3ff5001_82d0db11",
        "filename": "src/regexp/regexp-parser.cc",
        "patchSetId": 2
      },
      "lineNbr": 2737,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T10:37:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e7fe535_a00b2c78",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5eaa39d7_f5f23735",
        "filename": "test/mjsunit/harmony/regexp-unicode-sets.js",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-28T13:08:27Z",
      "side": 1,
      "message": "Suggestion: for the simple tests below that only consider ascii range (\u003d most of them), only pass expectMatch and construct expectNoMatch as `{all of ascii}-expectMatch`.",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58adf4b0_e2f4eb35",
        "filename": "test/mjsunit/harmony/regexp-unicode-sets.js",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2022-09-29T10:37:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5eaa39d7_f5f23735",
      "revId": "adcb4271a02fe5424f5c534213f2631e07f7b78f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}