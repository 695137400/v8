{
  "comments": [
    {
      "key": {
        "uuid": "802af929_4567b3db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-07-06T13:54:51Z",
      "side": 1,
      "message": "Thanks Ross!\nGeorg, PTAL.",
      "revId": "701f4fff3aad0f234b2c75a9fa55e331ae6f74ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19f8ba29_a4eaca51",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-07-06T13:59:26Z",
      "side": 1,
      "message": "Peter, PTAL at src/profiler. \n\nThanks,\nMythri",
      "revId": "701f4fff3aad0f234b2c75a9fa55e331ae6f74ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eecef615_4736e6ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1167239
      },
      "writtenOn": "2020-07-06T15:09:29Z",
      "side": 1,
      "message": "src/profiler LGTM, thanks!",
      "revId": "701f4fff3aad0f234b2c75a9fa55e331ae6f74ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b13a0989_41842013",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-07-07T08:39:41Z",
      "side": 1,
      "message": "Nice, thanks!\n\nIt\u0027s a little confusing that \"dependency change\" can mean two things: 1) an assumption recorded via DependentCode gets invalidated, or 2) a weakly embedded object dies (I think this must be a Map or JSObject). Maybe we can at least add a comment about that somewhere.",
      "revId": "701f4fff3aad0f234b2c75a9fa55e331ae6f74ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "146313eb_dbe9a2cb",
        "filename": "src/logging/log.h",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-07-07T08:39:41Z",
      "side": 1,
      "message": "nit: sorted",
      "revId": "701f4fff3aad0f234b2c75a9fa55e331ae6f74ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4586c377_469e4440",
        "filename": "src/profiler/profiler-listener.h",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-07-06T13:59:26Z",
      "side": 1,
      "message": "Peter, I added this as a new event instead of as a CodeDeoptEvent since it doesn\u0027t actually Deopt, but just marks it for a deoptimization. We also thought it isn\u0027t important to expose this at this point. V8 cares about these, but not sure others do since it isn\u0027t actually a deopt. For now, these events do nothing for the profiler.",
      "revId": "701f4fff3aad0f234b2c75a9fa55e331ae6f74ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}