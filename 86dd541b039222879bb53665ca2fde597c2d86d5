{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "36fb9f72_08640000",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2020-10-19T06:33:51Z",
      "side": 1,
      "message": "Cool! LGTM",
      "revId": "86dd541b039222879bb53665ca2fde597c2d86d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b25aedff_26a18c92",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-10-19T07:46:58Z",
      "side": 1,
      "message": "PS7 lgtm",
      "revId": "86dd541b039222879bb53665ca2fde597c2d86d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d89d8e3c_73596f2f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-10-19T08:03:02Z",
      "side": 1,
      "message": "Jakob ptal at execution/",
      "revId": "86dd541b039222879bb53665ca2fde597c2d86d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7436d3cc_2070d6ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-10-19T08:07:54Z",
      "side": 1,
      "message": "The const drive-bys all lgtm, one comment about StackGuard.",
      "revId": "86dd541b039222879bb53665ca2fde597c2d86d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f66c5c7_8d582253",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-10-19T08:34:19Z",
      "side": 1,
      "message": "h ",
      "revId": "86dd541b039222879bb53665ca2fde597c2d86d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f28bdc58_9bf02376",
        "filename": "src/execution/local-isolate.h",
        "patchSetId": 7
      },
      "lineNbr": 80,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-10-19T08:07:54Z",
      "side": 1,
      "message": "This feels a bit weird, given that we currently use StackGuard for such checks: https://source.chromium.org/chromium/chromium/src/+/master:v8/src/execution/stack-guard.h;l\u003d23;drc\u003d61d496a656302df23a5ae740d775daef919fbe9d\n\nIdeally we should continue to use one mechanism. Would it be possible to extend StackGuard to handle local isolates?",
      "revId": "86dd541b039222879bb53665ca2fde597c2d86d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d8ca665_ebfe95f5",
        "filename": "src/execution/local-isolate.h",
        "patchSetId": 7
      },
      "lineNbr": 80,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-10-19T08:17:12Z",
      "side": 1,
      "message": "StackGuard is surprisingly complex. All this complexity is needed only for the main isolate/thread. On a background thread all we need is a single value, and we don\u0027t want to offer any functionality beyond checking against that value.\n\nIn the case of a local isolate on the main thread, we do take this value from the stack guard.",
      "parentUuid": "f28bdc58_9bf02376",
      "revId": "86dd541b039222879bb53665ca2fde597c2d86d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f1f2232_fa919dcb",
        "filename": "src/execution/local-isolate.h",
        "patchSetId": 7
      },
      "lineNbr": 80,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-10-19T08:34:19Z",
      "side": 1,
      "message": "Ah sorry I was thinking of the StackLimitCheck class. That one seems very easy to extend for LocalIsolate support. IMO adding support there would reduce surprises a lot. Wdyt?\n\nhttps://source.chromium.org/chromium/chromium/src/+/master:v8/src/execution/isolate.h;l\u003d2060;drc\u003dee41b15784bd941a97716581e516e117bb11bcfd",
      "parentUuid": "5d8ca665_ebfe95f5",
      "revId": "86dd541b039222879bb53665ca2fde597c2d86d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5b0850c_8925b507",
        "filename": "src/execution/local-isolate.h",
        "patchSetId": 7
      },
      "lineNbr": 80,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-10-19T14:01:49Z",
      "side": 1,
      "message": "Hmm, how? One way would be to make that class hold both an Isolate* and a LocalIsolate* (mutually exclusive) and have the HasOverflowed method check them to see which case it\u0027s in. The other methods there should then (D)CHECK against being called in the LocalIsolate case.\n\nI don\u0027t find that attractive.\n\nAnother option would be a static HasOverflowed(LocalIsolate*) function in that class.\n\nDoes anyone have a better idea?",
      "parentUuid": "3f1f2232_fa919dcb",
      "revId": "86dd541b039222879bb53665ca2fde597c2d86d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd3020fa_af242928",
        "filename": "src/execution/local-isolate.h",
        "patchSetId": 7
      },
      "lineNbr": 80,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-10-20T04:54:16Z",
      "side": 1,
      "message": "The static method sounds reasonable to me; it at least keeps the stack check logic on the same class.",
      "parentUuid": "d5b0850c_8925b507",
      "revId": "86dd541b039222879bb53665ca2fde597c2d86d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f22add7e_957354fe",
        "filename": "src/execution/local-isolate.h",
        "patchSetId": 7
      },
      "lineNbr": 80,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-10-20T06:42:50Z",
      "side": 1,
      "message": "Done. PTAL.\n\nFor the future, though, I\u0027m tempted to remove this whole StackLimitCheck class and put the methods directly on Isolate/LocalIsolate. The class doesn\u0027t make a lot of sense to me.",
      "parentUuid": "cd3020fa_af242928",
      "revId": "86dd541b039222879bb53665ca2fde597c2d86d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "211d251e_91917a99",
        "filename": "src/execution/local-isolate.h",
        "patchSetId": 7
      },
      "lineNbr": 80,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-10-20T08:30:29Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f22add7e_957354fe",
      "revId": "86dd541b039222879bb53665ca2fde597c2d86d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}