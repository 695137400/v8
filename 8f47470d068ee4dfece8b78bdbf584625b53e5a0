{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "97ec0acc_443ab087",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2021-01-11T14:02:47Z",
      "side": 1,
      "message": "LGTM\n\nGreat job! I think we got everything right now and we can give it a try.",
      "revId": "8f47470d068ee4dfece8b78bdbf584625b53e5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8da4e63f_ba729a23",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-01-11T16:05:24Z",
      "side": 1,
      "message": "Please don\u0027t block on my LGTM and sorry I haven\u0027t had the time to finish the review by now.\n\nI\u0027m fine too with giving it a try, but I\u0027m wondering if we should wait until Thursday, after the branch is cut? It\u0027s mostly new functionality (so it shouldn\u0027t break existing things) and the node observer notification is in an \"unlikely\" branch (so should affect compilation speed, unless an observer is attached), but still, I\u0027d suggest doing one of the following:\n1) running some compilation-intensive benchmark locally and observing the output of --turbo-stats with and without the change;\n2) landing the change as it is now, then me \u0026 Nico observing some UMA metrics (at least V8.TurboFanOptimizeTotalTime) for next Canary.\n\nWhat do you both think?",
      "parentUuid": "97ec0acc_443ab087",
      "revId": "8f47470d068ee4dfece8b78bdbf584625b53e5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6c241eb_cd480197",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1472029
      },
      "writtenOn": "2021-01-11T16:28:31Z",
      "side": 1,
      "message": "Absolutely. This change should be quite safe and have no effect when the %ObserveNode intrinsic is not used, but still, better be safe and way for the branch cut.",
      "parentUuid": "8da4e63f_ba729a23",
      "revId": "8f47470d068ee4dfece8b78bdbf584625b53e5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa914ef4_7130c360",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-01-14T14:54:12Z",
      "side": 1,
      "message": "Thanks for the patience! Just to let you know the V8 8.9 branch has been cut today.",
      "parentUuid": "d6c241eb_cd480197",
      "revId": "8f47470d068ee4dfece8b78bdbf584625b53e5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "391433e9_49dc6c87",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1472029
      },
      "writtenOn": "2021-01-15T08:31:37Z",
      "side": 1,
      "message": "Unfortunately there are still missing LGTM from an OWNER for these files:\n    BUILD.gn\n    src/codegen/*\n    src/runtime/*\n    test/cctest/*\n\nI also ran perf tests with kraken and octane and I don\u0027t see any perf. regressions.\nWhat would be the best benchmark to use to measure regressions in the compilation time?\n\nThanks!",
      "revId": "8f47470d068ee4dfece8b78bdbf584625b53e5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e8df4dc_3295fe8d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1472029
      },
      "writtenOn": "2021-01-18T13:32:01Z",
      "side": 1,
      "message": "Ping :)",
      "revId": "8f47470d068ee4dfece8b78bdbf584625b53e5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0eabfd9f_04c4a796",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2021-01-18T15:09:33Z",
      "side": 1,
      "message": "Georg, can you please take a final look and lgtm remaining files?\n\nThanks!",
      "revId": "8f47470d068ee4dfece8b78bdbf584625b53e5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21c58c87_5a2abadf",
        "filename": "src/codegen/optimized-compilation-info.h",
        "patchSetId": 13
      },
      "lineNbr": 294,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-01-21T08:32:47Z",
      "side": 1,
      "message": "Please nullptr-initialize here.",
      "revId": "8f47470d068ee4dfece8b78bdbf584625b53e5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3b3977f_e4730509",
        "filename": "src/compiler/bytecode-graph-builder.cc",
        "patchSetId": 13
      },
      "lineNbr": 2714,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-01-21T08:32:47Z",
      "side": 1,
      "message": "Why do we allow these to be nullptr when there is such a call?",
      "revId": "8f47470d068ee4dfece8b78bdbf584625b53e5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "beaf4b1e_98bd90a4",
        "filename": "src/compiler/bytecode-graph-builder.h",
        "patchSetId": 13
      },
      "lineNbr": 54,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-01-21T08:32:47Z",
      "side": 1,
      "message": "Can we somehow simplify this to a single new argument?",
      "revId": "8f47470d068ee4dfece8b78bdbf584625b53e5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf36eeef_6f2dfdcb",
        "filename": "src/compiler/node-observer.h",
        "patchSetId": 13
      },
      "lineNbr": 4,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-01-21T08:32:47Z",
      "side": 1,
      "message": "Please add some documentation here, the explanation from your commit message is a good start.",
      "revId": "8f47470d068ee4dfece8b78bdbf584625b53e5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6984df5a_e1066db7",
        "filename": "src/compiler/node-observer.h",
        "patchSetId": 13
      },
      "lineNbr": 67,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2021-01-11T14:02:47Z",
      "side": 1,
      "message": "nit: Did you know that you can also write\n\ninline NodeObserver::~NodeObserver() \u003d default;\n\nhere? :)",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 39
      },
      "revId": "8f47470d068ee4dfece8b78bdbf584625b53e5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fadfdf6_425e77ee",
        "filename": "src/compiler/node-observer.h",
        "patchSetId": 13
      },
      "lineNbr": 67,
      "author": {
        "id": 1472029
      },
      "writtenOn": "2021-01-11T16:28:31Z",
      "side": 1,
      "message": "Thanks, I was looking for better way, :)\n\nWith MSVC you can have in the .h:\nvirtual NodeObserver::~NodeObserver() \u003d 0 {}\nbut it is not standard...",
      "parentUuid": "6984df5a_e1066db7",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 39
      },
      "revId": "8f47470d068ee4dfece8b78bdbf584625b53e5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7acc8474_6696dc54",
        "filename": "test/cctest/compiler/test-sloppy-equality.cc",
        "patchSetId": 13
      },
      "lineNbr": 34,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-01-21T08:32:47Z",
      "side": 1,
      "message": "What\u0027s missing to do that?",
      "revId": "8f47470d068ee4dfece8b78bdbf584625b53e5a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}