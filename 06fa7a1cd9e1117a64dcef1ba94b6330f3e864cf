{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e8e1feef_f7d255be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Apologies for the delay, there was some upstream churn I had to work around before I could resubmit.",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70c6d64a_cea0ceda",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-11-02T18:26:09Z",
      "side": 1,
      "message": "No problem, you might also need to port this recent change:\nhttps://chromium-review.googlesource.com/c/v8/v8/+/4994347",
      "parentUuid": "e8e1feef_f7d255be",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "863cdf3c_6a0f5a09",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-11-06T15:16:50Z",
      "side": 1,
      "message": "same with this cl: \nhttps://chromium-review.googlesource.com/c/v8/v8/+/5006377",
      "parentUuid": "70c6d64a_cea0ceda",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "376edc5c_5f07fb25",
        "filename": "src/builtins/ppc/builtins-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 3581,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "ifdef shouldn\u0027t be needed as LoadExternalPointerField already includes this check.",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "161bc77f_30556a21",
        "filename": "src/builtins/ppc/builtins-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 3581,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "376edc5c_5f07fb25",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4304fa6b_978cb2db",
        "filename": "src/builtins/ppc/builtins-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 3759,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "shouldn\u0027t be needed as LoadExternalPointerField already includes this check.",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57157454_f6c0db04",
        "filename": "src/builtins/ppc/builtins-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 3759,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4304fa6b_978cb2db",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2780f24_aa51cafa",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 756,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "ShiftRightU64",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51a3092e_481a1947",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 756,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2780f24_aa51cafa",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86a07807_c0ee2fb3",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 782,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "SubS64",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3811d3e_3ba2731b",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 782,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86a07807_c0ee2fb3",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2901043_9e9ba8ba",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 783,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "ShiftLeftU64",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03557732_98181664",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 783,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2901043_9e9ba8ba",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9949272d_a484dbd0",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 812,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "ShiftRightU64.",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb4d388d_b876e4d3",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 812,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9949272d_a484dbd0",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfc79efd_dd240374",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 813,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "ShiftLeftU64.",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "669ea942_c3e3a874",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 813,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dfc79efd_dd240374",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce3d13ec_e6e92481",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 816,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "AndU64, this way you can eliminate `mov` as AndU64 does it if required.",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c61751eb_31733402",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 816,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Tried this and it caused test failures, likely because the scratch register used by the function is actually a register that is being used by something else...will leave the mov() in but update the function call.",
      "parentUuid": "ce3d13ec_e6e92481",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8c97a89_6221f894",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 828,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "temp scope is not used, can be removed?",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1bc73462_d38e99a7",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 828,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d8c97a89_6221f894",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94492d50_c5592068",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 855,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "You can use OrU64 and remove the `mov` above it.",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb5a3e13_ecb94853",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 855,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Tried this and it caused test failures, likely because the scratch register used by the function is actually a register that is being used by something else...will leave the mov() in but update the function call.",
      "parentUuid": "94492d50_c5592068",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5c95854_f504347e",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 953,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "better to avoid having ra() and scratch be the same register, we usually use r0 and ip (r12) as scratch regs on ppc.",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c9d72b9_39fc9456",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 953,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "We do need another scratch register, there aren\u0027t enough to make this work.  Trying to use the \"standard\" ppc scratch registers ends up trampling on a prior use of the scratch register in a caller function somewhere, and causes crashes.  Is there any way we can take this as-is for now?",
      "parentUuid": "e5c95854_f504347e",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37241c03_eecabbc0",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 953,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-11-02T18:26:09Z",
      "side": 1,
      "message": "I agree. Refactoring our `UseScratchRegisterScope` is a TODO were we can also try to introduce at least 1 new scratch reg to ppc.\n\nscratch shouldn\u0027t even be used here tho, both destination and table are registers and offset is `0` so `ldx` should get used? Can it be changed to `no_reg`?",
      "parentUuid": "8c9d72b9_39fc9456",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "443868db_54bccfeb",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 953,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-11-23T23:34:42Z",
      "side": 1,
      "message": "That does seem to work, changed.",
      "parentUuid": "37241c03_eecabbc0",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d68ae4ae_2bc009c3",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 953,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-11-23T23:36:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "443868db_54bccfeb",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ef5869b_7a0067cd",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 983,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "We can implement it with `MoveObjectAndSlot`? this way we are in sync with arm.",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e360ce97_256912b5",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 983,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Can I do this in a follow-on patch?  I\u0027m having to rebase and fix up quote often due to upstream code churn, and the patch series is somewhat large which makes that process quite time consuming.",
      "parentUuid": "6ef5869b_7a0067cd",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbcf2ffa_6c1ac80b",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 983,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-11-02T18:26:09Z",
      "side": 1,
      "message": "Oh yes I was just talking about updating the comment to reflect it, function itself can be implemented later.",
      "parentUuid": "e360ce97_256912b5",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1026aacb_f292e171",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 983,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-11-23T23:34:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cbcf2ffa_6c1ac80b",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04ff4465_ea8a8619",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 1016,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "Also can be implemented with `MoveObjectAndSlot`.",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8066b46b_ff34bf25",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 1016,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Can I do this in a follow-on patch?  I\u0027m having to rebase and fix up quote often due to upstream code churn, and the patch series is somewhat large which makes that process quite time consuming.",
      "parentUuid": "04ff4465_ea8a8619",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7f1eb89_ad817cc2",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 1016,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-11-02T18:26:09Z",
      "side": 1,
      "message": "Same as above.",
      "parentUuid": "8066b46b_ff34bf25",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e05e5205_95c670bd",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 1016,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-11-23T23:34:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d7f1eb89_ad817cc2",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95684dfc_d10feae5",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 1022,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "maybe change to `mov(tag_parameter, Operand(tag));` to be consistent?",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db6c277f_f8a94ded",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 1022,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "95684dfc_d10feae5",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a01711f_796f49fe",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 1084,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "r11 is not universally known to be a scratch on ppc, maybe r12 (ip) can be used?",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94d7303d_83a50868",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 1084,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "kScratchReg is defined as r11, and both r0 and r12 are already in use.  Is there a reason kScratchReg shouldn\u0027t be used here?",
      "parentUuid": "2a01711f_796f49fe",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10e6a9a0_a0be92da",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 1084,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-11-02T18:26:09Z",
      "side": 1,
      "message": "it\u0027s defined as r11 only in codegen. If this function ever gets used outside of codegen (not sure if it will) then it could crash.\n\nWe can leave it as is but could you add a TODO to make use of `UseScratchRegisterScope` after we refactor it.",
      "parentUuid": "94d7303d_83a50868",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87fa9b12_7fe7cc3d",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 1084,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-11-23T23:34:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10e6a9a0_a0be92da",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae3dd274_cb9813df",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 5498,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "Could you try removing these tabs and run a \"git cl format\"?",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e9d0d9f_1ef557e1",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 5498,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae3dd274_cb9813df",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8956fb51_12434770",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 5515,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "What do you mean by consistency in the branch handling code?\n\nThe comment regarding `TailCallBuiltin` only applies to arm64.",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d52ed9da_9b477440",
        "filename": "src/codegen/ppc/macro-assembler-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 5515,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "This was a comment copy+paste from arm64 left over from debugging -- the code itself is different than the arm64 code, but the comment remained.",
      "parentUuid": "8956fb51_12434770",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6dc546fa_67fd63b9",
        "filename": "src/codegen/ppc/macro-assembler-ppc.h",
        "patchSetId": 6
      },
      "lineNbr": 813,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "This won\u0027t be needed anymore if the 2 places using it are changed to `mov(..., Operand(...));`.",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20e7f139_556ddb69",
        "filename": "src/codegen/ppc/macro-assembler-ppc.h",
        "patchSetId": 6
      },
      "lineNbr": 813,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "The Move() functions are cleaner in my opinion.  Is there a reason we should use the mov() function instead?  I note for example that we tend to use a lot of other wrapper functions, e.g. LoadU64() etc., and having two forms of Move sprinkled throughout the codebase could be somewhat confusing.\n\nThat said, I can implement if you would prefer it this way.",
      "parentUuid": "6dc546fa_67fd63b9",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43ffc9d3_f2c19da8",
        "filename": "src/codegen/ppc/macro-assembler-ppc.h",
        "patchSetId": 6
      },
      "lineNbr": 813,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-11-02T18:26:09Z",
      "side": 1,
      "message": "Personally seeing the word Operand gives me a hint that we may be loading an immediate and not a register/memory slot.\n\n`mov(..., Operand(...));` is also used extensively all over ppc/s390/arm/ia32. May not be a good idea to create a separate function specifically for ppc which is only used in a few places.\n\nBeing in sync with arm is really important for us, we don\u0027t want to diverge the code in any way unless it\u0027s necessary, i.e we use `LoadU64` and not `Ldr` as it\u0027s arm specific but `mov` is universal.",
      "parentUuid": "20e7f139_556ddb69",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84573521_184568b0",
        "filename": "src/codegen/ppc/macro-assembler-ppc.h",
        "patchSetId": 6
      },
      "lineNbr": 813,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-11-23T23:34:42Z",
      "side": 1,
      "message": "While I still don\u0027t like the readability I\u0027m not going to fight city hall on this. :)  Reverted.",
      "parentUuid": "43ffc9d3_f2c19da8",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b9b6308_29988864",
        "filename": "src/compiler/backend/instruction-codes.h",
        "patchSetId": 6
      },
      "lineNbr": 422,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "Let\u0027s not change this for ppc. We have been patching this issue whenever it comes up, ie:\nhttps://crrev.com/c/3097449\nhttps://crrev.com/c/4864159\n\nI should be able to merge some more simd ops to free more opcodes.",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe81e12b_55481240",
        "filename": "src/compiler/backend/instruction-codes.h",
        "patchSetId": 6
      },
      "lineNbr": 422,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-18T16:41:49Z",
      "side": 1,
      "message": "This will free 4 opcodes once it lands: \nhttps://crrev.com/c/4953095",
      "parentUuid": "1b9b6308_29988864",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9411b5cf_0611d3cf",
        "filename": "src/compiler/backend/instruction-codes.h",
        "patchSetId": 6
      },
      "lineNbr": 422,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe81e12b_55481240",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be57806a_72c91426",
        "filename": "src/compiler/backend/ppc/code-generator-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "Why do we need this? doesn\u0027t seem to be used anywhere.",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99e008da_ac071f27",
        "filename": "src/compiler/backend/ppc/code-generator-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Looks like this was left over from the initial port, then upstream churn removed the need for it in the final patch set.  Removed.",
      "parentUuid": "be57806a_72c91426",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f45d31a_0fe82eed",
        "filename": "src/compiler/backend/ppc/code-generator-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 120,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "Why is this needed?",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a6494c11_9cb93377",
        "filename": "src/compiler/backend/ppc/code-generator-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 120,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Looks like this was left over from the initial port, then upstream churn removed the need for it in the final patch set.  Removed.",
      "parentUuid": "3f45d31a_0fe82eed",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7fc27a5_801ea9d9",
        "filename": "src/compiler/backend/ppc/instruction-selector-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 427,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "When using pntr-compression it seems like we only use `stw` which doesn\u0027t need alignment?\nhttps://source.chromium.org/chromium/chromium/src/+/main:v8/src/codegen/ppc/macro-assembler-ppc.cc;l\u003d655",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86eb9a4b_13b07519",
        "filename": "src/compiler/backend/ppc/instruction-selector-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 427,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Without this the code generator will try to use an addressing mode that is not compatible (IIRC it tries to use 64 bit immediate address loads), leading to a failure in the snapshot generator.",
      "parentUuid": "d7fc27a5_801ea9d9",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cefcc2e8_14fbe94b",
        "filename": "src/compiler/backend/ppc/instruction-selector-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 427,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-11-02T18:26:09Z",
      "side": 1,
      "message": "What if it\u0027s changed to just `kInt16Imm`?",
      "parentUuid": "86eb9a4b_13b07519",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68331048_5f340b81",
        "filename": "src/compiler/backend/ppc/instruction-selector-ppc.cc",
        "patchSetId": 6
      },
      "lineNbr": 427,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-11-23T23:34:42Z",
      "side": 1,
      "message": "Seems to work.  Changed.",
      "parentUuid": "cefcc2e8_14fbe94b",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9f4dd50_b62ea4c5",
        "filename": "src/wasm/baseline/ppc/liftoff-assembler-ppc-inl.h",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "Most of this logic is already implemented under macro-asm:\nhttps://source.chromium.org/chromium/chromium/src/+/main:v8/src/codegen/ppc/macro-assembler-ppc.cc;l\u003d3518\n\nmaybe we can try adding the missing ops such as a \"shift\" separately per function? i.e:\nhttps://source.chromium.org/chromium/chromium/src/+/main:v8/src/wasm/baseline/ppc/liftoff-assembler-ppc-inl.h;l\u003d326",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe18a817_418c78b2",
        "filename": "src/wasm/baseline/ppc/liftoff-assembler-ppc-inl.h",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "Can I do this in a follow-on patch? I\u0027m having to rebase and fix up quote often due to upstream code churn, and the patch series is somewhat large which makes that process quite time consuming.",
      "parentUuid": "c9f4dd50_b62ea4c5",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec351798_e431f46d",
        "filename": "src/wasm/baseline/ppc/liftoff-assembler-ppc-inl.h",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-11-02T18:26:09Z",
      "side": 1,
      "message": "Sure but please add a TODO here.",
      "parentUuid": "fe18a817_418c78b2",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf0d66c8_6f4c68fd",
        "filename": "src/wasm/baseline/ppc/liftoff-assembler-ppc-inl.h",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-11-23T23:34:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec351798_e431f46d",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff2d1b55_2e960c81",
        "filename": "src/wasm/baseline/ppc/liftoff-assembler-ppc-inl.h",
        "patchSetId": 6
      },
      "lineNbr": 335,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "ifdef may not be needed as LoadExternalPointerField already includes this check and LoadFullPointer also does a LoadU64?",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fd999a1_f5f58cc7",
        "filename": "src/wasm/baseline/ppc/liftoff-assembler-ppc-inl.h",
        "patchSetId": 6
      },
      "lineNbr": 335,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "I\u0027m not super comfortable with the change, this is a bit clearer as to what we\u0027re trying to do and I think it will be more maintainable over time.  That said, if you really want me to condense it down I will.",
      "parentUuid": "ff2d1b55_2e960c81",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d03f925_72f7b101",
        "filename": "src/wasm/baseline/ppc/liftoff-assembler-ppc-inl.h",
        "patchSetId": 6
      },
      "lineNbr": 335,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-11-02T18:26:09Z",
      "side": 1,
      "message": "Not a problem, we can leave it as is.",
      "parentUuid": "7fd999a1_f5f58cc7",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70c26b92_bb6ce4ce",
        "filename": "src/wasm/baseline/ppc/liftoff-assembler-ppc-inl.h",
        "patchSetId": 6
      },
      "lineNbr": 335,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-11-23T23:34:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d03f925_72f7b101",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d73487a1_2f136d8f",
        "filename": "src/wasm/baseline/ppc/liftoff-assembler-ppc-inl.h",
        "patchSetId": 6
      },
      "lineNbr": 392,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-10-17T19:54:01Z",
      "side": 1,
      "message": "Would be a good idea to keep it as kZero to be in sync with arm.",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "099c37f4_647d4306",
        "filename": "src/wasm/baseline/ppc/liftoff-assembler-ppc-inl.h",
        "patchSetId": 6
      },
      "lineNbr": 392,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-10-28T16:02:42Z",
      "side": 1,
      "message": "This was very opaque to me the first time I saw it.  I would rather see arm64 updated to be clearer than revert to kZero -- this line is at least clear that we are checking for equality.  It took me a while to figure out what this line was supposed to do with the to_condition(kZero) field.\n\nIs there a good reason to use to_condition(kZero) instead of eq other than to keep things looking similar to the arm64 codebase?",
      "parentUuid": "d73487a1_2f136d8f",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89a3fc1d_23e376fd",
        "filename": "src/wasm/baseline/ppc/liftoff-assembler-ppc-inl.h",
        "patchSetId": 6
      },
      "lineNbr": 392,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2023-11-02T18:26:09Z",
      "side": 1,
      "message": "So as I mentioned in the first comment, being inline with arm is very important for us. We would prefer to get rid of `to_condition` altogether and keep using our own conditions but we also don\u0027t want diverge unless its necessary.",
      "parentUuid": "099c37f4_647d4306",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91595d2a_acbcc0e9",
        "filename": "src/wasm/baseline/ppc/liftoff-assembler-ppc-inl.h",
        "patchSetId": 6
      },
      "lineNbr": 392,
      "author": {
        "id": 1305638
      },
      "writtenOn": "2023-11-23T23:34:42Z",
      "side": 1,
      "message": "OK, I reverted but added a comment to help people understand that the first glance read of the code is likely not correct. ;)",
      "parentUuid": "89a3fc1d_23e376fd",
      "revId": "06fa7a1cd9e1117a64dcef1ba94b6330f3e864cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}