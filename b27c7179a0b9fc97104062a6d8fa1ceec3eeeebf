{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0098c490_ffd4bca5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-02-16T11:30:32Z",
      "side": 1,
      "message": "Left a first round of comments. I think the overall approach makes sense. We will need some tests for this, to make sure we don\u0027t accidentally break this with future changes.\n\nAlso, the repository seems to be quite outdated. Can we update it to match https://github.com/WebAssembly/tool-conventions/blob/main/CodeAnnotations.md#trace-instruction, or maybe just point to that instead?",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce7f7918_73d11f23",
        "filename": "src/codegen/x64/assembler-x64.cc",
        "patchSetId": 4
      },
      "lineNbr": 2087,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-02-16T11:30:32Z",
      "side": 1,
      "message": "Can\u0027t we just use the existing Assembler methods (e.g. \"emit_mov\") for this?",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a0ed9fb_9cd6389f",
        "filename": "src/codegen/x64/assembler-x64.cc",
        "patchSetId": 4
      },
      "lineNbr": 2087,
      "author": {
        "id": 1528943
      },
      "writtenOn": "2022-03-15T22:34:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce7f7918_73d11f23",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30498967_eece960e",
        "filename": "src/codegen/x64/assembler-x64.cc",
        "patchSetId": 4
      },
      "lineNbr": 2087,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-03-16T12:45:37Z",
      "side": 1,
      "message": "I don\u0027t see a change here. Un-resolving this comment.",
      "parentUuid": "8a0ed9fb_9cd6389f",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "918322ef_bd99be32",
        "filename": "src/compiler/node.h",
        "patchSetId": 4
      },
      "lineNbr": 301,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-02-16T11:30:32Z",
      "side": 1,
      "message": "This looks unused (also, it would be problematic to make Node that much bigger).",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "383bbdf0_de5752fd",
        "filename": "src/compiler/node.h",
        "patchSetId": 4
      },
      "lineNbr": 301,
      "author": {
        "id": 1528943
      },
      "writtenOn": "2022-03-15T22:34:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "918322ef_bd99be32",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92d9e270_110f86a7",
        "filename": "src/flags/flag-definitions.h",
        "patchSetId": 4
      },
      "lineNbr": 528,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-02-16T11:30:32Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 528,
        "startChar": 61,
        "endLine": 528,
        "endChar": 72
      },
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e902530_3305a851",
        "filename": "src/flags/flag-definitions.h",
        "patchSetId": 4
      },
      "lineNbr": 528,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-02-16T11:30:32Z",
      "side": 1,
      "message": "Please specify which values are valid.",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91a53d59_c21c3a09",
        "filename": "src/flags/flag-definitions.h",
        "patchSetId": 4
      },
      "lineNbr": 528,
      "author": {
        "id": 1528943
      },
      "writtenOn": "2022-03-15T22:34:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "92d9e270_110f86a7",
      "range": {
        "startLine": 528,
        "startChar": 61,
        "endLine": 528,
        "endChar": 72
      },
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfe60787_2938aef3",
        "filename": "src/flags/flag-definitions.h",
        "patchSetId": 4
      },
      "lineNbr": 528,
      "author": {
        "id": 1528943
      },
      "writtenOn": "2022-03-15T22:34:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e902530_3305a851",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab458c7d_eb592722",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 4
      },
      "lineNbr": 2394,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-02-16T11:30:32Z",
      "side": 1,
      "message": "This needs to be more efficient, as this is executed for every single decoded wasm instruction. Can we ensure that the traces vector is sorted, and keep a single pointer into that vector that we check here? If we store pointers instead of offsets in the vector, this will make the check even more efficient.\n\nI.e. something like\nif (V8_UNLIKELY(*next_trace_pc \u003d\u003d this-\u003epc_)) { ...",
      "range": {
        "startLine": 2393,
        "startChar": 0,
        "endLine": 2394,
        "endChar": 41
      },
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33f0505d_450f3f10",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 4
      },
      "lineNbr": 2394,
      "author": {
        "id": 1528943
      },
      "writtenOn": "2022-03-15T22:34:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab458c7d_eb592722",
      "range": {
        "startLine": 2393,
        "startChar": 0,
        "endLine": 2394,
        "endChar": 41
      },
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1efe3c0a_a1263543",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 4
      },
      "lineNbr": 2443,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-02-16T11:30:32Z",
      "side": 1,
      "message": "Please add a comment and make the name more descriptive. It also needs to end in an underscore.",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68653211_6a310631",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 4
      },
      "lineNbr": 2443,
      "author": {
        "id": 1528943
      },
      "writtenOn": "2022-03-15T22:34:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1efe3c0a_a1263543",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb6326aa_8f8c22f2",
        "filename": "src/wasm/function-body-decoder.h",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-02-16T11:30:32Z",
      "side": 1,
      "message": "This shouldn\u0027t be part of the FunctionBody. Since this is stored in the WasmModule already, can we just extract it from there and pass it to the decoder directly?",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c9bb713_6f9ddce4",
        "filename": "src/wasm/function-body-decoder.h",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1528943
      },
      "writtenOn": "2022-03-15T22:34:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bb6326aa_8f8c22f2",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb668536_8dc86a63",
        "filename": "src/wasm/module-decoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-02-16T11:30:32Z",
      "side": 1,
      "message": "This name does not match the name specified here: http://go/gh/WebAssembly/tool-conventions/blob/main/CodeAnnotations.md#trace-instruction",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6615b9d_c52e4378",
        "filename": "src/wasm/module-decoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1528943
      },
      "writtenOn": "2022-03-15T22:34:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb668536_8dc86a63",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bdc9f58_01f1fec3",
        "filename": "src/wasm/module-decoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 442,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-02-16T11:30:32Z",
      "side": 1,
      "message": "Similar to the other sections, please add a sentence saying what this section is.",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "459e8d19_1994b923",
        "filename": "src/wasm/module-decoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 442,
      "author": {
        "id": 1528943
      },
      "writtenOn": "2022-03-15T22:34:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6bdc9f58_01f1fec3",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b238fd17_7569551e",
        "filename": "src/wasm/module-decoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 1201,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-02-16T11:30:32Z",
      "side": 1,
      "message": "Please consult the style guide for formatting of code comments: https://google.github.io/styleguide/cppguide.html#Punctuation,_Spelling_and_Grammar",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa22c127_41d45a02",
        "filename": "src/wasm/module-decoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 1201,
      "author": {
        "id": 1528943
      },
      "writtenOn": "2022-03-15T22:34:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b238fd17_7569551e",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01463ae6_8ff258e2",
        "filename": "src/wasm/module-decoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 1201,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-03-16T12:45:37Z",
      "side": 1,
      "message": "Please go over the whole CL again and fix the comments accordingly.",
      "parentUuid": "fa22c127_41d45a02",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f4a0693_86288a5a",
        "filename": "src/wasm/module-decoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 1202,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-02-16T11:30:32Z",
      "side": 1,
      "message": "This looks rather unusual. Can we just access via {this} instead?",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f663974_5df5ae9a",
        "filename": "src/wasm/module-decoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 1202,
      "author": {
        "id": 1528943
      },
      "writtenOn": "2022-03-15T22:34:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5f4a0693_86288a5a",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f0897b3_6f7d08eb",
        "filename": "src/wasm/module-decoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 1226,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-02-16T11:30:32Z",
      "side": 1,
      "message": "From http://go/gh/WebAssembly/tool-conventions/blob/main/CodeAnnotations.md#trace-instruction it looks like the size must always be four. We should validate this, and then use decoder.consume_u32 here instead of the hand-written loop.",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a33f28a_3cdce2dd",
        "filename": "src/wasm/module-decoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 1226,
      "author": {
        "id": 1528943
      },
      "writtenOn": "2022-03-15T22:34:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f0897b3_6f7d08eb",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f6dc3c2_b1ae3dfa",
        "filename": "src/wasm/wasm-constants.h",
        "patchSetId": 4
      },
      "lineNbr": 109,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-02-16T11:30:32Z",
      "side": 1,
      "message": "This is missing a comment.",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be2af39b_81c8a553",
        "filename": "src/wasm/wasm-constants.h",
        "patchSetId": 4
      },
      "lineNbr": 109,
      "author": {
        "id": 1528943
      },
      "writtenOn": "2022-03-15T22:34:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f6dc3c2_b1ae3dfa",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0057a8e_d276a83e",
        "filename": "src/wasm/wasm-feature-flags.h",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-02-16T11:30:32Z",
      "side": 1,
      "message": "Please add a comment as for the other proposals.",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d591845e_bbcfaf22",
        "filename": "src/wasm/wasm-feature-flags.h",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1528943
      },
      "writtenOn": "2022-03-15T22:34:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a0057a8e_d276a83e",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "164742e1_3396a0d6",
        "filename": "src/wasm/wasm-module.h",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-02-16T11:30:32Z",
      "side": 1,
      "message": "This makes the static representation of each function multiple machine words (3 typically) bigger. WDYT about storing this as a single std::vector on the WasmModule, using module-relative offsets?",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5aefc29e_dc8c076f",
        "filename": "src/wasm/wasm-module.h",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1528943
      },
      "writtenOn": "2022-03-15T22:34:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "164742e1_3396a0d6",
      "revId": "b27c7179a0b9fc97104062a6d8fa1ceec3eeeebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}