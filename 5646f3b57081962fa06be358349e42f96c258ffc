{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3e010bd1_1ef4bcae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2023-12-07T15:05:20Z",
      "side": 1,
      "message": "Makes a lot of sense. Actually, we might even be able to store this inside Blocks themselves rather than having a Set, do you think we should do this, or is your fix probably enough?",
      "revId": "5646f3b57081962fa06be358349e42f96c258ffc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb938201_78da042b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2023-12-07T17:53:46Z",
      "side": 1,
      "message": "Mhm, good question. I just now played locally with the idea (adding a `needs_variables_` field on `Block`).\nIt reduces code size further and gives another 1% reduction in total compile time, so that\u0027s great.\nOn the other hand, it feels a bit dirty, because now every Block carries around that field, even though only this copy phase needs it. And I need to mutate the `input_block` through a `const` pointer (in order to update the field), which is less than ideal.\nI\u0027ll upload that version in a bit and let\u0027s discuss further how we could clean this up.",
      "parentUuid": "3e010bd1_1ef4bcae",
      "revId": "5646f3b57081962fa06be358349e42f96c258ffc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aba50c3e_09e2c874",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2023-12-12T15:26:23Z",
      "side": 1,
      "message": "After our discussion, I tried two things out, both of which were unfortunately not beneficial/successful:\n1. Removing the `ScopedModification` and `current_block_needs_variables_` field, replacing that with an explicitly passed argument to `CreateOldToNewMapping` fails ~50 tests in the test suite. After debugging for 1.5 hours, I gave up on this (what was only meant to be a cleanup). Apparently, the interaction/dataflow into `current_block_needs_variables_` is more complex than thought, which is worrying, but I don\u0027t really have the time or expertise to fix this (and it\u0027s quite a long side-track from the initial performance investigation).\n2. After I got it functionally correct (by keeping `current_block_needs_variables_`), storing the `needs_variables` flag inline at each `Block` is actually a performance regression (~2%) compared with the bit set initially proposed in this CL. I presume this is because of worse cache locality.\n\nHence, let\u0027s use this minimally invasive data structure change, which does speed compilation up and is correct.",
      "parentUuid": "bb938201_78da042b",
      "revId": "5646f3b57081962fa06be358349e42f96c258ffc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}