{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "27c998f1_71dc3853",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2021-01-12T17:21:35Z",
      "side": 1,
      "message": "PTAL.\n\nThanks,\nMythri",
      "revId": "40367c81a00fc31ec8b5bcd36a04b5ce5d68c7df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85fdbbc4_3aa520af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-01-13T06:37:17Z",
      "side": 1,
      "message": "lgtm with a question",
      "revId": "40367c81a00fc31ec8b5bcd36a04b5ce5d68c7df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d35180f2_283294be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2021-01-13T09:27:14Z",
      "side": 1,
      "message": "Thanks Jakob!",
      "revId": "40367c81a00fc31ec8b5bcd36a04b5ce5d68c7df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcccc6fb_0dc53ed6",
        "filename": "src/execution/runtime-profiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 322,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2021-01-12T17:21:35Z",
      "side": 1,
      "message": "Is this reasonble? Or do we want to get the Turboprop code from the frame somehow and install it on the  JSFunction? This shouldn\u0027t happen frequently. \n\nMaybe it\u0027s good to write a test for this but it is a bit tricky. I am not really sure if there is an easy way of writing a test for this and also verifying it is indeed testing this part.",
      "revId": "40367c81a00fc31ec8b5bcd36a04b5ce5d68c7df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0209ead4_0a939bdd",
        "filename": "src/execution/runtime-profiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 322,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2021-01-13T12:43:01Z",
      "side": 1,
      "message": "Rather than doing all these checks, I think we should just get the highest active code_kind from the JSFunction directly, rather than looking at the code that caused this interrupt (since what we actually care about is whether we can or should tier up the function, not this particular activation of the function). \n\nCould you add a JSFunction::GetActiveTier() function (that works similarly to the ActiveTierIsTurbofan() type functions but just gives back the highest active tier rather than checking against a fixed tier) and call that here instead?",
      "parentUuid": "fcccc6fb_0dc53ed6",
      "revId": "40367c81a00fc31ec8b5bcd36a04b5ce5d68c7df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae3ce8af_c4ed7c7c",
        "filename": "src/execution/runtime-profiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 332,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-01-13T06:37:17Z",
      "side": 1,
      "message": "Which code kind would match this condition? We don\u0027t expect to see TF code here, do we? And INTERPRETER/TP can both tier-up.",
      "revId": "40367c81a00fc31ec8b5bcd36a04b5ce5d68c7df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dec94942_894c3ba4",
        "filename": "src/execution/runtime-profiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 332,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2021-01-13T09:27:14Z",
      "side": 1,
      "message": "We can see TF code kind in rare cases. When we have recursive function and we tier up to TP and then to TF. Though we have TF code, there might be some frames which are still running TP code and when we start executing those frames we might hit byteocde budget interrupt and reach this point. Maybe I could add a test for this too. It\u0027s just hard to write deterministic tests for these. Currently this happens in some configurations on test/mjsunit/regress/regress-1138075",
      "parentUuid": "ae3ce8af_c4ed7c7c",
      "revId": "40367c81a00fc31ec8b5bcd36a04b5ce5d68c7df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "656b86e4_509dd38a",
        "filename": "src/execution/runtime-profiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 332,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-01-13T09:34:24Z",
      "side": 1,
      "message": "I see so this is the opposite case of the comment above?\n\nHere: the recursive activation optimizes and returns to the TP activation, which hits a bytecode interrupt, but by this time the function\u0027s code object has been replaced.\n\nAbove: the recursive activation optimizes and then deopts, and returns to the TP activation.",
      "parentUuid": "dec94942_894c3ba4",
      "revId": "40367c81a00fc31ec8b5bcd36a04b5ce5d68c7df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "592ab496_0b46a9c3",
        "filename": "src/execution/runtime-profiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 332,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2021-01-13T09:39:18Z",
      "side": 1,
      "message": "Right. It\u0027s kind of the similar scenario as earlier. Depending on whether TF code deopted or not we hit the earlier case or this one. Both of these happen with the same mjsunit test depending on configuration :)",
      "parentUuid": "656b86e4_509dd38a",
      "revId": "40367c81a00fc31ec8b5bcd36a04b5ce5d68c7df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0426b4a6_c8a633b1",
        "filename": "src/objects/code-kind.h",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2021-01-13T12:43:01Z",
      "side": 1,
      "message": "nit - how about just:\n if (V8_UNLIKELY(FLAG_turboprop_as_toptier)) {\n   return CodeKind::TURBOPROP;\n }\n return CodeKind::TURBOFAN;",
      "revId": "40367c81a00fc31ec8b5bcd36a04b5ce5d68c7df",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}