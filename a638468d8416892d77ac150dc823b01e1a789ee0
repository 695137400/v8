{
  "comments": [
    {
      "key": {
        "uuid": "30ab897b_c490128d",
        "filename": "src/compiler/js-heap-broker.cc",
        "patchSetId": 5
      },
      "lineNbr": 2019,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-03-18T14:35:28Z",
      "side": 1,
      "message": "Let\u0027s just unconditionally copy object-\u003einlined_bytecode_size(). See my other comment on the DCHECK in the getter.",
      "revId": "a638468d8416892d77ac150dc823b01e1a789ee0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fe5d4bc_9196625e",
        "filename": "src/compiler/js-heap-broker.cc",
        "patchSetId": 5
      },
      "lineNbr": 2019,
      "author": {
        "id": 1236458
      },
      "writtenOn": "2020-03-19T05:26:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30ab897b_c490128d",
      "revId": "a638468d8416892d77ac150dc823b01e1a789ee0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2eacdaeb_f7d51881",
        "filename": "src/compiler/js-heap-broker.cc",
        "patchSetId": 5
      },
      "lineNbr": 2024,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-03-18T14:35:28Z",
      "side": 1,
      "message": "This can then be const.",
      "revId": "a638468d8416892d77ac150dc823b01e1a789ee0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80027c42_49d065ee",
        "filename": "src/compiler/js-heap-broker.cc",
        "patchSetId": 5
      },
      "lineNbr": 2024,
      "author": {
        "id": 1236458
      },
      "writtenOn": "2020-03-19T05:26:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2eacdaeb_f7d51881",
      "revId": "a638468d8416892d77ac150dc823b01e1a789ee0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a22d3dd4_8a57321d",
        "filename": "src/compiler/js-inlining-heuristic.cc",
        "patchSetId": 5
      },
      "lineNbr": 195,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-03-18T14:35:28Z",
      "side": 1,
      "message": "Have you thought about making IsSmall take the inlined_bytecode_size into account as well?",
      "revId": "a638468d8416892d77ac150dc823b01e1a789ee0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7792850_c4389a60",
        "filename": "src/compiler/js-inlining-heuristic.cc",
        "patchSetId": 5
      },
      "lineNbr": 195,
      "author": {
        "id": 1236458
      },
      "writtenOn": "2020-03-19T05:26:30Z",
      "side": 1,
      "message": "Thanks for the reminder! IsSmall is handled as well now.",
      "parentUuid": "a22d3dd4_8a57321d",
      "revId": "a638468d8416892d77ac150dc823b01e1a789ee0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a83cb72_1518e6af",
        "filename": "src/compiler/js-inlining-heuristic.cc",
        "patchSetId": 5
      },
      "lineNbr": 195,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-03-19T10:39:42Z",
      "side": 1,
      "message": "I\u0027m not 100% certain about this, it would be great if you could run the benchmarks with and without the change to IsSmall.",
      "parentUuid": "f7792850_c4389a60",
      "revId": "a638468d8416892d77ac150dc823b01e1a789ee0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da5059d6_911ef656",
        "filename": "src/compiler/js-inlining-heuristic.cc",
        "patchSetId": 5
      },
      "lineNbr": 195,
      "author": {
        "id": 1236458
      },
      "writtenOn": "2020-03-20T08:23:26Z",
      "side": 1,
      "message": "We tested speedometer2 and JetStream2 w/ and w/o the IsSmall change, the benefit to overall score is almost the same. We will continue investigating its impact and keep you updated if we have new findings.",
      "parentUuid": "0a83cb72_1518e6af",
      "revId": "a638468d8416892d77ac150dc823b01e1a789ee0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a963fae3_9e4f03c1",
        "filename": "src/compiler/js-inlining-heuristic.cc",
        "patchSetId": 5
      },
      "lineNbr": 264,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-03-18T14:35:28Z",
      "side": 1,
      "message": "Let\u0027s replace these two lines with a break and then set the size only in one place (at the end).",
      "revId": "a638468d8416892d77ac150dc823b01e1a789ee0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e92bb20_89618086",
        "filename": "src/compiler/js-inlining-heuristic.cc",
        "patchSetId": 5
      },
      "lineNbr": 264,
      "author": {
        "id": 1236458
      },
      "writtenOn": "2020-03-19T05:26:30Z",
      "side": 1,
      "message": "The size is set in the pipeline at the end of InliningPhase::Run now.",
      "parentUuid": "a963fae3_9e4f03c1",
      "revId": "a638468d8416892d77ac150dc823b01e1a789ee0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0417f25_e7fe939e",
        "filename": "src/compiler/js-inlining-heuristic.h",
        "patchSetId": 5
      },
      "lineNbr": 96,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-03-18T14:35:28Z",
      "side": 1,
      "message": "Instead of having JSInlingHeuristic repeatedly write the current total size into the OptimizedCompilationInfo, I\u0027d prefer if JSInliningHeuristic made the number available via total_inlined_bytecode_size() and in the pipeline at the end of InliningPhase::Run we take it from there and write it into the OptimizedCompilationInfo.",
      "revId": "a638468d8416892d77ac150dc823b01e1a789ee0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb679b85_b9d4086b",
        "filename": "src/compiler/js-inlining-heuristic.h",
        "patchSetId": 5
      },
      "lineNbr": 96,
      "author": {
        "id": 1236458
      },
      "writtenOn": "2020-03-19T05:26:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b0417f25_e7fe939e",
      "revId": "a638468d8416892d77ac150dc823b01e1a789ee0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}