{
  "comments": [
    {
      "key": {
        "uuid": "2f2c1d48_4cb5e078",
        "filename": "src/api/api.cc",
        "patchSetId": 7
      },
      "lineNbr": 9261,
      "author": {
        "id": 1118373
      },
      "writtenOn": "2019-12-03T11:32:58Z",
      "side": 1,
      "message": "Do we really need this parens?",
      "range": {
        "startLine": 9261,
        "startChar": 7,
        "endLine": 9261,
        "endChar": 8
      },
      "revId": "7f83d01b13dcef7b0122a1b4ba333e647f8d1537",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2953c9ba_1ae5751b",
        "filename": "src/api/api.cc",
        "patchSetId": 7
      },
      "lineNbr": 9261,
      "author": {
        "id": 1288325
      },
      "writtenOn": "2019-12-03T15:30:49Z",
      "side": 1,
      "message": "Removed",
      "parentUuid": "2f2c1d48_4cb5e078",
      "range": {
        "startLine": 9261,
        "startChar": 7,
        "endLine": 9261,
        "endChar": 8
      },
      "revId": "7f83d01b13dcef7b0122a1b4ba333e647f8d1537",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f14fe7e9_c41d1709",
        "filename": "src/api/api.cc",
        "patchSetId": 7
      },
      "lineNbr": 9270,
      "author": {
        "id": 1118373
      },
      "writtenOn": "2019-12-03T11:32:58Z",
      "side": 1,
      "message": "If we are going to convert a FixedArray into a std::vector, why can\u0027t we do this in debug::GetPrivateMembers directly?",
      "range": {
        "startLine": 9270,
        "startChar": 4,
        "endLine": 9270,
        "endChar": 25
      },
      "revId": "7f83d01b13dcef7b0122a1b4ba333e647f8d1537",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6eedf984_543fd073",
        "filename": "src/api/api.cc",
        "patchSetId": 7
      },
      "lineNbr": 9270,
      "author": {
        "id": 1288325
      },
      "writtenOn": "2019-12-03T13:55:59Z",
      "side": 1,
      "message": "Do you mean we could just create a std::vector\u003cLocal\u003cValue\u003e\u003e from the beginning and do not create intermediate FixedArray at all?\n\nI think technically we don\u0027t need JSReceiver::GetPrivateEntries any more and can just implement the iteration and all in Debug::GetPrivateMembers, and simply forward the result of that here. Is that what you meant?",
      "parentUuid": "f14fe7e9_c41d1709",
      "range": {
        "startLine": 9270,
        "startChar": 4,
        "endLine": 9270,
        "endChar": 25
      },
      "revId": "7f83d01b13dcef7b0122a1b4ba333e647f8d1537",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07ef7248_a5086db3",
        "filename": "src/api/api.cc",
        "patchSetId": 7
      },
      "lineNbr": 9270,
      "author": {
        "id": 1118373
      },
      "writtenOn": "2019-12-03T13:57:54Z",
      "side": 1,
      "message": "Yes. Let\u0027s not go through a FixedArray at all.",
      "parentUuid": "6eedf984_543fd073",
      "range": {
        "startLine": 9270,
        "startChar": 4,
        "endLine": 9270,
        "endChar": 25
      },
      "revId": "7f83d01b13dcef7b0122a1b4ba333e647f8d1537",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "319ea3ad_d54e905a",
        "filename": "src/api/api.cc",
        "patchSetId": 7
      },
      "lineNbr": 9270,
      "author": {
        "id": 1288325
      },
      "writtenOn": "2019-12-03T15:30:49Z",
      "side": 1,
      "message": "I realized that in debug.cc the handles are all i::Handles instead of v8::Locals, so I implemented it in api.cc directly instead.",
      "parentUuid": "07ef7248_a5086db3",
      "range": {
        "startLine": 9270,
        "startChar": 4,
        "endLine": 9270,
        "endChar": 25
      },
      "revId": "7f83d01b13dcef7b0122a1b4ba333e647f8d1537",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d79f9ae6_dc7e5acf",
        "filename": "src/api/api.cc",
        "patchSetId": 7
      },
      "lineNbr": 10166,
      "author": {
        "id": 1118373
      },
      "writtenOn": "2019-12-03T11:32:58Z",
      "side": 1,
      "message": "Why do we need this? I\u0027d be perfectly fine if we can only read accessor pairs from the other side of the API, and not be able to create them.",
      "range": {
        "startLine": 10166,
        "startChar": 48,
        "endLine": 10166,
        "endChar": 51
      },
      "revId": "7f83d01b13dcef7b0122a1b4ba333e647f8d1537",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2786d252_facf37f5",
        "filename": "src/api/api.cc",
        "patchSetId": 7
      },
      "lineNbr": 10166,
      "author": {
        "id": 1288325
      },
      "writtenOn": "2019-12-03T15:30:49Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "d79f9ae6_dc7e5acf",
      "range": {
        "startLine": 10166,
        "startChar": 48,
        "endLine": 10166,
        "endChar": 51
      },
      "revId": "7f83d01b13dcef7b0122a1b4ba333e647f8d1537",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "caaa67b9_14a53aad",
        "filename": "src/debug/debug.cc",
        "patchSetId": 7
      },
      "lineNbr": 1389,
      "author": {
        "id": 1118373
      },
      "writtenOn": "2019-12-03T11:32:58Z",
      "side": 1,
      "message": "The signature of this function is super weird. We get a JSArray of names as return value, a FixedArray of values as out parameter, which we then turn into a std::vector at the use site. debug::GetPrivateMembers is equally weird.\n\nCan we clear this up? Let\u0027s just use std::vector everywhere?",
      "range": {
        "startLine": 1388,
        "startChar": 0,
        "endLine": 1389,
        "endChar": 77
      },
      "revId": "7f83d01b13dcef7b0122a1b4ba333e647f8d1537",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3e08493_b02661bc",
        "filename": "src/debug/debug.cc",
        "patchSetId": 7
      },
      "lineNbr": 1389,
      "author": {
        "id": 1288325
      },
      "writtenOn": "2019-12-03T13:25:29Z",
      "side": 1,
      "message": "Yeah I agree. Should we use two std::vectors? Or one in the [name, value|accessor, name, value|accessor] format?",
      "parentUuid": "caaa67b9_14a53aad",
      "range": {
        "startLine": 1388,
        "startChar": 0,
        "endLine": 1389,
        "endChar": 77
      },
      "revId": "7f83d01b13dcef7b0122a1b4ba333e647f8d1537",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddeb15dc_758e1e18",
        "filename": "src/debug/debug.cc",
        "patchSetId": 7
      },
      "lineNbr": 1389,
      "author": {
        "id": 1118373
      },
      "writtenOn": "2019-12-03T13:57:54Z",
      "side": 1,
      "message": "Two std::vector, both as out parameters, sounds good. We can still return a bool to report failure.",
      "parentUuid": "a3e08493_b02661bc",
      "range": {
        "startLine": 1388,
        "startChar": 0,
        "endLine": 1389,
        "endChar": 77
      },
      "revId": "7f83d01b13dcef7b0122a1b4ba333e647f8d1537",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb11e455_428e6a44",
        "filename": "src/debug/debug.cc",
        "patchSetId": 7
      },
      "lineNbr": 1389,
      "author": {
        "id": 1288325
      },
      "writtenOn": "2019-12-03T15:30:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ddeb15dc_758e1e18",
      "range": {
        "startLine": 1388,
        "startChar": 0,
        "endLine": 1389,
        "endChar": 77
      },
      "revId": "7f83d01b13dcef7b0122a1b4ba333e647f8d1537",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}