{
  "comments": [
    {
      "key": {
        "uuid": "463afc8f_2263069e",
        "filename": "src/builtins/base.tq",
        "patchSetId": 8
      },
      "lineNbr": 1498,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-08-27T11:12:30Z",
      "side": 1,
      "message": "These types could be more precise, no?",
      "range": {
        "startLine": 1498,
        "startChar": 33,
        "endLine": 1498,
        "endChar": 64
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b723f82_44c7ed4b",
        "filename": "src/builtins/base.tq",
        "patchSetId": 8
      },
      "lineNbr": 1498,
      "author": {
        "id": 1351064
      },
      "writtenOn": "2019-08-29T14:16:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "463afc8f_2263069e",
      "range": {
        "startLine": 1498,
        "startChar": 33,
        "endLine": 1498,
        "endChar": 64
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0a795f3_bada214c",
        "filename": "src/builtins/builtins.cc",
        "patchSetId": 8
      },
      "lineNbr": 92,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-08-27T11:12:30Z",
      "side": 1,
      "message": "Why this? I thought TFS doesn\u0027t work for continuation builtins.",
      "range": {
        "startLine": 92,
        "startChar": 9,
        "endLine": 92,
        "endChar": 38
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee3dcbda_cd1df309",
        "filename": "src/builtins/builtins.cc",
        "patchSetId": 8
      },
      "lineNbr": 92,
      "author": {
        "id": 1351064
      },
      "writtenOn": "2019-08-29T14:16:19Z",
      "side": 1,
      "message": "As discussed offline, added a DCHECK (in src/compiler/frame-states.cc:153) to\n- prevent using TFS builtins as continuations while doing a lazy deopt\n- ensure the parameters added by deoptimizer are passed on the stack.",
      "parentUuid": "b0a795f3_bada214c",
      "range": {
        "startLine": 92,
        "startChar": 9,
        "endLine": 92,
        "endChar": 38
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab6ca9a1_4fff55fc",
        "filename": "src/builtins/iterator.tq",
        "patchSetId": 8
      },
      "lineNbr": 48,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-08-27T11:12:30Z",
      "side": 1,
      "message": "JSAny now that https://chromium-review.googlesource.com/c/v8/v8/+/1769316 has landed.",
      "range": {
        "startLine": 48,
        "startChar": 24,
        "endLine": 48,
        "endChar": 30
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a711f35e_265d1898",
        "filename": "src/builtins/iterator.tq",
        "patchSetId": 8
      },
      "lineNbr": 48,
      "author": {
        "id": 1351064
      },
      "writtenOn": "2019-08-29T14:16:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab6ca9a1_4fff55fc",
      "range": {
        "startLine": 48,
        "startChar": 24,
        "endLine": 48,
        "endChar": 30
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "204c6b06_8426cb84",
        "filename": "src/builtins/iterator.tq",
        "patchSetId": 8
      },
      "lineNbr": 65,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-08-27T11:12:30Z",
      "side": 1,
      "message": "In Torque, there is no need to initialize a variable of you don\u0027t read it. It will produce an error if you attempt to read it.",
      "range": {
        "startLine": 65,
        "startChar": 24,
        "endLine": 65,
        "endChar": 36
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b1813e1_45a271c4",
        "filename": "src/builtins/iterator.tq",
        "patchSetId": 8
      },
      "lineNbr": 65,
      "author": {
        "id": 1351064
      },
      "writtenOn": "2019-08-29T14:16:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "204c6b06_8426cb84",
      "range": {
        "startLine": 65,
        "startChar": 24,
        "endLine": 65,
        "endChar": 36
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "726725d7_22cc8357",
        "filename": "src/builtins/iterator.tq",
        "patchSetId": 8
      },
      "lineNbr": 76,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-08-27T11:12:30Z",
      "side": 1,
      "message": "Why not:\n\nconst callSlotUnTagged: intptr \u003d SmiUntag(callSlot); \nCollectCallFeedback(iteratorMethod, context, feedback, callSlotUnTagged);\nconst iteratorCallable \u003d Cast\u003cCallable\u003e(iteratorMethod)\n          otherwise ThrowCalledNonCallable(iteratorMethod);\nreturn Call(context, iteratorCallable, receiver);",
      "range": {
        "startLine": 66,
        "startChar": 4,
        "endLine": 76,
        "endChar": 20
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98ce81b0_485ebec7",
        "filename": "src/builtins/iterator.tq",
        "patchSetId": 8
      },
      "lineNbr": 76,
      "author": {
        "id": 1351064
      },
      "writtenOn": "2019-08-29T14:16:19Z",
      "side": 1,
      "message": "Done. Updated the return type of \u0027ThrowCalledNonCallable\u0027 to \u0027never\u0027 in \u0027base.tq\u0027 that allowed to use it in the \u0027otherwise\u0027 clause which then avoids the need of try/label mechanism.",
      "parentUuid": "726725d7_22cc8357",
      "range": {
        "startLine": 66,
        "startChar": 4,
        "endLine": 76,
        "endChar": 20
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d58b0664_962125b9",
        "filename": "src/codegen/code-stub-assembler.h",
        "patchSetId": 8
      },
      "lineNbr": 1863,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-08-27T11:12:30Z",
      "side": 1,
      "message": "Node* without the compiler:: will work.\nFor the one exported to Torque, it would be better to TNode-ify them.",
      "range": {
        "startLine": 1863,
        "startChar": 31,
        "endLine": 1863,
        "endChar": 45
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "353cd9f6_f1504ac6",
        "filename": "src/codegen/code-stub-assembler.h",
        "patchSetId": 8
      },
      "lineNbr": 1863,
      "author": {
        "id": 1351064
      },
      "writtenOn": "2019-08-29T14:16:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d58b0664_962125b9",
      "range": {
        "startLine": 1863,
        "startChar": 31,
        "endLine": 1863,
        "endChar": 45
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63acb15c_d37eaf26",
        "filename": "src/compiler/js-generic-lowering.cc",
        "patchSetId": 8
      },
      "lineNbr": 248,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-08-27T11:12:30Z",
      "side": 1,
      "message": "This can be misunderstood as a future plan, which it is not, right?",
      "range": {
        "startLine": 246,
        "startChar": 31,
        "endLine": 248,
        "endChar": 12
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3372ad3a_5431070e",
        "filename": "src/compiler/js-generic-lowering.cc",
        "patchSetId": 8
      },
      "lineNbr": 248,
      "author": {
        "id": 1351064
      },
      "writtenOn": "2019-08-29T14:16:19Z",
      "side": 1,
      "message": "As discussed offline, in the future, a call to the builtin could be added in the generic lowering to reduce the size of compiled code as there would 1 call (to builtin) instead of 2 calls (to load and call) generated from the generic lowerings of LdaNamedProperty and CallProperty0. As the text is confusing, it is removed.",
      "parentUuid": "63acb15c_d37eaf26",
      "range": {
        "startLine": 246,
        "startChar": 31,
        "endLine": 248,
        "endChar": 12
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8be29e08_8aecc580",
        "filename": "src/compiler/js-native-context-specialization.cc",
        "patchSetId": 8
      },
      "lineNbr": 1422,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-08-27T11:12:30Z",
      "side": 1,
      "message": "... for the ...",
      "range": {
        "startLine": 1422,
        "startChar": 27,
        "endLine": 1422,
        "endChar": 30
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4bd95d8_e45b0aee",
        "filename": "src/compiler/js-native-context-specialization.cc",
        "patchSetId": 8
      },
      "lineNbr": 1422,
      "author": {
        "id": 1351064
      },
      "writtenOn": "2019-08-29T14:16:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8be29e08_8aecc580",
      "range": {
        "startLine": 1422,
        "startChar": 27,
        "endLine": 1422,
        "endChar": 30
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64522171_1c6cc772",
        "filename": "src/compiler/js-native-context-specialization.cc",
        "patchSetId": 8
      },
      "lineNbr": 1423,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-08-27T11:12:30Z",
      "side": 1,
      "message": "I think the interface of BuildExceptionForLoadIteratorProperty() is very custom and context-specific and will not survive a second throwing operator being added to the lowering, so I\u0027d prefer if it was not a separate function.",
      "range": {
        "startLine": 1423,
        "startChar": 12,
        "endLine": 1423,
        "endChar": 49
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e7109b5_207cdf6d",
        "filename": "src/compiler/js-native-context-specialization.cc",
        "patchSetId": 8
      },
      "lineNbr": 1423,
      "author": {
        "id": 1351064
      },
      "writtenOn": "2019-08-29T14:16:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "64522171_1c6cc772",
      "range": {
        "startLine": 1423,
        "startChar": 12,
        "endLine": 1423,
        "endChar": 49
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfcd6038_bdab315e",
        "filename": "src/compiler/js-native-context-specialization.cc",
        "patchSetId": 8
      },
      "lineNbr": 1436,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2019-08-28T09:48:37Z",
      "side": 1,
      "message": "p.callFeedback() is already a FeedbackSource.",
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f874aad_67e2c2d8",
        "filename": "src/compiler/js-native-context-specialization.cc",
        "patchSetId": 8
      },
      "lineNbr": 1436,
      "author": {
        "id": 1351064
      },
      "writtenOn": "2019-08-29T14:16:19Z",
      "side": 1,
      "message": "Ack, missed after incorporating changes for the brokerized graph builder.",
      "parentUuid": "dfcd6038_bdab315e",
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd351e41_75ef4ed4",
        "filename": "src/compiler/js-native-context-specialization.cc",
        "patchSetId": 8
      },
      "lineNbr": 3220,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-08-27T11:12:30Z",
      "side": 1,
      "message": "You can use NodeProperties::IsExceptionalCall for this.",
      "range": {
        "startLine": 3220,
        "startChar": 2,
        "endLine": 3220,
        "endChar": 52
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3eca79f0_4e4a748e",
        "filename": "src/compiler/js-native-context-specialization.cc",
        "patchSetId": 8
      },
      "lineNbr": 3220,
      "author": {
        "id": 1351064
      },
      "writtenOn": "2019-08-29T14:16:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd351e41_75ef4ed4",
      "range": {
        "startLine": 3220,
        "startChar": 2,
        "endLine": 3220,
        "endChar": 52
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4572c69_a001dfcc",
        "filename": "src/compiler/js-operator.cc",
        "patchSetId": 8
      },
      "lineNbr": 990,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2019-08-28T09:48:37Z",
      "side": 1,
      "message": "Why do you include a language mode in GetIteratorParameters if you always set it to kSloppy? Is it even used?",
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d9f63fd_1af1ff28",
        "filename": "src/compiler/js-operator.cc",
        "patchSetId": 8
      },
      "lineNbr": 990,
      "author": {
        "id": 1351064
      },
      "writtenOn": "2019-08-29T14:16:19Z",
      "side": 1,
      "message": "As discussed offline, the load and call property operations of the GetIterator bytecode do not require to consider the language mode (strict or sloppy). Thus, removing the language_mode parameter from the GetIteratorParameters.",
      "parentUuid": "a4572c69_a001dfcc",
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1e9e7dd_e2e10076",
        "filename": "src/compiler/js-operator.h",
        "patchSetId": 8
      },
      "lineNbr": 675,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-08-27T12:46:09Z",
      "side": 1,
      "message": "nit: non-uniform placement of const is a bit confusing. The common pattern in this file seems to be to put them all on the right.",
      "range": {
        "startLine": 675,
        "startChar": 15,
        "endLine": 675,
        "endChar": 20
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cd34468_582947fb",
        "filename": "src/compiler/js-operator.h",
        "patchSetId": 8
      },
      "lineNbr": 675,
      "author": {
        "id": 1351064
      },
      "writtenOn": "2019-08-29T14:16:19Z",
      "side": 1,
      "message": "Ack. Also correcting the placement of const for StoreGlobalParameters (Line:412 in this file).",
      "parentUuid": "c1e9e7dd_e2e10076",
      "range": {
        "startLine": 675,
        "startChar": 15,
        "endLine": 675,
        "endChar": 20
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed9e087_54668a98",
        "filename": "src/compiler/js-type-hint-lowering.cc",
        "patchSetId": 8
      },
      "lineNbr": 491,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2019-08-28T09:48:37Z",
      "side": 1,
      "message": "DCHECK_EQ for better error message",
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62aacc59_0ee7ff3b",
        "filename": "src/compiler/js-type-hint-lowering.cc",
        "patchSetId": 8
      },
      "lineNbr": 491,
      "author": {
        "id": 1351064
      },
      "writtenOn": "2019-08-29T14:16:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ed9e087_54668a98",
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f171fa2a_d9c42930",
        "filename": "src/compiler/js-type-hint-lowering.cc",
        "patchSetId": 8
      },
      "lineNbr": 510,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2019-08-28T09:48:37Z",
      "side": 1,
      "message": "DCHECK_EQ",
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13bea70f_7a7cb20a",
        "filename": "src/compiler/js-type-hint-lowering.cc",
        "patchSetId": 8
      },
      "lineNbr": 510,
      "author": {
        "id": 1351064
      },
      "writtenOn": "2019-08-29T14:16:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f171fa2a_d9c42930",
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bb07751_160dd4e0",
        "filename": "test/mjsunit/es6/iterator-eager-deopt.js",
        "patchSetId": 8
      },
      "lineNbr": 46,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-08-27T12:46:09Z",
      "side": 1,
      "message": "Not anymore, it increments now, no?",
      "range": {
        "startLine": 46,
        "startChar": 62,
        "endLine": 46,
        "endChar": 75
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0e2accf_edbc1cc6",
        "filename": "test/mjsunit/es6/iterator-eager-deopt.js",
        "patchSetId": 8
      },
      "lineNbr": 46,
      "author": {
        "id": 1351064
      },
      "writtenOn": "2019-08-29T14:16:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6bb07751_160dd4e0",
      "range": {
        "startLine": 46,
        "startChar": 62,
        "endLine": 46,
        "endChar": 75
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f103e39_7e80ad35",
        "filename": "test/mjsunit/es6/iterator-lazy-deopt.js",
        "patchSetId": 8
      },
      "lineNbr": 48,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-08-27T12:46:09Z",
      "side": 1,
      "message": "also outdated",
      "range": {
        "startLine": 48,
        "startChar": 18,
        "endLine": 48,
        "endChar": 36
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be643dd9_af61f4f9",
        "filename": "test/mjsunit/es6/iterator-lazy-deopt.js",
        "patchSetId": 8
      },
      "lineNbr": 48,
      "author": {
        "id": 1351064
      },
      "writtenOn": "2019-08-29T14:16:19Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "4f103e39_7e80ad35",
      "range": {
        "startLine": 48,
        "startChar": 18,
        "endLine": 48,
        "endChar": 36
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2730e38c_8a36a05d",
        "filename": "test/mjsunit/es6/iterator-lazy-deopt.js",
        "patchSetId": 8
      },
      "lineNbr": 49,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-08-27T12:46:09Z",
      "side": 1,
      "message": "and here",
      "range": {
        "startLine": 49,
        "startChar": 50,
        "endLine": 49,
        "endChar": 55
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b875184_1e1d7eb4",
        "filename": "test/mjsunit/es6/iterator-lazy-deopt.js",
        "patchSetId": 8
      },
      "lineNbr": 49,
      "author": {
        "id": 1351064
      },
      "writtenOn": "2019-08-29T14:16:19Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "2730e38c_8a36a05d",
      "range": {
        "startLine": 49,
        "startChar": 50,
        "endLine": 49,
        "endChar": 55
      },
      "revId": "218a82415a810a855da86b90fd1e4ff98e2f19a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}