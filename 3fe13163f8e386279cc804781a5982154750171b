{
  "comments": [
    {
      "key": {
        "uuid": "8732a094_8e64fcaf",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 8,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-10-14T09:04:27Z",
      "side": 1,
      "message": "The namespace-per-file rule is obsolete, I\u0027d suggest a reasonable shared namespace like \"promise\".",
      "range": {
        "startLine": 8,
        "startChar": 10,
        "endLine": 8,
        "endChar": 37
      },
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6124e0a_be950e82",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 8,
      "author": {
        "id": 1358537
      },
      "writtenOn": "2019-10-14T19:38:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8732a094_8e64fcaf",
      "range": {
        "startLine": 8,
        "startChar": 10,
        "endLine": 8,
        "endChar": 37
      },
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c969fe0e_3e2341c2",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-10-14T09:04:27Z",
      "side": 1,
      "message": "We could define better types for these, something like:\n\ntype PromiseState extends int31 constexpr \u0027Promise::PromiseState\u0027;",
      "range": {
        "startLine": 11,
        "startChar": 25,
        "endLine": 11,
        "endChar": 40
      },
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4bfa75c_7e1a94b7",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 1358537
      },
      "writtenOn": "2019-10-14T19:38:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c969fe0e_3e2341c2",
      "range": {
        "startLine": 11,
        "startChar": 25,
        "endLine": 11,
        "endChar": 40
      },
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "851f1cc1_fdd19520",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-10-14T09:04:27Z",
      "side": 1,
      "message": "How about: \n\n  extern macro PromiseBuiltinsAssembler::TriggerPromiseReactions(\n      implicit context: Context)(Smi | PromiseReactions, JSAny, \n    PromiseReactionType): Undefined;\n\ngiven a type definition\n\n  type PromiseReactionType extends int31 constexpr \u0027PromiseReaction::Type\u0027;",
      "range": {
        "startLine": 28,
        "startChar": 2,
        "endLine": 29,
        "endChar": 56
      },
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "853acefb_40e8737a",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1358537
      },
      "writtenOn": "2019-10-14T19:38:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "851f1cc1_fdd19520",
      "range": {
        "startLine": 28,
        "startChar": 2,
        "endLine": 29,
        "endChar": 56
      },
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7df44be_4c6cedfe",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-10-14T09:04:27Z",
      "side": 1,
      "message": "This is not necessary anymore once\nhttps://chromium-review.googlesource.com/c/v8/v8/+/1857226/\nlands.",
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28531e84_3df4fbd3",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1358537
      },
      "writtenOn": "2019-10-14T19:38:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7df44be_4c6cedfe",
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83a77c82_d7ebb590",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-10-14T09:04:27Z",
      "side": 1,
      "message": "The getter and the setter could be methods on JSPromise.",
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91b5594a_c475f12d",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 1358537
      },
      "writtenOn": "2019-10-14T19:38:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83a77c82_d7ebb590",
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebd13440_f962e3a9",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2019-10-12T07:49:30Z",
      "side": 1,
      "message": "Should this be Undefined? (with a cast on TriggerPromiseReactions)",
      "range": {
        "startLine": 50,
        "startChar": 59,
        "endLine": 50,
        "endChar": 65
      },
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d0909be_81da38a2",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2019-10-12T07:49:30Z",
      "side": 1,
      "message": "Should this be JSPromise?",
      "range": {
        "startLine": 50,
        "startChar": 40,
        "endLine": 50,
        "endChar": 50
      },
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6745d819_5e732dc3",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-10-14T09:04:27Z",
      "side": 1,
      "message": "I\u0027d think that value should have type JSAny for any user-exposed JavaScript value.\n@Sathya: You\u0027re talking about the return type, no? I think that TriggerPromiseReactions should already have return type Undefined. Or could we drop this pointless returning of Undefined altogether?",
      "parentUuid": "ebd13440_f962e3a9",
      "range": {
        "startLine": 50,
        "startChar": 59,
        "endLine": 50,
        "endChar": 65
      },
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11a651ae_5e9bd7cb",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-10-14T09:04:27Z",
      "side": 1,
      "message": "+1, then we can remove the cast below.",
      "parentUuid": "1d0909be_81da38a2",
      "range": {
        "startLine": 50,
        "startChar": 40,
        "endLine": 50,
        "endChar": 50
      },
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46ab8304_671f707e",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2019-10-14T09:20:30Z",
      "side": 1,
      "message": "Yes, sorry I was talking about the return type. Thanks!",
      "parentUuid": "6745d819_5e732dc3",
      "range": {
        "startLine": 50,
        "startChar": 59,
        "endLine": 50,
        "endChar": 65
      },
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff7ce21e_41e19261",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1358537
      },
      "writtenOn": "2019-10-14T19:38:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11a651ae_5e9bd7cb",
      "range": {
        "startLine": 50,
        "startChar": 40,
        "endLine": 50,
        "endChar": 50
      },
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8fe3b58a_09be35d2",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1358537
      },
      "writtenOn": "2019-10-14T19:38:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46ab8304_671f707e",
      "range": {
        "startLine": 50,
        "startChar": 59,
        "endLine": 50,
        "endChar": 65
      },
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1dee4be_e7bbf1a4",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2019-10-14T09:04:27Z",
      "side": 1,
      "message": "I think this type should be (Smi | PromiseReaction). The type of JSPromise::reactions_or_result in general should probably be (Smi | PromiseReaction | JSAny).",
      "range": {
        "startLine": 57,
        "startChar": 21,
        "endLine": 57,
        "endChar": 27
      },
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b851a1f9_23a75349",
        "filename": "src/builtins/promise-abstract-operations.tq",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1358537
      },
      "writtenOn": "2019-10-14T19:38:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b1dee4be_e7bbf1a4",
      "range": {
        "startLine": 57,
        "startChar": 21,
        "endLine": 57,
        "endChar": 27
      },
      "revId": "3fe13163f8e386279cc804781a5982154750171b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}