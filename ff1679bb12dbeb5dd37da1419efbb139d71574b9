{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "121c8d5d_702bbb17",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1362925
      },
      "writtenOn": "2024-09-04T17:54:43Z",
      "side": 1,
      "message": "Leszek, PTAL.",
      "revId": "ff1679bb12dbeb5dd37da1419efbb139d71574b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e0c51f5_f4646698",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2024-09-09T09:20:25Z",
      "side": 1,
      "message": "lgtm as is, but I think we could improve this in the future to optimize the no-fallthrough case further.",
      "revId": "ff1679bb12dbeb5dd37da1419efbb139d71574b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b78ea1df_f647a18c",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 282,
      "author": {
        "id": 1362925
      },
      "writtenOn": "2024-09-04T17:56:07Z",
      "side": 1,
      "message": "Ideally, for when `fallthrough_needed_` is false, we can emit some kind of `unreachable` bytecode in debug builds, but I don\u0027t think we have one. Think it\u0027s worth it in this case?",
      "revId": "ff1679bb12dbeb5dd37da1419efbb139d71574b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3442d2c9_e208ad3b",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 282,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2024-09-09T09:20:25Z",
      "side": 1,
      "message": "I\u0027ve thought about this for some of the switch cases too -- there is an abort bytecode we could emit already, making this debug-only does mean having different bytecodes for debug and release though, which is the bigger problem.",
      "parentUuid": "b78ea1df_f647a18c",
      "revId": "ff1679bb12dbeb5dd37da1419efbb139d71574b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc454c44_cf16c937",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 282,
      "author": {
        "id": 1362925
      },
      "writtenOn": "2024-09-09T14:58:23Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "3442d2c9_e208ad3b",
      "revId": "ff1679bb12dbeb5dd37da1419efbb139d71574b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "804a63ef_84f0a4f6",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2024-09-09T09:20:25Z",
      "side": 1,
      "message": "alternatively, in the case where there is no fallthrough needed, we could make the jump table smaller by one and make one of the deferred commands a fallthrough. Maybe this could be a nice followup? Low priority though.",
      "range": {
        "startLine": 306,
        "startChar": 10,
        "endLine": 306,
        "endChar": 29
      },
      "revId": "ff1679bb12dbeb5dd37da1419efbb139d71574b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "095fca9f_9bae5c34",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1362925
      },
      "writtenOn": "2024-09-09T14:58:23Z",
      "side": 1,
      "message": "Agreed. Added to the random ideas doc.",
      "parentUuid": "804a63ef_84f0a4f6",
      "range": {
        "startLine": 306,
        "startChar": 10,
        "endLine": 306,
        "endChar": 29
      },
      "revId": "ff1679bb12dbeb5dd37da1419efbb139d71574b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "If the author is a V8 committer, code review is required from one other committer (see https://v8.dev/docs/become-committer). Otherwise, code review is required from two committers."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "((uploaderin:cria/project-v8-committers AND label:Code-Review\u003dMAX,user\u003dnon_uploader) OR label:Code-Review\u003dMAX,count\u003e\u003d2) AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"((uploaderin:cria/project-v8-committers AND label:Code-Review=MAX,user=non_uploader) OR label:Code-Review=MAX,count>=2) AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader","uploaderin:cria/project-v8-committers"],"failingAtoms":["label:Code-Review=MIN","label:Code-Review=MAX,count>=2"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "ff1679bb12dbeb5dd37da1419efbb139d71574b9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "ff1679bb12dbeb5dd37da1419efbb139d71574b9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ff1679bb12dbeb5dd37da1419efbb139d71574b9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}