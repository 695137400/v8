{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9279d1d5_f100cb74",
        "filename": ".bazelrc",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2023-07-17T10:34:01Z",
      "side": 1,
      "message": "Why do we need this? We are already using c++17!\nhttps://source.chromium.org/chromium/chromium/src/+/main:v8/bazel/defs.bzl;drc\u003d466e0818aa56569b761932c2dff4390d5553a780;l\u003d124",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 45
      },
      "revId": "85e0bbc1dda885d0b778875ab67269cf002194a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a038b50_0db3e69f",
        "filename": ".bazelrc",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2023-11-06T17:21:15Z",
      "side": 1,
      "message": "As discussed offline, this was an attempt to fix some compiler error when trying to locally build with bazel, but as you explained, part of the config is ignored (including this line I added actually), and with the right command there is no need to add this line.\n\nEDIT: actually, without this line, build fails because `#error \"C++ versions less than C++14 are not supported.\"` (see Checks in patchset 9), but with this line it works... Any suggestion?",
      "parentUuid": "9279d1d5_f100cb74",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 45
      },
      "revId": "85e0bbc1dda885d0b778875ab67269cf002194a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2edb9056_13bceef1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2023-07-13T15:25:43Z",
      "side": 1,
      "message": "@Victor: PTAL BUILD.bazel and .bazelrc\n@Toon: PTAL src/zone, *.gn, DEPS\n@Nico: PTAL src/compiler",
      "revId": "85e0bbc1dda885d0b778875ab67269cf002194a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "376fab87_ae7493de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2023-07-18T07:13:28Z",
      "side": 1,
      "message": "LGTM % nit and Victor\u0027s comments",
      "revId": "85e0bbc1dda885d0b778875ab67269cf002194a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd6983d1_6d950907",
        "filename": "BUILD.bazel",
        "patchSetId": 6
      },
      "lineNbr": 3878,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2023-07-17T10:34:01Z",
      "side": 1,
      "message": "Can we bind these to //external?\nSee https://chromium-review.googlesource.com/c/v8/v8/+/4678629",
      "range": {
        "startLine": 3877,
        "startChar": 0,
        "endLine": 3878,
        "endChar": 57
      },
      "revId": "85e0bbc1dda885d0b778875ab67269cf002194a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4337a40_fb7227c1",
        "filename": "BUILD.bazel",
        "patchSetId": 6
      },
      "lineNbr": 3878,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2023-11-06T17:21:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd6983d1_6d950907",
      "range": {
        "startLine": 3877,
        "startChar": 0,
        "endLine": 3878,
        "endChar": 57
      },
      "revId": "85e0bbc1dda885d0b778875ab67269cf002194a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52b98817_e2c4248d",
        "filename": "src/zone/zone-containers.h",
        "patchSetId": 6
      },
      "lineNbr": 768,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2023-07-18T07:13:28Z",
      "side": 1,
      "message": "nit: Is it necessary that we name those with `Absl`? I would be fine just having `ZoneFlatHashMap` or do we already have those?",
      "range": {
        "startLine": 768,
        "startChar": 6,
        "endLine": 768,
        "endChar": 25
      },
      "revId": "85e0bbc1dda885d0b778875ab67269cf002194a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1b315b7_1b3e4083",
        "filename": "src/zone/zone-containers.h",
        "patchSetId": 6
      },
      "lineNbr": 768,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2023-11-06T17:21:15Z",
      "side": 1,
      "message": "I think that keeping Absl in the name is good so that people know what they are using, at least for a while until V8 developers are used to it. Absl hashmaps have different properties as C++\u0027s unordered_maps, so I think it\u0027s good that it\u0027s obvious what one is using.",
      "parentUuid": "52b98817_e2c4248d",
      "range": {
        "startLine": 768,
        "startChar": 6,
        "endLine": 768,
        "endChar": 25
      },
      "revId": "85e0bbc1dda885d0b778875ab67269cf002194a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}