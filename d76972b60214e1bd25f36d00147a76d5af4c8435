{
  "comments": [
    {
      "key": {
        "uuid": "37d897bc_27d19e82",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2020-08-11T09:54:29Z",
      "side": 1,
      "message": "Is this CL abandoned?",
      "revId": "d76972b60214e1bd25f36d00147a76d5af4c8435",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f74f543a_6a197327",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 2
      },
      "lineNbr": 2406,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2017-12-19T16:40:46Z",
      "side": 1,
      "message": "Not present in this CL, but in an earlier prototype of this, I saw a roughly 5% (it was about a 10-15ms difference) increase from using the %_IsJSReceiver() intrinsic + CompareOperation(EQ_STRICT), which I\u0027m guessing is from the compare operation feedback. (probably replaces the branch with a CheckMap or something, didn\u0027t really pay attention to the resulting graph with that change...), which might be better in practice for the actual generated code.\n\nGiven that, it might make sense for JumpIfJSReceiver and similar tests to collect information so that they can speculate whether the IfFalse will ever be taken in optimized code, or use the intrinsic + compare operation more often instead of the smaller bytecode.\n\nObviously not as important as fixing optimization of the next() call, bit it\u0027s something to think about.",
      "revId": "d76972b60214e1bd25f36d00147a76d5af4c8435",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "407c079b_c8b5812b",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 2
      },
      "lineNbr": 2406,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2017-12-20T19:45:02Z",
      "side": 1,
      "message": "With https://chromium-review.googlesource.com/#/c/v8/v8/+/837484 applied, this doesn\u0027t make as much of a diffference, but it does still consistently score higher on benchmarks. In either case, I don\u0027t see ObjectIsReceiver in any turbolizer graphs, so it probably only speeds up the baseline case.\n\nIt might not be enough of a difference to be worth worrying about it though.",
      "parentUuid": "f74f543a_6a197327",
      "revId": "d76972b60214e1bd25f36d00147a76d5af4c8435",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "770660ec_7028eb48",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 2
      },
      "lineNbr": 2406,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2017-12-21T07:28:52Z",
      "side": 1,
      "message": "It would be nice to understand what exactly changes, as this shouldn\u0027t make any difference in the end. If you could figure out why it changes the performance profile at all, but with low priority, that\u0027d be really handy.",
      "parentUuid": "407c079b_c8b5812b",
      "revId": "d76972b60214e1bd25f36d00147a76d5af4c8435",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}