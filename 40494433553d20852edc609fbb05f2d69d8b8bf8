{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "31aa179d_4e7eac4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2023-11-20T08:27:38Z",
      "side": 1,
      "message": "PTAL. I mainly added this test for the follow up. It was hard to work on the code without a test.",
      "revId": "40494433553d20852edc609fbb05f2d69d8b8bf8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc06f9fc_bcf33aa6",
        "filename": "tools/release/roll_merge_gerrit_test.py",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2023-11-20T08:27:38Z",
      "side": 1,
      "message": "These are all ordered in the order they are called, except when they are called multiple times. Then only the first return value is in the place when it\u0027s called. E.g. CallGerritApi below.",
      "range": {
        "startLine": 30,
        "startChar": 3,
        "endLine": 30,
        "endChar": 8
      },
      "revId": "40494433553d20852edc609fbb05f2d69d8b8bf8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77ac226a_1487c74e",
        "filename": "tools/release/roll_merge_gerrit_test.py",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2023-11-20T08:43:34Z",
      "side": 1,
      "message": "Note that python applies decorators in reverse order, so this ordering is just for code aesthetics. I assume that\u0027s ok?",
      "parentUuid": "fc06f9fc_bcf33aa6",
      "range": {
        "startLine": 30,
        "startChar": 3,
        "endLine": 30,
        "endChar": 8
      },
      "revId": "40494433553d20852edc609fbb05f2d69d8b8bf8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5ead256_d3ee67e0",
        "filename": "tools/release/roll_merge_gerrit_test.py",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2023-11-20T09:13:45Z",
      "side": 1,
      "message": "Yes. The order of the decorators doesn\u0027t matter at all. I just like to see the mock data in the order in which it is used in the code.",
      "parentUuid": "77ac226a_1487c74e",
      "range": {
        "startLine": 30,
        "startChar": 3,
        "endLine": 30,
        "endChar": 8
      },
      "revId": "40494433553d20852edc609fbb05f2d69d8b8bf8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5011ca4_bd511fe4",
        "filename": "tools/release/roll_merge_gerrit_test.py",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2023-11-20T08:27:38Z",
      "side": 1,
      "message": "Here we could list all the mocks and verify more conditions on them. But for now let\u0027s go with verifying all the observable output.",
      "range": {
        "startLine": 50,
        "startChar": 28,
        "endLine": 50,
        "endChar": 33
      },
      "revId": "40494433553d20852edc609fbb05f2d69d8b8bf8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "40494433553d20852edc609fbb05f2d69d8b8bf8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "40494433553d20852edc609fbb05f2d69d8b8bf8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "40494433553d20852edc609fbb05f2d69d8b8bf8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "40494433553d20852edc609fbb05f2d69d8b8bf8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}