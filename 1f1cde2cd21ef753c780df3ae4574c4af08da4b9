{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "06d3965b_55252029",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-07-15T09:34:12Z",
      "side": 1,
      "message": "DBC",
      "revId": "1f1cde2cd21ef753c780df3ae4574c4af08da4b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0c5f735_2b525361",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2021-07-15T09:44:57Z",
      "side": 1,
      "message": "Thanks Jakob!",
      "revId": "1f1cde2cd21ef753c780df3ae4574c4af08da4b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7065d32_eb707b84",
        "filename": "src/builtins/array-concat.tq",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-07-15T09:34:12Z",
      "side": 1,
      "message": "This and the above seem like such special cases that I wonder if the fast paths are worth the extra cost (paid on each call).",
      "revId": "1f1cde2cd21ef753c780df3ae4574c4af08da4b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e885e4e5_0ecd733c",
        "filename": "src/builtins/array-concat.tq",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2021-07-15T09:44:57Z",
      "side": 1,
      "message": "I don\u0027t think the cost is big for the first case (a single comparison). And it seems to be a common approach to copy an array.\nThe second case can be amortised later, since the protectors are checked in the slow path. I will change it when porting the rest of ArrayConcat to Torque (which will avoid the C++ trampoline).",
      "parentUuid": "b7065d32_eb707b84",
      "revId": "1f1cde2cd21ef753c780df3ae4574c4af08da4b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80b6985f_d0098728",
        "filename": "src/builtins/array-concat.tq",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-07-15T09:34:12Z",
      "side": 1,
      "message": "Somewhat misleading name, it could be an array (the cast may fail due to invalidated protectors).",
      "revId": "1f1cde2cd21ef753c780df3ae4574c4af08da4b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24e58d3a_7bc22481",
        "filename": "src/builtins/array-concat.tq",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2021-07-15T09:44:57Z",
      "side": 1,
      "message": "Fair enough. I will change it!",
      "parentUuid": "80b6985f_d0098728",
      "revId": "1f1cde2cd21ef753c780df3ae4574c4af08da4b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c84132bd_18bbd7c3",
        "filename": "src/codegen/code-stub-assembler.cc",
        "patchSetId": 5
      },
      "lineNbr": 6198,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2021-07-15T08:47:01Z",
      "side": 1,
      "message": "this looks unintentional?",
      "range": {
        "startLine": 6198,
        "startChar": 32,
        "endLine": 6198,
        "endChar": 36
      },
      "revId": "1f1cde2cd21ef753c780df3ae4574c4af08da4b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c58712f_d2c9d3b7",
        "filename": "src/codegen/code-stub-assembler.cc",
        "patchSetId": 5
      },
      "lineNbr": 6198,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2021-07-15T09:21:54Z",
      "side": 1,
      "message": "No, it is intentional. :/\nThe convention is `Is + name + CellInvalid`, the name is  IsConcatSpreadableProtector!",
      "parentUuid": "c84132bd_18bbd7c3",
      "range": {
        "startLine": 6198,
        "startChar": 32,
        "endLine": 6198,
        "endChar": 36
      },
      "revId": "1f1cde2cd21ef753c780df3ae4574c4af08da4b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84aa25ae_64fab084",
        "filename": "src/codegen/code-stub-assembler.cc",
        "patchSetId": 5
      },
      "lineNbr": 6198,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2021-07-15T10:02:03Z",
      "side": 1,
      "message": "I see, makes sense, thanks!",
      "parentUuid": "0c58712f_d2c9d3b7",
      "range": {
        "startLine": 6198,
        "startChar": 32,
        "endLine": 6198,
        "endChar": 36
      },
      "revId": "1f1cde2cd21ef753c780df3ae4574c4af08da4b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "920a9251_a118139a",
        "filename": "src/codegen/code-stub-assembler.h",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2021-07-15T08:47:01Z",
      "side": 1,
      "message": "where is this protector invalidated?",
      "range": {
        "startLine": 71,
        "startChar": 33,
        "endLine": 71,
        "endChar": 63
      },
      "revId": "1f1cde2cd21ef753c780df3ae4574c4af08da4b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23f6aafd_e8307b48",
        "filename": "src/codegen/code-stub-assembler.h",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2021-07-15T09:21:54Z",
      "side": 1,
      "message": "The following code should not go to the fast path:\n```\nlet a \u003d []\na[Symbol.isConcatSpreadable] \u003d false;\nlet b \u003d a.concat();\n```",
      "parentUuid": "920a9251_a118139a",
      "range": {
        "startLine": 71,
        "startChar": 33,
        "endLine": 71,
        "endChar": 63
      },
      "revId": "1f1cde2cd21ef753c780df3ae4574c4af08da4b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ef50581_69b700b2",
        "filename": "src/codegen/code-stub-assembler.h",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2021-07-15T10:02:03Z",
      "side": 1,
      "message": "Ah, sorry, I misunderstood the CL -- I thought you were adding this protector, not just using it.",
      "parentUuid": "23f6aafd_e8307b48",
      "range": {
        "startLine": 71,
        "startChar": 33,
        "endLine": 71,
        "endChar": 63
      },
      "revId": "1f1cde2cd21ef753c780df3ae4574c4af08da4b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}