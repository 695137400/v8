{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d6f10bd1_98a6b1c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-06-09T11:16:36Z",
      "side": 1,
      "message": "Is this the right bug to reference? Maybe https://crbug.com/v8/11336, or a separate issue instead (that might also cover other instance fields)?",
      "revId": "5acfffb8fd60af6b211ab595d662bd6cfa4d1ca2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c27d0db_96b1c341",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2021-06-09T10:56:18Z",
      "side": 1,
      "message": "PTAL",
      "revId": "5acfffb8fd60af6b211ab595d662bd6cfa4d1ca2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bad3630b_18c8be3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-06-09T11:16:36Z",
      "side": 1,
      "message": "Nice! LGTM with some nits and one actual issue.",
      "revId": "5acfffb8fd60af6b211ab595d662bd6cfa4d1ca2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d1b3ee9_3d9ef2be",
        "filename": "src/wasm/baseline/liftoff-assembler.cc",
        "patchSetId": 4
      },
      "lineNbr": 768,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-06-09T11:16:36Z",
      "side": 1,
      "message": "memory start",
      "range": {
        "startLine": 768,
        "startChar": 49,
        "endLine": 768,
        "endChar": 57
      },
      "revId": "5acfffb8fd60af6b211ab595d662bd6cfa4d1ca2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65247a9c_e4837991",
        "filename": "src/wasm/baseline/liftoff-assembler.cc",
        "patchSetId": 4
      },
      "lineNbr": 782,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-06-09T11:16:36Z",
      "side": 1,
      "message": "Wouldn\u0027t this have to move out of the \"if\"?",
      "revId": "5acfffb8fd60af6b211ab595d662bd6cfa4d1ca2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b478bfa6_1ba05399",
        "filename": "src/wasm/baseline/liftoff-assembler.cc",
        "patchSetId": 4
      },
      "lineNbr": 1180,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-06-09T11:16:36Z",
      "side": 1,
      "message": "This is an exact copy of the code above, just on a different field. Can we refactor this to a loop, something like:\nfor (Register cache_reg : {cache_state_.cached_instance, cache_state_.cached_mem_start}) { ...",
      "range": {
        "startLine": 1173,
        "startChar": 0,
        "endLine": 1180,
        "endChar": 3
      },
      "revId": "5acfffb8fd60af6b211ab595d662bd6cfa4d1ca2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b79ccac5_e207cabf",
        "filename": "src/wasm/baseline/liftoff-assembler.h",
        "patchSetId": 4
      },
      "lineNbr": 266,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-06-09T11:16:36Z",
      "side": 1,
      "message": "Should we do another \"DCHECK(candidates.has(cached_mem_start))\" here?",
      "revId": "5acfffb8fd60af6b211ab595d662bd6cfa4d1ca2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67688610_9f1ebabb",
        "filename": "src/wasm/baseline/liftoff-assembler.h",
        "patchSetId": 4
      },
      "lineNbr": 304,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-06-09T11:16:36Z",
      "side": 1,
      "message": "Why don\u0027t we use SetInstanceCacheRegister here?",
      "revId": "5acfffb8fd60af6b211ab595d662bd6cfa4d1ca2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}