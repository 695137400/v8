{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "98fcdb2a_d5684e0a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1344750
      },
      "writtenOn": "2024-05-02T08:13:36Z",
      "side": 1,
      "message": "friendly ping",
      "revId": "cc9b9507e87c2d411ccdebb1bbf145f1ce88e8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1a4e854_e9ad7af6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2024-05-02T08:59:39Z",
      "side": 1,
      "message": "LGTM with nits",
      "revId": "cc9b9507e87c2d411ccdebb1bbf145f1ce88e8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6481ab49_ec8b6ea2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1344750
      },
      "writtenOn": "2024-05-02T14:51:45Z",
      "side": 1,
      "message": "Thanks!",
      "revId": "cc9b9507e87c2d411ccdebb1bbf145f1ce88e8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd54eb4a_28ad3272",
        "filename": "src/heap/concurrent-marking.cc",
        "patchSetId": 3
      },
      "lineNbr": 287,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2024-05-02T08:59:39Z",
      "side": 1,
      "message": "Nit: Should we have a method for `new_space() || sticky_mark_bits`? There are uses of this pattern already in the code base and this CL seems to add quite some more.",
      "revId": "cc9b9507e87c2d411ccdebb1bbf145f1ce88e8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "532d3810_4e2a99ff",
        "filename": "src/heap/concurrent-marking.cc",
        "patchSetId": 3
      },
      "lineNbr": 287,
      "author": {
        "id": 1344750
      },
      "writtenOn": "2024-05-02T14:51:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd54eb4a_28ad3272",
      "revId": "cc9b9507e87c2d411ccdebb1bbf145f1ce88e8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80567986_3d27bb3a",
        "filename": "src/heap/mark-compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 4801,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2024-05-02T08:59:39Z",
      "side": 1,
      "message": "Can you add a comment here why we bail out early here? I understand that OLD_TO_NEW is empty after the full GC but that\u0027s already the case now.",
      "revId": "cc9b9507e87c2d411ccdebb1bbf145f1ce88e8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fd6d158_7ad5b167",
        "filename": "src/heap/mark-compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 4801,
      "author": {
        "id": 1344750
      },
      "writtenOn": "2024-05-02T14:51:45Z",
      "side": 1,
      "message": "Actually I think we still need to update the slot with sticky bits. It used to work I guess because the compaction was disabled. I removed the branch.",
      "parentUuid": "80567986_3d27bb3a",
      "revId": "cc9b9507e87c2d411ccdebb1bbf145f1ce88e8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "123a330d_67684430",
        "filename": "src/heap/mark-compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 5186,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2024-05-02T08:59:39Z",
      "side": 1,
      "message": "Can we DCHECK this instead?",
      "revId": "cc9b9507e87c2d411ccdebb1bbf145f1ce88e8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "525f736f_7b27b50e",
        "filename": "src/heap/mark-compact.cc",
        "patchSetId": 3
      },
      "lineNbr": 5186,
      "author": {
        "id": 1344750
      },
      "writtenOn": "2024-05-02T14:51:45Z",
      "side": 1,
      "message": "We need to bail out currently with sticky bits. I guess we can either do it here or in the parent frame.",
      "parentUuid": "123a330d_67684430",
      "revId": "cc9b9507e87c2d411ccdebb1bbf145f1ce88e8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc0f1643_83118d84",
        "filename": "src/heap/minor-mark-sweep.cc",
        "patchSetId": 3
      },
      "lineNbr": 588,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2024-05-02T08:59:39Z",
      "side": 1,
      "message": "Nit: DCHECK_NULL?",
      "revId": "cc9b9507e87c2d411ccdebb1bbf145f1ce88e8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "679ddd56_f4d8f531",
        "filename": "src/heap/minor-mark-sweep.cc",
        "patchSetId": 3
      },
      "lineNbr": 588,
      "author": {
        "id": 1344750
      },
      "writtenOn": "2024-05-02T14:51:45Z",
      "side": 1,
      "message": "It actually returns a bool, so I believe it better be a dcheck.",
      "parentUuid": "fc0f1643_83118d84",
      "revId": "cc9b9507e87c2d411ccdebb1bbf145f1ce88e8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74ec014d_a23bc475",
        "filename": "src/heap/minor-mark-sweep.cc",
        "patchSetId": 3
      },
      "lineNbr": 588,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2024-05-02T15:20:57Z",
      "side": 1,
      "message": "Yes, for similar checks we often use `DCHECK_NULL(chunk-\u003eslot_set\u003cOLD_TO_NEW\u003e())` which ensures that the SlotSet is not even allocated. Not sure about `ContainsSlot()` but the null check would make that more explicit.",
      "parentUuid": "679ddd56_f4d8f531",
      "revId": "cc9b9507e87c2d411ccdebb1bbf145f1ce88e8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c24ec790_8fcc525b",
        "filename": "src/heap/minor-mark-sweep.cc",
        "patchSetId": 3
      },
      "lineNbr": 588,
      "author": {
        "id": 1344750
      },
      "writtenOn": "2024-05-03T09:04:13Z",
      "side": 1,
      "message": "With `DCHECK_NULL` we would have to check both `slot_set` and `typed_slot_set`:\n```\nDCHECK_NULL(chunk-\u003eslot_set\u003cOLD_TO_NEW\u003e());\nDCHECK_NULL(chunk-\u003etyped_slot_set\u003cOLD_TO_NEW\u003e());\n```\nwhere `Page::ContainsSlots()` already handles them both. Do you still think that checking both would be preferable (to me `ContainsSlots()` feels more descriptive, but since it\u0027s stylistic, it doesn\u0027t matter to me).",
      "parentUuid": "74ec014d_a23bc475",
      "revId": "cc9b9507e87c2d411ccdebb1bbf145f1ce88e8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13b730c1_46bbdb5a",
        "filename": "src/heap/minor-mark-sweep.cc",
        "patchSetId": 3
      },
      "lineNbr": 588,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2024-05-03T09:12:42Z",
      "side": 1,
      "message": "Ah okay, that makes sense. Whatever seems better to you then.",
      "parentUuid": "c24ec790_8fcc525b",
      "revId": "cc9b9507e87c2d411ccdebb1bbf145f1ce88e8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0af34728_96d8035b",
        "filename": "src/heap/sweeper.cc",
        "patchSetId": 3
      },
      "lineNbr": 1337,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2024-05-02T08:59:39Z",
      "side": 1,
      "message": "Nit: This also seems like a common pattern that we could add a method for.",
      "revId": "cc9b9507e87c2d411ccdebb1bbf145f1ce88e8dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}