{
  "comments": [
    {
      "key": {
        "uuid": "60950eea_ad15dc83",
        "filename": "src/builtins/builtins-internal-gen.cc",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-27T14:05:41Z",
      "side": 1,
      "message": "Nit: maybe_heap_object_or_smi / maybe_debug_info_or_string_or_smi ;)",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79f22d7c_614c7d64",
        "filename": "src/builtins/builtins-internal-gen.cc",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2018-06-28T07:52:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "60950eea_ad15dc83",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08eb91b2_3ff42298",
        "filename": "src/debug/debug.cc",
        "patchSetId": 2
      },
      "lineNbr": 2202,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-27T14:05:41Z",
      "side": 1,
      "message": "Nit: ilosate :)",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b47ba0e6_11a8ee14",
        "filename": "src/debug/debug.cc",
        "patchSetId": 2
      },
      "lineNbr": 2202,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2018-06-28T07:52:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08eb91b2_3ff42298",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "585fafb2_75e71691",
        "filename": "src/objects-printer.cc",
        "patchSetId": 2
      },
      "lineNbr": 2043,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-27T14:05:41Z",
      "side": 1,
      "message": "We could also print the function identifier.",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8ffbe2b_5ed074de",
        "filename": "src/objects-printer.cc",
        "patchSetId": 2
      },
      "lineNbr": 2043,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2018-06-28T07:52:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "585fafb2_75e71691",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fc67b50_728a7ea4",
        "filename": "src/objects/debug-objects-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-27T14:05:41Z",
      "side": 1,
      "message": "Should the function be renamed? I\u0027m confused that HasDebugBytecodeArray checks original_bytecode_array",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c3aec41_bfde1488",
        "filename": "src/objects/debug-objects-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2018-06-28T07:52:33Z",
      "side": 1,
      "message": "Renamed to HasInstrummentedBytecodeArray - this specifies whether the associated function has a instrumented bytecode array (and if so the DebugInfo stores the original) - added a comment to the header to clarify.",
      "parentUuid": "1fc67b50_728a7ea4",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de0ebe46_e88ca5d2",
        "filename": "src/objects/debug-objects-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-28T09:46:13Z",
      "side": 1,
      "message": "Ack. So HasInstrumentedBytecodeArray refers to the associated function, not the DebugInfo.",
      "parentUuid": "9c3aec41_bfde1488",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7c10e43_62ec453b",
        "filename": "src/objects/debug-objects.cc",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-27T14:05:41Z",
      "side": 1,
      "message": "Why this change? Previously, we\u0027d pack debugger_hints back into the SFI when DebugInfo was freed. Oh I see, the field has been removed from the SFI and there\u0027s no other place to store debugger hints.\n\nBut if we end up removing SFI::builtin_function_id, we could pack debugger hints back in the SFI, right? Could you leave a TODO?",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf6b8440_8a9c173a",
        "filename": "src/objects/debug-objects.cc",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2018-06-28T07:52:33Z",
      "side": 1,
      "message": "As discussed in the comment in shared-function-info.h, we can\u0027t pack debugger_hints in the SFI and still save a slot.",
      "parentUuid": "b7c10e43_62ec453b",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c10c99f3_b2dcac1b",
        "filename": "src/objects/debug-objects.cc",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-28T09:46:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cf6b8440_8a9c173a",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d28f98c0_171f75a4",
        "filename": "src/objects/debug-objects.cc",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-27T14:05:41Z",
      "side": 1,
      "message": "Could you add a short comment, why are we setting the DebugBytecodeArray to OriginalBytecodeArray?",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f02f780_6a835e05",
        "filename": "src/objects/debug-objects.cc",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2018-06-28T07:52:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d28f98c0_171f75a4",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e9d5999_1a0a3305",
        "filename": "src/objects/debug-objects.cc",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-28T09:46:13Z",
      "side": 1,
      "message": "Just for my understanding: this is now necessary because behavior has switched. If breakpoints exist, the SFI now contains the instrumented bytecode and DebugInfo the original bytecode. Previously this was vice-versa.\n\nSo clearing breakpoints now means we need to reset the bytecode array on the SFI.",
      "parentUuid": "0f02f780_6a835e05",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "801ca2fe_d64c18bf",
        "filename": "src/objects/debug-objects.h",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2018-06-27T13:02:39Z",
      "side": 1,
      "message": "nit: instrumented",
      "range": {
        "startLine": 82,
        "startChar": 18,
        "endLine": 82,
        "endChar": 31
      },
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9124ac36_b76c669f",
        "filename": "src/objects/debug-objects.h",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2018-06-28T07:52:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "801ca2fe_d64c18bf",
      "range": {
        "startLine": 82,
        "startChar": 18,
        "endLine": 82,
        "endChar": 31
      },
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef200ddb_7ab5944d",
        "filename": "src/objects/debug-objects.h",
        "patchSetId": 2
      },
      "lineNbr": 119,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-27T14:05:41Z",
      "side": 1,
      "message": "Why not DECL_INT_ACCESSORS?",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95085bea_6d19af16",
        "filename": "src/objects/debug-objects.h",
        "patchSetId": 2
      },
      "lineNbr": 119,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2018-06-28T07:52:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ef200ddb_7ab5944d",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fad97bd1_3677559a",
        "filename": "src/objects/debug-objects.h",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-27T14:05:41Z",
      "side": 1,
      "message": "Ditto",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cd8f2b7_da57df61",
        "filename": "src/objects/debug-objects.h",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2018-06-28T07:52:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fad97bd1_3677559a",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2fcbcd5_bbbf8050",
        "filename": "src/objects/shared-function-info-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 534,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-27T14:05:41Z",
      "side": 1,
      "message": "IsDebugInfo?",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2888735c_a531f68a",
        "filename": "src/objects/shared-function-info-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 534,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2018-06-28T07:52:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a2fcbcd5_bbbf8050",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c292fe41_1c7a81ee",
        "filename": "src/objects/shared-function-info-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 543,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-27T14:05:41Z",
      "side": 1,
      "message": "Nit: {} braces, and can we assert the returned object is either a Smi or String? Not sure how often this is accessed, but if performance-sensitive it could read:\n\n obj \u003d function_identifier_or_debug_info();\n return obj-\u003eIsDebugInfo() ? /*...*/ : obj;",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "063b3a4b_52a512d2",
        "filename": "src/objects/shared-function-info-inl.h",
        "patchSetId": 2
      },
      "lineNbr": 543,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2018-06-28T07:52:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c292fe41_1c7a81ee",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4017c146_3266253e",
        "filename": "src/objects/shared-function-info.h",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-27T14:05:41Z",
      "side": 1,
      "message": "By the way - this (BuiltinFunctionId) should be merged with builtin_id() above at some point.\n\nEdit after looking at DebugInfo changes: If we remove it, we could pack debugger_hints into function_identifier.",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad6199f_ff19015a",
        "filename": "src/objects/shared-function-info.h",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2018-06-27T14:13:02Z",
      "side": 1,
      "message": "Note that function_identifier would still have to exist for the String pointer to the inferred name, which we can\u0027t remove, so we wouldn\u0027t be able to reuse the field for debugger hints.\n\nAlso, builtin_function_id is semantically different to builtin_id, I believe we\u0027d have to get rid of all JS builtins before we could merge them.",
      "parentUuid": "4017c146_3266253e",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5176467b_1a0b469a",
        "filename": "src/objects/shared-function-info.h",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-27T14:56:10Z",
      "side": 1,
      "message": "Right - we could only pack debugger hints if no inferred name exists.\n\nSee also https://crbug.com/v8/6993 for merging builtin_function_id and builtin_id.",
      "parentUuid": "9ad6199f_ff19015a",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38bf7a24_4163fd3d",
        "filename": "src/objects/shared-function-info.h",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2018-06-28T07:52:33Z",
      "side": 1,
      "message": "Right, given that any function could have an inferred name, we can\u0027t pack debugger hints in here and still save a slot. I\u0027d rather just keep debugger hints in DebugInfo so we only pay the memory cost for debugging if the debugger is enabled (which is the main reason for this change).",
      "parentUuid": "5176467b_1a0b469a",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14b6d8bc_d6540bd1",
        "filename": "src/objects/shared-function-info.h",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-28T09:46:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "38bf7a24_4163fd3d",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08fab421_03717628",
        "filename": "src/objects/shared-function-info.h",
        "patchSetId": 2
      },
      "lineNbr": 231,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-27T14:05:41Z",
      "side": 1,
      "message": "Nit: Either above DebugInfo functions or below CoverageInfo (DebugInfo/BreakInfo/CoverageInfo are all related).",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a59077dc_cc7d6d6e",
        "filename": "src/objects/shared-function-info.h",
        "patchSetId": 2
      },
      "lineNbr": 231,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2018-06-28T07:52:33Z",
      "side": 1,
      "message": "Done - I wanted the DebugInfo functions clustered with function_identifier... since they are now related.",
      "parentUuid": "08fab421_03717628",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d64ad680_1ee1a548",
        "filename": "src/objects/shared-function-info.h",
        "patchSetId": 2
      },
      "lineNbr": 231,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-28T09:46:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a59077dc_cc7d6d6e",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "287f7b36_3f2003a2",
        "filename": "src/snapshot/code-serializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 203,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-27T14:05:41Z",
      "side": 1,
      "message": "Is this right? HasDebugBytecodeArray checks original_bytecode_array(), and DebugBytecodeArray() returns shared()-\u003eGetDebugBytecodeArray. Somehow I find these name / bytecode swaps very confusing.",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bb5ac90_e548638a",
        "filename": "src/snapshot/code-serializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 203,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2018-06-28T07:52:33Z",
      "side": 1,
      "message": "As above, renamed function to HasInstrumentedBytecodeArray.",
      "parentUuid": "287f7b36_3f2003a2",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4c5a07a_b9c53c68",
        "filename": "src/snapshot/code-serializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 203,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-28T09:46:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2bb5ac90_e548638a",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2cc4f7f1_0f8e85cd",
        "filename": "src/snapshot/code-serializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 217,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-27T14:05:41Z",
      "side": 1,
      "message": "Nit: \u0027.\u0027",
      "revId": "964ceb27ae58330e375135e45c5fad4808c2cd4c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}