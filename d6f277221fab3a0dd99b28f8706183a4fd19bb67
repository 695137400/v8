{
  "comments": [
    {
      "key": {
        "uuid": "554f456a_6687634b",
        "filename": "src/api.cc",
        "patchSetId": 4
      },
      "lineNbr": 9860,
      "author": {
        "id": 1230559
      },
      "writtenOn": "2018-02-08T01:08:09Z",
      "side": 1,
      "message": "Not sure if these macros are the preferred way, but I copied this pattern from a similar function \u0027debug::CompileInspectorScript\u0027\nhttps://cs.chromium.org/chromium/src/v8/src/api.cc?type\u003dcs\u0026l\u003d9665",
      "range": {
        "startLine": 9860,
        "startChar": 2,
        "endLine": 9860,
        "endChar": 52
      },
      "revId": "d6f277221fab3a0dd99b28f8706183a4fd19bb67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59db0299_98b77cef",
        "filename": "src/debug/debug-evaluate.cc",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1125920
      },
      "writtenOn": "2018-02-08T01:22:47Z",
      "side": 1,
      "message": "I believe that since debug context is deprecated and DevTools do not use it anymore, we can remove this context lookup and assume that caller of this function set correct context using v8::Context::Scope or we can pass Handle\u003cContext\u003e instead of Isolate* as an argument to this method.\n\nSo could we remove code from line 31 to line 37?",
      "revId": "d6f277221fab3a0dd99b28f8706183a4fd19bb67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfa2a122_07b5e9f5",
        "filename": "src/debug/debug-evaluate.cc",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1230559
      },
      "writtenOn": "2018-02-08T03:13:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "59db0299_98b77cef",
      "revId": "d6f277221fab3a0dd99b28f8706183a4fd19bb67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d5f9a64_21aa3673",
        "filename": "src/debug/debug-evaluate.cc",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1230559
      },
      "writtenOn": "2018-02-08T03:13:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "59db0299_98b77cef",
      "revId": "d6f277221fab3a0dd99b28f8706183a4fd19bb67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2a4b353_4d534ac7",
        "filename": "src/debug/debug-evaluate.cc",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1125920
      },
      "writtenOn": "2018-02-08T01:22:47Z",
      "side": 1,
      "message": "Could you check that you need isOpaque flag?",
      "revId": "d6f277221fab3a0dd99b28f8706183a4fd19bb67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbb61fa9_421588b9",
        "filename": "src/debug/debug-evaluate.cc",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1230559
      },
      "writtenOn": "2018-02-08T03:13:57Z",
      "side": 1,
      "message": "By setting isOpaque \u003d true, we are guaranteed to sanitize any error events [1] generated by the script, which replaces error messages with \u0027Script error.\u0027 [2].\n\nIf we do not set isOpaque, then sanitizing errors will depend on the current isolate\u0027s SecurityOrigin and the script\u0027s URL (which we set to empty).  Potentially, fewer error messages will be sanitized than before.  It seems strange to me that a particular context could evaluate a script and not be allowed to see its own error events.\n\nIf we decide to change the flag, I\u0027d rather do it in a separate CL for extra caution.  It\u0027s been set to True since the initial import of v8_inspector to v8.\n\n[1] https://cs.chromium.org/chromium/src/third_party/WebKit/Source/core/dom/ExecutionContext.cpp?gsn\u003dAccessControlStatus\u0026l\u003d118\n[2] https://cs.chromium.org/chromium/src/third_party/WebKit/Source/core/events/ErrorEvent.h?l\u003d68\u0026gsn\u003dCreateSanitizedError",
      "parentUuid": "f2a4b353_4d534ac7",
      "revId": "d6f277221fab3a0dd99b28f8706183a4fd19bb67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7addca31_1dfe4bec",
        "filename": "src/debug/debug-evaluate.cc",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1125920
      },
      "writtenOn": "2018-02-08T01:22:47Z",
      "side": 1,
      "message": "nit: shared or shared_info is more common name for SharedFunctionInfo that I have seen in code base.",
      "range": {
        "startLine": 51,
        "startChar": 29,
        "endLine": 51,
        "endChar": 42
      },
      "revId": "d6f277221fab3a0dd99b28f8706183a4fd19bb67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ca77786_a86701dc",
        "filename": "src/debug/debug-evaluate.cc",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1230559
      },
      "writtenOn": "2018-02-08T03:13:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7addca31_1dfe4bec",
      "range": {
        "startLine": 51,
        "startChar": 29,
        "endLine": 51,
        "endChar": 42
      },
      "revId": "d6f277221fab3a0dd99b28f8706183a4fd19bb67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b515f70_a4d0e99f",
        "filename": "src/debug/debug-evaluate.cc",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1125920
      },
      "writtenOn": "2018-02-08T01:22:47Z",
      "side": 1,
      "message": "nit: inline it",
      "range": {
        "startLine": 59,
        "startChar": 39,
        "endLine": 59,
        "endChar": 47
      },
      "revId": "d6f277221fab3a0dd99b28f8706183a4fd19bb67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ddd6261_a085b59e",
        "filename": "src/debug/debug-evaluate.cc",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1230559
      },
      "writtenOn": "2018-02-08T03:13:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b515f70_a4d0e99f",
      "range": {
        "startLine": 59,
        "startChar": 39,
        "endLine": 59,
        "endChar": 47
      },
      "revId": "d6f277221fab3a0dd99b28f8706183a4fd19bb67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c40f3a5_44470d01",
        "filename": "src/debug/debug-interface.h",
        "patchSetId": 4
      },
      "lineNbr": 503,
      "author": {
        "id": 1125920
      },
      "writtenOn": "2018-02-08T01:22:47Z",
      "side": 1,
      "message": "nit: v8::MaybeLocal",
      "range": {
        "startLine": 503,
        "startChar": 0,
        "endLine": 503,
        "endChar": 10
      },
      "revId": "d6f277221fab3a0dd99b28f8706183a4fd19bb67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e25ebe6_f9fb2c7a",
        "filename": "src/debug/debug-interface.h",
        "patchSetId": 4
      },
      "lineNbr": 503,
      "author": {
        "id": 1230559
      },
      "writtenOn": "2018-02-08T03:13:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6c40f3a5_44470d01",
      "range": {
        "startLine": 503,
        "startChar": 0,
        "endLine": 503,
        "endChar": 10
      },
      "revId": "d6f277221fab3a0dd99b28f8706183a4fd19bb67",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}