{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f49f729f_ad950e8c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2024-04-16T06:25:27Z",
      "side": 1,
      "message": "lgtm, only looked at API, exuction, and heap",
      "revId": "c90d7007ec042f304099e38782faccd1b5da5728",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42bfda80_d637d305",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1231371
      },
      "writtenOn": "2024-04-16T11:41:16Z",
      "side": 1,
      "message": "Thanks for the review!",
      "revId": "c90d7007ec042f304099e38782faccd1b5da5728",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f80ee2a_53b22761",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-04-16T13:33:16Z",
      "side": 1,
      "message": "One more thing I just noticed",
      "revId": "c90d7007ec042f304099e38782faccd1b5da5728",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7db24628_4380fea9",
        "filename": "include/v8-internal.h",
        "patchSetId": 8
      },
      "lineNbr": 342,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2024-04-16T06:25:27Z",
      "side": 1,
      "message": "Introducing the CppPointerTable (which is just an EPT) caused OOMs for virtual memory on Android. The additional reservation may cause similar issues here.",
      "range": {
        "startLine": 342,
        "startChar": 55,
        "endLine": 342,
        "endChar": 58
      },
      "revId": "c90d7007ec042f304099e38782faccd1b5da5728",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87ea83fc_ae5d2082",
        "filename": "include/v8-internal.h",
        "patchSetId": 8
      },
      "lineNbr": 342,
      "author": {
        "id": 1231371
      },
      "writtenOn": "2024-04-16T07:09:40Z",
      "side": 1,
      "message": "Thanks for bringing this up! I see the solution there was to half the reservation size.\n\n@saelo@chromium.org should we have a fallback for the buffer table case where failure to allocate subspace should use regular EPT ? Or just half the reservation for android as done for EPT ?",
      "parentUuid": "7db24628_4380fea9",
      "range": {
        "startLine": 342,
        "startChar": 55,
        "endLine": 342,
        "endChar": 58
      },
      "revId": "c90d7007ec042f304099e38782faccd1b5da5728",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03c47943_62df3e79",
        "filename": "include/v8-internal.h",
        "patchSetId": 8
      },
      "lineNbr": 342,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-04-16T08:03:54Z",
      "side": 1,
      "message": "I think a fallback case like that would add quite a bit of complexity and I\u0027m not sure if it\u0027d be secure, so I\u0027d like to avoid that. I think we could try halving the size on Android (as we do for the other tables) and then see if that\u0027s good enough.",
      "parentUuid": "87ea83fc_ae5d2082",
      "range": {
        "startLine": 342,
        "startChar": 55,
        "endLine": 342,
        "endChar": 58
      },
      "revId": "c90d7007ec042f304099e38782faccd1b5da5728",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa998224_d95b72d1",
        "filename": "include/v8-internal.h",
        "patchSetId": 8
      },
      "lineNbr": 342,
      "author": {
        "id": 1231371
      },
      "writtenOn": "2024-04-16T11:41:16Z",
      "side": 1,
      "message": "Sounds good. Addressed in https://chromium-review.googlesource.com/c/v8/v8/+/5456955",
      "parentUuid": "03c47943_62df3e79",
      "range": {
        "startLine": 342,
        "startChar": 55,
        "endLine": 342,
        "endChar": 58
      },
      "revId": "c90d7007ec042f304099e38782faccd1b5da5728",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02776a35_99e82ace",
        "filename": "src/sandbox/external-buffer-table.h",
        "patchSetId": 8
      },
      "lineNbr": 232,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-04-16T13:33:16Z",
      "side": 1,
      "message": "Now that we use two fields in the Entry struct, and set both in this function, I think this statement is no longer true. If we\u0027re unlucky, a `::Set` in one thread could interleave with a `::Get` in another thread and produce incorrect results. Maybe just update this comment to state that it is not atomic as it stores two fields?",
      "revId": "c90d7007ec042f304099e38782faccd1b5da5728",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}