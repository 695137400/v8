{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ed748d36_19c6f96d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1341998
      },
      "writtenOn": "2020-12-05T18:02:46Z",
      "side": 1,
      "message": "I\u0027m not 100% sure what was going on here. I noticed when I was updating optional chaining here:\n\nhttps://chromium-review.googlesource.com/c/v8/v8/+/2573013\n\nThat SourceRangeScope did a poor job of determining the terminal source position, when run within a loop. I tried pulling SourceRangeScope into an additional block, but it continued to determine a bad source position.\n\nWhen I instead create a SourceRange with a parser position, things work great.",
      "revId": "11e78d374208410e931f08b2231ae27bb96acdf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ac5649f_10d080e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1358537
      },
      "writtenOn": "2020-12-07T18:07:47Z",
      "side": 1,
      "message": "This looks good to me, but may want to have someone closer to the parser lgtm.",
      "revId": "11e78d374208410e931f08b2231ae27bb96acdf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea2f97cd_16dc3e23",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1341998
      },
      "writtenOn": "2020-12-07T18:11:46Z",
      "side": 1,
      "message": "added verwaest@ üëç",
      "parentUuid": "6ac5649f_10d080e0",
      "revId": "11e78d374208410e931f08b2231ae27bb96acdf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f9e39fa_fc04213f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2020-12-11T12:40:46Z",
      "side": 1,
      "message": "I\u0027m going to have to let Jakob Gruber take a look at this since he did code coverage first. I agree that the destructor of the RangeScope makes it run until the next token, but isn\u0027t that always the case?",
      "revId": "11e78d374208410e931f08b2231ae27bb96acdf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7296b3e8_002fa132",
        "filename": "src/parsing/parser-base.h",
        "patchSetId": 1
      },
      "lineNbr": 2984,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2020-12-11T12:40:46Z",
      "side": 1,
      "message": "It seems like what you want is:\nwhile (peek() \u003d\u003d Token::NULLISH) {\n  SourceRange right_range;\n  int pos;\n  ExpressionT y;\n  {\n    SourceRangeScope right_range_scope(scanner(), \u0026right_range);\n    Consume(Token::NULLISH);\n    pos \u003d peek_position();\n    y \u003d ParseBinaryExpression(6);\n  }\n  if (....",
      "revId": "11e78d374208410e931f08b2231ae27bb96acdf7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}