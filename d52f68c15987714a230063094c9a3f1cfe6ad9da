{
  "comments": [
    {
      "key": {
        "uuid": "8aafeb37_550091d9",
        "filename": "src/heap/cppgc/globals.h",
        "patchSetId": 4
      },
      "lineNbr": 19,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-05-29T01:20:59Z",
      "side": 1,
      "message": "nit: kKB?",
      "range": {
        "startLine": 19,
        "startChar": 17,
        "endLine": 19,
        "endChar": 19
      },
      "revId": "d52f68c15987714a230063094c9a3f1cfe6ad9da",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a135c085_635dbef7",
        "filename": "src/heap/cppgc/heap.cc",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-05-29T01:20:59Z",
      "side": 1,
      "message": "nit: I think you can move initialization of reserved_area_ and bounded_allocator_ to the initializer list above.",
      "range": {
        "startLine": 132,
        "startChar": 2,
        "endLine": 132,
        "endChar": 16
      },
      "revId": "d52f68c15987714a230063094c9a3f1cfe6ad9da",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1f32100_0d86d299",
        "filename": "src/heap/cppgc/heap.h",
        "patchSetId": 4
      },
      "lineNbr": 137,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-05-29T01:20:59Z",
      "side": 1,
      "message": "Since the order is crucial, I think it might be better to explicitly reset page_backend in the dtor and not rely on the compiler to preserve the order.",
      "range": {
        "startLine": 137,
        "startChar": 61,
        "endLine": 137,
        "endChar": 67
      },
      "revId": "d52f68c15987714a230063094c9a3f1cfe6ad9da",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a750314_b9c18cfb",
        "filename": "src/heap/cppgc/utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-05-29T01:20:59Z",
      "side": 1,
      "message": "size_",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 8
      },
      "revId": "d52f68c15987714a230063094c9a3f1cfe6ad9da",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9f25e68_e2439ef1",
        "filename": "src/heap/cppgc/utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-05-29T01:20:59Z",
      "side": 1,
      "message": "Calling Reset in any case that is not a move from one VirtualMemory to another might result in a memory leak (since the pages will never be freed). Let\u0027s make Reset private to prevent it from happening.",
      "range": {
        "startLine": 48,
        "startChar": 20,
        "endLine": 48,
        "endChar": 25
      },
      "revId": "d52f68c15987714a230063094c9a3f1cfe6ad9da",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fef56d52_e2f606e3",
        "filename": "src/heap/cppgc/utils.h",
        "patchSetId": 4
      },
      "lineNbr": 17,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-05-29T01:20:59Z",
      "side": 1,
      "message": "Represents",
      "range": {
        "startLine": 17,
        "startChar": 3,
        "endLine": 17,
        "endChar": 12
      },
      "revId": "d52f68c15987714a230063094c9a3f1cfe6ad9da",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e091960_dd67ff63",
        "filename": "src/heap/cppgc/utils.h",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-05-29T01:20:59Z",
      "side": 1,
      "message": "nit: Add a DCHECK in the ctor for the alignment",
      "range": {
        "startLine": 25,
        "startChar": 30,
        "endLine": 25,
        "endChar": 37
      },
      "revId": "d52f68c15987714a230063094c9a3f1cfe6ad9da",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}