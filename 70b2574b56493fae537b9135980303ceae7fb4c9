{
  "comments": [
    {
      "key": {
        "uuid": "6d0b8de0_9e22d71c",
        "filename": "src/x64/assembler-x64.h",
        "patchSetId": 5
      },
      "lineNbr": 347,
      "author": {
        "id": 1119499
      },
      "writtenOn": "2018-08-14T08:37:03Z",
      "side": 1,
      "message": "IIUC, you are adding these constructors so that operands can represent registers and XMMRegisters (i.e. both are non-memory operands). What we\u0027ve been doing up until now is using overloads on the assembler methods themselves to enforce the proper addressing modes (e.g. see that everything in ASSEMBLER_INSTRUCTION_LIST() has overloads for Register, Operand, Immediate, etc).\n\nI think we should keep to the existing paradigm where Operand represents a memory operand, and not registers or XMMRegisters, because if we add these constructors it will then be too easy to create an invalid combination of inputs for assembler methods (e.g. addq(reg, operand) where the operand is actually an XMMRegister).\n\nThat would mean adding overloads for the new instructions that you introduce, but it looks like there are already these overloads.\n\nwdyt?",
      "revId": "70b2574b56493fae537b9135980303ceae7fb4c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0fcb09c_17c5acf4",
        "filename": "src/x64/assembler-x64.h",
        "patchSetId": 5
      },
      "lineNbr": 347,
      "author": {
        "id": 1122079
      },
      "writtenOn": "2018-08-14T19:47:23Z",
      "side": 1,
      "message": "Agree that adding these constructors makes it easy to create invalid encodings for the assembler instructions, thanks for pointing that out. I\u0027ve removed the constructors. I overlooked the sse instruction helpers, as they weren\u0027t in use in assembler-x64.cc, using these overloads achieves what I was trying to do originally. PTAL. \n\nIt makes sense to keep the existing paradigm, that said I think it makes sense to enforce it better throughout the x64 assembler. I\u0027ll take a pass at doing that as a cleanup Friday task.",
      "parentUuid": "6d0b8de0_9e22d71c",
      "revId": "70b2574b56493fae537b9135980303ceae7fb4c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}