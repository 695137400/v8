{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e0c50559_d6ff4b83",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2024-03-20T16:24:55Z",
      "side": 1,
      "message": "I thought we could make defining body descriptors a bit easier by defining more \"templates\" (not in the C++ sense) that can be stitched together.\n\nAdding Omer as main reviewer, and Matthias, Andreas, and Jakob for input from a usability / readability perspective (as we discussed this before).\nConsider this a proposal for now, I am open to suggestions or objection :)",
      "revId": "e07eae20a0cd12bc72489ed368026112b6272870",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aaeaaad5_67efd724",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2024-03-20T16:37:30Z",
      "side": 1,
      "message": "LGTM, very nice!",
      "revId": "e07eae20a0cd12bc72489ed368026112b6272870",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d053a00d_cf729049",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2024-03-20T19:24:53Z",
      "side": 1,
      "message": "No strong feelings on my side. I don\u0027t really see this as an improvement, but I also won\u0027t veto the change if you like it.\n\nKeeping the BodyVisitor definitions in `objects-body-descriptors-inl.h` is probably good for compile times, as that header is #included a lot less than `wasm-objects.h`. OTOH, having the body descriptor in the class body is nice for making sure it\u0027s in sync with the class definition.\n\nI wonder whether a macro in the style of `RUNTIME_FUNCTION` could be an interesting alternative. It only easily defines a single function, but perhaps that\u0027s enough, and we could build it such that we can write something like:\n```\nclass Foo : public TorqueGeneratedFoo\u003c...\u003e {\n\n  // stuff...\n  \n  VISIT_BODY() {\n    VisitCodePointer(kCodeOffset);\n    VisitStrongTrustedPointer(kTrustedInternalOffset, kSomePointerTag);\n    VisitExternalPointer(kCallTargetOffset, kSomeOtherTag);\n    VisitStrongFields(kStrongFieldsStart, kStrongFieldsEnd);\n  }\n};\n```\nJust a thought.",
      "revId": "e07eae20a0cd12bc72489ed368026112b6272870",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c675c38f_cf612fc0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2024-03-21T08:56:55Z",
      "side": 1,
      "message": "Implementation lgtm. I don\u0027t have a preference in terms of usability.",
      "revId": "e07eae20a0cd12bc72489ed368026112b6272870",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac33ddfd_8a93f84f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2024-03-25T16:24:11Z",
      "side": 1,
      "message": "I would like to avoid mixing macros into this. PS3 provides similar usability with plain C++.",
      "parentUuid": "d053a00d_cf729049",
      "revId": "e07eae20a0cd12bc72489ed368026112b6272870",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94d30fdd_5d64320a",
        "filename": "src/wasm/wasm-objects.h",
        "patchSetId": 2
      },
      "lineNbr": 847,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2024-03-20T16:37:30Z",
      "side": 1,
      "message": "Note: I think the turbofan phases have some template magic to convert a list into this nesting. It could make this more readable on the other hand it could make any compiler errors even more confusing...",
      "range": {
        "startLine": 847,
        "startChar": 70,
        "endLine": 847,
        "endChar": 73
      },
      "revId": "e07eae20a0cd12bc72489ed368026112b6272870",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2acab090_3c75afea",
        "filename": "src/wasm/wasm-objects.h",
        "patchSetId": 2
      },
      "lineNbr": 847,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2024-03-20T16:44:39Z",
      "side": 1,
      "message": "Yes, I thought about this (it could also replace the existing `SubclassBodyDescriptor`), but then we would need to make the order of the list very clear, in case two descriptors both provide e.g. a `SizeOf` method.\n\nThe nesting make it (hopefully) clear that the outermost class wins.",
      "parentUuid": "94d30fdd_5d64320a",
      "range": {
        "startLine": 847,
        "startChar": 70,
        "endLine": 847,
        "endChar": 73
      },
      "revId": "e07eae20a0cd12bc72489ed368026112b6272870",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da28b89e_dbeef387",
        "filename": "src/wasm/wasm-objects.h",
        "patchSetId": 2
      },
      "lineNbr": 847,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2024-03-20T19:24:53Z",
      "side": 1,
      "message": "WDYT about manually forcing semantically meaningful formatting here, using `// --` comments if that\u0027s enough, or `// clang-format off` otherwise? I think ideally we\u0027d have:\n```\nusing BodyDescriptor \u003d \n    WithStrongCodePointer\u003ckWrapperCodeOffset,\n    WithStrongTrustedPointer\u003ckTrustedInternalOffset,\n                             kWasmInternalFunctionIndirectPointerTag,\n    FixedBodyDescriptorFor\u003cWasmFunctionData\u003e\u003e\u003e;\n```",
      "range": {
        "startLine": 843,
        "startChar": 2,
        "endLine": 847,
        "endChar": 74
      },
      "revId": "e07eae20a0cd12bc72489ed368026112b6272870",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2bb2dd4c_32b8c8cc",
        "filename": "src/wasm/wasm-objects.h",
        "patchSetId": 2
      },
      "lineNbr": 847,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2024-03-25T16:24:11Z",
      "side": 1,
      "message": "I think this improved substantially in PS3; PTAL.",
      "parentUuid": "da28b89e_dbeef387",
      "range": {
        "startLine": 843,
        "startChar": 2,
        "endLine": 847,
        "endChar": 74
      },
      "revId": "e07eae20a0cd12bc72489ed368026112b6272870",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2156611a_9c5089ac",
        "filename": "src/wasm/wasm-objects.h",
        "patchSetId": 2
      },
      "lineNbr": 875,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2024-03-20T19:24:53Z",
      "side": 1,
      "message": "So this doesn\u0027t include inherited fields, requiring `SubclassBodyDescriptor` to fill the gap? That\u0027s... unintuitive.",
      "range": {
        "startLine": 875,
        "startChar": 29,
        "endLine": 875,
        "endChar": 77
      },
      "revId": "e07eae20a0cd12bc72489ed368026112b6272870",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16994449_c97cddb5",
        "filename": "src/wasm/wasm-objects.h",
        "patchSetId": 2
      },
      "lineNbr": 875,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2024-03-25T16:24:11Z",
      "side": 1,
      "message": "Yep, it is. This is even checked (statically) in `SubclassBodyDescriptor`, so it\u0027s by design.",
      "parentUuid": "2156611a_9c5089ac",
      "range": {
        "startLine": 875,
        "startChar": 29,
        "endLine": 875,
        "endChar": 77
      },
      "revId": "e07eae20a0cd12bc72489ed368026112b6272870",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba7a13f5_7f61ee05",
        "filename": "src/wasm/wasm-objects.h",
        "patchSetId": 2
      },
      "lineNbr": 935,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2024-03-20T19:24:53Z",
      "side": 1,
      "message": "I think the old way of writing BodyDescriptors was almost as readable as this comment, so the existence of the comment (which is very nice to have now!) IMHO indicates that the new version scores lower on readability.",
      "range": {
        "startLine": 931,
        "startChar": 2,
        "endLine": 935,
        "endChar": 65
      },
      "revId": "e07eae20a0cd12bc72489ed368026112b6272870",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7301ecd5_c66f391c",
        "filename": "src/wasm/wasm-objects.h",
        "patchSetId": 2
      },
      "lineNbr": 935,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2024-03-25T16:24:11Z",
      "side": 1,
      "message": "Ack. The new code improves readability again so we don\u0027t need the comment any more.",
      "parentUuid": "ba7a13f5_7f61ee05",
      "range": {
        "startLine": 931,
        "startChar": 2,
        "endLine": 935,
        "endChar": 65
      },
      "revId": "e07eae20a0cd12bc72489ed368026112b6272870",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df2429b4_0e897c98",
        "filename": "src/wasm/wasm-objects.h",
        "patchSetId": 2
      },
      "lineNbr": 943,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2024-03-20T19:24:53Z",
      "side": 1,
      "message": "Ideal formatting:\n```\nusing BodyDescriptor \u003d\n    WithProtectedPointer\u003ckProtectedRefOffset,\n    WithExternalPointer\u003ckCallTargetOffset, \n                        kWasmInternalFunctionCallTargetTag,\n    WithStrongCodePointer\u003ckCodeOffset,\n    FixedExposedTrustedObjectBodyDescriptor\u003cWasmInternalFunction,\n        kWasmInternalFunctionIndirectPointerTag\u003e\u003e\u003e\u003e;\n```",
      "range": {
        "startLine": 936,
        "startChar": 2,
        "endLine": 943,
        "endChar": 80
      },
      "revId": "e07eae20a0cd12bc72489ed368026112b6272870",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8116ea6e_0c57eb11",
        "filename": "src/wasm/wasm-objects.h",
        "patchSetId": 2
      },
      "lineNbr": 943,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2024-03-25T16:24:11Z",
      "side": 1,
      "message": "Yep, that\u0027s what we get with the new list layout instead of nesting.",
      "parentUuid": "df2429b4_0e897c98",
      "range": {
        "startLine": 936,
        "startChar": 2,
        "endLine": 943,
        "endChar": 80
      },
      "revId": "e07eae20a0cd12bc72489ed368026112b6272870",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}