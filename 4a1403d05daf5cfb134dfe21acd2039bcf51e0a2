{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3d939a3e_293fb38d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2020-11-25T12:49:00Z",
      "side": 1,
      "message": "Hi Georg and Andreas, please take a look at this fix for the float 64 truncation issue on arm64. As we discussed offline with Georg, it doesn\u0027t seem possible to trigger the issue from a user JavaScript program without involving the fast API, that\u0027s why I don\u0027t have a particular regression test.",
      "revId": "4a1403d05daf5cfb134dfe21acd2039bcf51e0a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abf9e64c_f567d62f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2020-11-25T15:09:04Z",
      "side": 1,
      "message": "mostly nits.",
      "revId": "4a1403d05daf5cfb134dfe21acd2039bcf51e0a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d81dd018_5d3c2bdc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2020-11-25T15:09:04Z",
      "side": 1,
      "message": "Is it possible to test this in e.g. a cctest, e.g. in test-run-machops.cc?",
      "parentUuid": "3d939a3e_293fb38d",
      "revId": "4a1403d05daf5cfb134dfe21acd2039bcf51e0a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b482ba9c_d6c7e475",
        "filename": "src/compiler/backend/arm64/code-generator-arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 1660,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-11-25T14:58:39Z",
      "side": 1,
      "message": "The way it is written means that the new flag has no effect when there are two outputs. That might be surprising, so at least it should be documented somewhere (not in this file though).\n\nIt might make sense to instead (or additionally) add a DCHECK_IMPLIES(set_overflow_to_min_i64, i.OutputCount() \u003d\u003d 1)\n\nIf I remember correctly, Wasm is the only user of the two-output version. Andreas, what do you prefer?",
      "revId": "4a1403d05daf5cfb134dfe21acd2039bcf51e0a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdc4f959_d31ac208",
        "filename": "src/compiler/backend/arm64/code-generator-arm64.cc",
        "patchSetId": 1
      },
      "lineNbr": 1660,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2020-11-25T15:09:04Z",
      "side": 1,
      "message": "I think ideally we would get rid of the whole \"two outputs\" implementation. I think Maya should keep the implementation as is right now, and I remove the \"two outputs\" implementation afterwards.",
      "parentUuid": "b482ba9c_d6c7e475",
      "revId": "4a1403d05daf5cfb134dfe21acd2039bcf51e0a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dec6a7e_e72023ee",
        "filename": "src/compiler/effect-control-linearizer.cc",
        "patchSetId": 1
      },
      "lineNbr": 2611,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-11-25T14:58:39Z",
      "side": 1,
      "message": "Why did this one change?",
      "revId": "4a1403d05daf5cfb134dfe21acd2039bcf51e0a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6dda9ee_791bf2a5",
        "filename": "src/compiler/effect-control-linearizer.cc",
        "patchSetId": 1
      },
      "lineNbr": 2611,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2020-11-25T15:09:04Z",
      "side": 1,
      "message": "Isn\u0027t that what Maya was supposed to change? Without {kSetOverflowToMin}, there would be a precision loss for an input of int64_max, but that precision loss would not be detected and would not lead to a deoptimization.",
      "parentUuid": "2dec6a7e_e72023ee",
      "revId": "4a1403d05daf5cfb134dfe21acd2039bcf51e0a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a3ebd8f_90310ccd",
        "filename": "src/compiler/effect-control-linearizer.cc",
        "patchSetId": 1
      },
      "lineNbr": 2611,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-11-25T15:17:33Z",
      "side": 1,
      "message": "She was supposed to change BuildCheckedFloat64ToInt64 (which she did). This one I believe could stay unchanged, we deopt either way. But perhaps a comment would be good.",
      "parentUuid": "c6dda9ee_791bf2a5",
      "revId": "4a1403d05daf5cfb134dfe21acd2039bcf51e0a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1576e161_60cb55d9",
        "filename": "src/compiler/effect-control-linearizer.cc",
        "patchSetId": 1
      },
      "lineNbr": 2644,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2020-11-25T15:09:04Z",
      "side": 1,
      "message": "Why is {kind} set as a parameter here? Is there a case where {kind} should not be {kSetOverflowToMin} in BuildCheckedFloat64ToInt64?",
      "range": {
        "startLine": 2644,
        "startChar": 23,
        "endLine": 2644,
        "endChar": 40
      },
      "revId": "4a1403d05daf5cfb134dfe21acd2039bcf51e0a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "593fc940_58adf40d",
        "filename": "src/compiler/effect-control-linearizer.cc",
        "patchSetId": 1
      },
      "lineNbr": 2644,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-11-25T15:17:33Z",
      "side": 1,
      "message": "Right, it makes sense to hardcode kSetOverflowToMin here.",
      "parentUuid": "1576e161_60cb55d9",
      "range": {
        "startLine": 2644,
        "startChar": 23,
        "endLine": 2644,
        "endChar": 40
      },
      "revId": "4a1403d05daf5cfb134dfe21acd2039bcf51e0a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e96236a4_ed42441c",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 1
      },
      "lineNbr": 28263,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-11-25T14:58:39Z",
      "side": 1,
      "message": "superfluous",
      "range": {
        "startLine": 28263,
        "startChar": 5,
        "endLine": 28263,
        "endChar": 8
      },
      "revId": "4a1403d05daf5cfb134dfe21acd2039bcf51e0a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a67874a0_17d77d43",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 1
      },
      "lineNbr": 28264,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-11-25T14:58:39Z",
      "side": 1,
      "message": "Please inform the mips people of this change so that they can port it, e.g. by removing the #if, thus making the test fail on mips.",
      "revId": "4a1403d05daf5cfb134dfe21acd2039bcf51e0a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}