{
  "comments": [
    {
      "key": {
        "uuid": "0aa04591_671fcae3",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 2
      },
      "lineNbr": 1127,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2020-06-01T13:36:30Z",
      "side": 1,
      "message": "This doesn\u0027t need an extra scope, it can just live in the \"if (data_.broker()-\u003eis_concurrent_inlining()) {\" part. \n\nIn fact, I\u0027d prefer that all these timers moved into the actual function being called (e.g., CreateGraph, OptimizeGraphForMidTier, OptimizeGraph, AssembleCode).  \n\nThinking about this even further, I think we could make this more structured by having BeginPhaseKind / EndPhaseKind create automatically add RCS timer scopes for each of these phase kinds in a similar same way as PipelineImpl::Run(Args\u0026\u0026... args) does for the phases within.",
      "revId": "8df6c3018a637b19097ecc9379d5d14881a473be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e489a8b_adfbb4f6",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 2
      },
      "lineNbr": 1129,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2020-06-01T13:36:30Z",
      "side": 1,
      "message": "These should be kThreadSpecific counters, since ExecuteJobImpl can be (and generally is) run on a background worker thread.",
      "revId": "8df6c3018a637b19097ecc9379d5d14881a473be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}