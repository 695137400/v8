{
  "comments": [
    {
      "key": {
        "uuid": "0aa04591_671fcae3",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 2
      },
      "lineNbr": 1127,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2020-06-01T13:36:30Z",
      "side": 1,
      "message": "This doesn\u0027t need an extra scope, it can just live in the \"if (data_.broker()-\u003eis_concurrent_inlining()) {\" part. \n\nIn fact, I\u0027d prefer that all these timers moved into the actual function being called (e.g., CreateGraph, OptimizeGraphForMidTier, OptimizeGraph, AssembleCode).  \n\nThinking about this even further, I think we could make this more structured by having BeginPhaseKind / EndPhaseKind create automatically add RCS timer scopes for each of these phase kinds in a similar same way as PipelineImpl::Run(Args\u0026\u0026... args) does for the phases within.",
      "revId": "8df6c3018a637b19097ecc9379d5d14881a473be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba2aca80_dec92def",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 2
      },
      "lineNbr": 1127,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-06-01T14:24:52Z",
      "side": 1,
      "message": "\u003e This doesn\u0027t need an extra scope, it can just live in the \"if (data_.broker()-\u003eis_concurrent_inlining()) {\" part. \n\nAck\n\n\u003e In fact, I\u0027d prefer that all these timers moved into the actual function being called (e.g., CreateGraph, OptimizeGraphForMidTier, OptimizeGraph, AssembleCode).  \n\nCreateGraph and AssembleCode are called from other places as well. If we inline them there, we are going to be counting more than just the dispatcher job. Would this be intended?\n\n\u003e Thinking about this even further, I think we could make this more structured by having BeginPhaseKind / EndPhaseKind create automatically add RCS timer scopes for each of these phase kinds in a similar same way as PipelineImpl::Run(Args\u0026\u0026... args) does for the phases within.\n\nI don\u0027t think it would be straightforward. Looking at the code, both OptimizeGraphForMidTier and OptimizeGraph use BeginPhaseKind more than one time for example. Also, there are some cases where BeginPhaseKind is only called if specific flags are enabled.",
      "parentUuid": "0aa04591_671fcae3",
      "revId": "8df6c3018a637b19097ecc9379d5d14881a473be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e489a8b_adfbb4f6",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 2
      },
      "lineNbr": 1129,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2020-06-01T13:36:30Z",
      "side": 1,
      "message": "These should be kThreadSpecific counters, since ExecuteJobImpl can be (and generally is) run on a background worker thread.",
      "revId": "8df6c3018a637b19097ecc9379d5d14881a473be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19a50e65_07cc3541",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 2
      },
      "lineNbr": 1129,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-06-01T14:24:52Z",
      "side": 1,
      "message": "I tried doing that in patchset 1 (https://chromium-review.googlesource.com/c/v8/v8/+/2224213/1) but I got failures that said that the counter was not appropiate for threads. That\u0027s why I updated them to not be thread specific.\n\nAlso, other RuntimeCallTimerScopes in this file are also not thread specific.",
      "parentUuid": "2e489a8b_adfbb4f6",
      "revId": "8df6c3018a637b19097ecc9379d5d14881a473be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}