{
  "comments": [
    {
      "key": {
        "uuid": "837f072d_df241e1d",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 3235,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-02-12T10:46:40Z",
      "side": 1,
      "message": "nit: Not needed for correctness, but could be {TaggedSigned} instead if know this to be a Smi.",
      "range": {
        "startLine": 3235,
        "startChar": 59,
        "endLine": 3235,
        "endChar": 68
      },
      "revId": "92fd92aab083e536d1921a5222178ced5d55326f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4279eed4_22a335e7",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 3235,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2019-02-12T12:04:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "837f072d_df241e1d",
      "range": {
        "startLine": 3235,
        "startChar": 59,
        "endLine": 3235,
        "endChar": 68
      },
      "revId": "92fd92aab083e536d1921a5222178ced5d55326f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f182828e_897f4973",
        "filename": "src/wasm/module-instantiate.cc",
        "patchSetId": 1
      },
      "lineNbr": 386,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-02-12T10:46:40Z",
      "side": 1,
      "message": "nit: IIRC then this is not initializing the tables strictly speaking, it is just allocating storage space for them. Then tables are initialized further down by {InitializeTables}. Can we rephrase the section header to be more accurate in this regard. Something like \"Set up table storage space.\" or similar.",
      "range": {
        "startLine": 386,
        "startChar": 5,
        "endLine": 386,
        "endChar": 22
      },
      "revId": "92fd92aab083e536d1921a5222178ced5d55326f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e54fc68_7b561c9c",
        "filename": "src/wasm/module-instantiate.cc",
        "patchSetId": 1
      },
      "lineNbr": 386,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2019-02-12T12:04:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f182828e_897f4973",
      "range": {
        "startLine": 386,
        "startChar": 5,
        "endLine": 386,
        "endChar": 22
      },
      "revId": "92fd92aab083e536d1921a5222178ced5d55326f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cee17e88_203ed0ad",
        "filename": "src/wasm/module-instantiate.cc",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-02-12T10:46:40Z",
      "side": 1,
      "message": "This call is not gc-safe. Another example of something that gc-mole would have caught, but it is feeling a bit under the weather right now (see issue 8813). The result of {WasmTableObject::New} should be put into a local variable first.\n\n    Handle\u003cWasmTableObject\u003e table \u003d WasmTableObject::New(isolate_, table.initial_size, \n                                                         table.maximum_size, nullptr);\n    tables-\u003eset(i, *table);",
      "range": {
        "startLine": 392,
        "startChar": 0,
        "endLine": 393,
        "endChar": 71
      },
      "revId": "92fd92aab083e536d1921a5222178ced5d55326f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f8abe98_e0a7ded4",
        "filename": "src/wasm/module-instantiate.cc",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2019-02-12T12:04:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cee17e88_203ed0ad",
      "range": {
        "startLine": 392,
        "startChar": 0,
        "endLine": 393,
        "endChar": 71
      },
      "revId": "92fd92aab083e536d1921a5222178ced5d55326f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fcdd7d7_fc411232",
        "filename": "src/wasm/module-instantiate.cc",
        "patchSetId": 1
      },
      "lineNbr": 399,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-02-12T10:46:40Z",
      "side": 1,
      "message": "nit: This section header seems superfluous now, lets drop it.",
      "range": {
        "startLine": 396,
        "startChar": 0,
        "endLine": 399,
        "endChar": 78
      },
      "revId": "92fd92aab083e536d1921a5222178ced5d55326f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b6bee9f_cfaafb0c",
        "filename": "src/wasm/module-instantiate.cc",
        "patchSetId": 1
      },
      "lineNbr": 399,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2019-02-12T12:04:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7fcdd7d7_fc411232",
      "range": {
        "startLine": 396,
        "startChar": 0,
        "endLine": 399,
        "endChar": 78
      },
      "revId": "92fd92aab083e536d1921a5222178ced5d55326f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7acd5fb2_e589df74",
        "filename": "src/wasm/module-instantiate.cc",
        "patchSetId": 1
      },
      "lineNbr": 401,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-02-12T10:46:40Z",
      "side": 1,
      "message": "nit: Is there a particular reason for reloading this value? I\u0027d vote to drop this line.",
      "range": {
        "startLine": 401,
        "startChar": 2,
        "endLine": 401,
        "endChar": 57
      },
      "revId": "92fd92aab083e536d1921a5222178ced5d55326f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c8a46dd_458b67fc",
        "filename": "src/wasm/module-instantiate.cc",
        "patchSetId": 1
      },
      "lineNbr": 401,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2019-02-12T12:04:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7acd5fb2_e589df74",
      "range": {
        "startLine": 401,
        "startChar": 2,
        "endLine": 401,
        "endChar": 57
      },
      "revId": "92fd92aab083e536d1921a5222178ced5d55326f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0a1b266_73f3f78f",
        "filename": "test/mjsunit/wasm/wasm-module-builder.js",
        "patchSetId": 1
      },
      "lineNbr": 798,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-02-12T10:46:40Z",
      "side": 1,
      "message": "nit: Lets add a guard to the top of this function that throws in case {this.tables.length !\u003d 0}, otherwise it is too easy to get the order wrong and mess with previously returned indices.",
      "range": {
        "startLine": 798,
        "startChar": 2,
        "endLine": 798,
        "endChar": 18
      },
      "revId": "92fd92aab083e536d1921a5222178ced5d55326f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adb27604_d5ffc00b",
        "filename": "test/mjsunit/wasm/wasm-module-builder.js",
        "patchSetId": 1
      },
      "lineNbr": 798,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2019-02-12T12:04:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a0a1b266_73f3f78f",
      "range": {
        "startLine": 798,
        "startChar": 2,
        "endLine": 798,
        "endChar": 18
      },
      "revId": "92fd92aab083e536d1921a5222178ced5d55326f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47b891aa_6224fcc5",
        "filename": "test/mjsunit/wasm/wasm-module-builder.js",
        "patchSetId": 1
      },
      "lineNbr": 802,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-02-12T10:46:40Z",
      "side": 1,
      "message": "nit: Could be helpful to return the old value (aka. index) for eventual use.",
      "range": {
        "startLine": 802,
        "startChar": 4,
        "endLine": 802,
        "endChar": 30
      },
      "revId": "92fd92aab083e536d1921a5222178ced5d55326f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b9d4123_6a8754ec",
        "filename": "test/mjsunit/wasm/wasm-module-builder.js",
        "patchSetId": 1
      },
      "lineNbr": 802,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2019-02-12T12:04:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "47b891aa_6224fcc5",
      "range": {
        "startLine": 802,
        "startChar": 4,
        "endLine": 802,
        "endChar": 30
      },
      "revId": "92fd92aab083e536d1921a5222178ced5d55326f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}