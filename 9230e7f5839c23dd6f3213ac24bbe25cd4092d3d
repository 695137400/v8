{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1a18a009_65b76535",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2024-07-15T17:36:16Z",
      "side": 1,
      "message": "PTAL. ðŸ˜Š",
      "revId": "9230e7f5839c23dd6f3213ac24bbe25cd4092d3d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea07fd42_2c43a096",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2024-07-16T09:07:05Z",
      "side": 1,
      "message": "LGTM % question",
      "revId": "9230e7f5839c23dd6f3213ac24bbe25cd4092d3d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65b3896b_08509b2a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2024-07-16T09:42:28Z",
      "side": 1,
      "message": "Thanks!",
      "revId": "9230e7f5839c23dd6f3213ac24bbe25cd4092d3d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ea79e2d_3079516f",
        "filename": "src/compiler/turboshaft/assembler.h",
        "patchSetId": 1
      },
      "lineNbr": 4320,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2024-07-16T09:07:05Z",
      "side": 1,
      "message": "Do we have an even more precise type for that? Not exactly sure what the result here is (is it a `SeqTwoByteString`)? Otherwise LGTM",
      "range": {
        "startLine": 4320,
        "startChar": 4,
        "endLine": 4320,
        "endChar": 10
      },
      "revId": "9230e7f5839c23dd6f3213ac24bbe25cd4092d3d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98f98f89_13a3f6ad",
        "filename": "src/compiler/turboshaft/assembler.h",
        "patchSetId": 1
      },
      "lineNbr": 4320,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2024-07-16T09:42:28Z",
      "side": 1,
      "message": "I mean, it is guaranteed to be flattened afterwards afaict but it can still be a 1-Byte or a 2-Byte string. This operation mostly exists for wasm type systems (the input string is a `string` in wasm but the result is a wtf16 string view on it.)\nThis is part of the `stringref` proposal which doesn\u0027t have enough support in the wasm community and therefore will most likely never ship to production (we ship it as part of an OT only).\nMarking it as resolved.",
      "parentUuid": "6ea79e2d_3079516f",
      "range": {
        "startLine": 4320,
        "startChar": 4,
        "endLine": 4320,
        "endChar": 10
      },
      "revId": "9230e7f5839c23dd6f3213ac24bbe25cd4092d3d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "If the author is a V8 committer, code review is required from one other committer (see https://v8.dev/docs/become-committer). Otherwise, code review is required from two committers."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "((uploaderin:cria/project-v8-committers AND label:Code-Review\u003dMAX,user\u003dnon_uploader) OR label:Code-Review\u003dMAX,count\u003e\u003d2) AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"((uploaderin:cria/project-v8-committers AND label:Code-Review=MAX,user=non_uploader) OR label:Code-Review=MAX,count>=2) AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader","uploaderin:cria/project-v8-committers"],"failingAtoms":["label:Code-Review=MIN","label:Code-Review=MAX,count>=2"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "9230e7f5839c23dd6f3213ac24bbe25cd4092d3d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "9230e7f5839c23dd6f3213ac24bbe25cd4092d3d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "9230e7f5839c23dd6f3213ac24bbe25cd4092d3d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}