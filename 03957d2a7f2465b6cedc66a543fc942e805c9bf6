{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d6cb5af5_cbaff7a4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-01-28T08:49:55Z",
      "side": 1,
      "message": "I\u0027m wondering if that is actually necessary. Intuitively the map on which we start the search is newer than the backpointer map.",
      "revId": "03957d2a7f2465b6cedc66a543fc942e805c9bf6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deac0c09_a831fb40",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2021-01-28T09:35:11Z",
      "side": 1,
      "message": "I might be missing something, but I think this is necessary unless there is some other synchronization going on, otherwise there\u0027s nothing preventing the compiler/CPU reordering the write to the backpointer to be after it exposes the newer map somewhere that the compiler thread can read it.\n\nI guess the one case this wouldn\u0027t be necessary is if the backpointer is set on construction of the map (and we release store the whole map), is this the case?",
      "parentUuid": "d6cb5af5_cbaff7a4",
      "revId": "03957d2a7f2465b6cedc66a543fc942e805c9bf6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a869feb_c67465cd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-01-28T12:02:23Z",
      "side": 1,
      "message": "How does making the backpointer store a release-store prevent that store from being delayed?\n\nI thought Santiago made this a a release-store to ensure that the map that we store in the backpointer field is safe to read from FindFieldOwner on the background. The reason why I wonder that the change might not be needed is that the map that we store in that field has already been released before (otherwise we couldn\u0027t be transitioning away from it). But I might be missing something too.",
      "parentUuid": "deac0c09_a831fb40",
      "revId": "03957d2a7f2465b6cedc66a543fc942e805c9bf6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f51521b_1e26b879",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2021-01-28T15:48:14Z",
      "side": 1,
      "message": "\u003e I thought Santiago made this a a release-store to ensure that the map that we store in the backpointer field is safe to read from FindFieldOwner on the background. \n\nYes, that was my reasoning.\n\n\u003e The reason why I wonder that the change might not be needed is that the map that we store in that field has already been released before (otherwise we couldn\u0027t be transitioning away from it). \n\nWe need to release store the field because otherwise we risk reading an old value from the field if we have everything as relaxed. We set the backpointer / constructor after the map\u0027s construction.",
      "parentUuid": "2a869feb_c67465cd",
      "revId": "03957d2a7f2465b6cedc66a543fc942e805c9bf6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4b5d545_d3ca8c3e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2021-01-26T20:35:10Z",
      "side": 1,
      "message": "Georg PTAL\nRoss PTAL for src/heap, profiler and wasm OWNER",
      "revId": "03957d2a7f2465b6cedc66a543fc942e805c9bf6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "074e11f9_4e444917",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2021-01-27T17:10:59Z",
      "side": 1,
      "message": "LGTM for changes in heap/wasm/profiler. Didn\u0027t look at the rest.",
      "revId": "03957d2a7f2465b6cedc66a543fc942e805c9bf6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e58a15c_fd2bcc04",
        "filename": "src/compiler/heap-refs.h",
        "patchSetId": 3
      },
      "lineNbr": 541,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-01-28T08:49:55Z",
      "side": 1,
      "message": "Let\u0027s pass the MapRef instead.",
      "revId": "03957d2a7f2465b6cedc66a543fc942e805c9bf6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "666ecb98_21a69f6f",
        "filename": "src/compiler/heap-refs.h",
        "patchSetId": 3
      },
      "lineNbr": 541,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2021-01-28T15:48:14Z",
      "side": 1,
      "message": "Not needed since I moved it to MapRef.",
      "parentUuid": "3e58a15c_fd2bcc04",
      "revId": "03957d2a7f2465b6cedc66a543fc942e805c9bf6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54a03bff_4418aa9e",
        "filename": "src/compiler/heap-refs.h",
        "patchSetId": 3
      },
      "lineNbr": 541,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2021-01-28T16:47:07Z",
      "side": 1,
      "message": "Forgot to resolve this.",
      "parentUuid": "666ecb98_21a69f6f",
      "revId": "03957d2a7f2465b6cedc66a543fc942e805c9bf6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3bae46d_145fecd3",
        "filename": "src/compiler/js-heap-broker.cc",
        "patchSetId": 3
      },
      "lineNbr": 4055,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2021-01-26T20:35:10Z",
      "side": 1,
      "message": "I think this is the first time where we pass a Handle to a different class ref.\nTo avoid this, we can keep the FindFieldOwner method only on MapRef.",
      "range": {
        "startLine": 4055,
        "startChar": 54,
        "endLine": 4055,
        "endChar": 59
      },
      "revId": "03957d2a7f2465b6cedc66a543fc942e805c9bf6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c7f66a1_6a239642",
        "filename": "src/compiler/js-heap-broker.cc",
        "patchSetId": 3
      },
      "lineNbr": 4055,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-01-28T08:49:55Z",
      "side": 1,
      "message": "Keeping it on MapRef is fine with me too.\n\nAnother thing to consider is caching the owner in the descriptor array data. That would avoid repeating the search for that index not only when done on the same map but also on any other map sharing that descriptor array. Let me know what you think.",
      "parentUuid": "d3bae46d_145fecd3",
      "range": {
        "startLine": 4055,
        "startChar": 54,
        "endLine": 4055,
        "endChar": 59
      },
      "revId": "03957d2a7f2465b6cedc66a543fc942e805c9bf6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7e81fad_41ecd09d",
        "filename": "src/compiler/js-heap-broker.cc",
        "patchSetId": 3
      },
      "lineNbr": 4055,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-01-28T08:51:07Z",
      "side": 1,
      "message": "To be clear, I don\u0027t have a strong opinion on that.",
      "parentUuid": "5c7f66a1_6a239642",
      "range": {
        "startLine": 4055,
        "startChar": 54,
        "endLine": 4055,
        "endChar": 59
      },
      "revId": "03957d2a7f2465b6cedc66a543fc942e805c9bf6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cf657dc_74ca8c6b",
        "filename": "src/compiler/js-heap-broker.cc",
        "patchSetId": 3
      },
      "lineNbr": 4055,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2021-01-28T15:48:14Z",
      "side": 1,
      "message": "Regarding keeping it on MapRef, I\u0027m torn. On one hand, we are dereferencing the map to call Map::FindFieldOwner so it should be on MapRef. On the other hand, we are accessing the DescriptorArrayData so it should be on DescriptorArrayRef.\nTo break the tie I am thinking keeping it on MapRef since the end goal would be to keep the concurrent access and the DescriptorArrayData part would be eliminated. WDYT?\n\nRegarding caching I think it would be a good candidate. Added a TODO.",
      "parentUuid": "d7e81fad_41ecd09d",
      "range": {
        "startLine": 4055,
        "startChar": 54,
        "endLine": 4055,
        "endChar": 59
      },
      "revId": "03957d2a7f2465b6cedc66a543fc942e805c9bf6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}