{
  "comments": [
    {
      "key": {
        "uuid": "50545edd_49b0a120",
        "filename": "test/cctest/test-hashcode.cc",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-17T22:53:18Z",
      "side": 1,
      "message": "The styleguide forbids \"using namespace\", and for Jumbo builds it actually bites us. Just put the entire file into the v8::internal namespace instead.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 15
      },
      "revId": "244dca7d8712d92761590660e0e18f3505ae0c84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e9dc34d_c1f4561d",
        "filename": "test/cctest/test-hashcode.cc",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-17T22:53:18Z",
      "side": 1,
      "message": "I don\u0027t think this is used at all (except in the unneeded \"CompileRun\").",
      "range": {
        "startLine": 20,
        "startChar": 17,
        "endLine": 20,
        "endChar": 27
      },
      "revId": "244dca7d8712d92761590660e0e18f3505ae0c84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ca2f8a7_1ecb52c0",
        "filename": "test/cctest/test-hashcode.cc",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-17T22:53:18Z",
      "side": 1,
      "message": "I don\u0027t think this is used at all.",
      "range": {
        "startLine": 25,
        "startChar": 35,
        "endLine": 25,
        "endChar": 38
      },
      "revId": "244dca7d8712d92761590660e0e18f3505ae0c84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96947583_c2a81526",
        "filename": "test/cctest/test-hashcode.cc",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-17T22:53:18Z",
      "side": 1,
      "message": "This seems to be identical to the copy in test-inobject-slack-tracking.cc. Please try to avoid duplication. Pull the declaration into cctest.h and share the implementation.",
      "range": {
        "startLine": 35,
        "startChar": 10,
        "endLine": 35,
        "endChar": 19
      },
      "revId": "244dca7d8712d92761590660e0e18f3505ae0c84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d86d2361_2c87712f",
        "filename": "test/cctest/test-hashcode.cc",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-17T22:53:18Z",
      "side": 1,
      "message": "I don\u0027t think this is used at all.",
      "range": {
        "startLine": 46,
        "startChar": 24,
        "endLine": 46,
        "endChar": 27
      },
      "revId": "244dca7d8712d92761590660e0e18f3505ae0c84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "add0a227_08d23339",
        "filename": "test/cctest/test-hashcode.cc",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-17T22:53:18Z",
      "side": 1,
      "message": "isn\u0027t the existing CompileRun in cctest.h enough?",
      "range": {
        "startLine": 51,
        "startChar": 24,
        "endLine": 51,
        "endChar": 34
      },
      "revId": "244dca7d8712d92761590660e0e18f3505ae0c84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55bcabec_4eefe324",
        "filename": "test/cctest/test-hashcode.cc",
        "patchSetId": 6
      },
      "lineNbr": 65,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-17T22:53:18Z",
      "side": 1,
      "message": "Do we need all these trips through JavaScript? E.g. this line could just be:\n\nHandle\u003cJSObject\u003e obj \u003d isolate-\u003efactory()-\u003eNewJSObject(isolate-\u003eobject_function());",
      "range": {
        "startLine": 65,
        "startChar": 2,
        "endLine": 65,
        "endChar": 50
      },
      "revId": "244dca7d8712d92761590660e0e18f3505ae0c84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9eadaec3_84eaecf4",
        "filename": "test/cctest/test-hashcode.cc",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-17T22:53:18Z",
      "side": 1,
      "message": "this is implied by the next CHECK.",
      "range": {
        "startLine": 74,
        "startChar": 2,
        "endLine": 74,
        "endChar": 53
      },
      "revId": "244dca7d8712d92761590660e0e18f3505ae0c84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "927f0d4b_725d6d0d",
        "filename": "test/cctest/test-hashcode.cc",
        "patchSetId": 6
      },
      "lineNbr": 91,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-17T22:53:18Z",
      "side": 1,
      "message": "These tests seem very repetitive. How about at least extracting the common code into a helper:\n\nObject* AddToSetAndGetHash(Isolate* isolate, Handle\u003cJSObject\u003e obj, bool has_fast_properties) {\n  CHECK_EQ(has_fast_properties, obj-\u003eHasFastProperties());\n  CHECK_EQ(isolate-\u003eheap()-\u003eundefined_value(),\n           JSReceiver::GetIdentityHash(isolate, *obj));\n  Handle\u003cOrderedHashSet\u003e set \u003d isolate-\u003efactory()-\u003eNewOrderedHashSet();\n  OrderedHashSet::Add(set, obj);\n  CHECK_EQ(has_fast_properties, obj-\u003eHasFastProperties());\n  return JSReceiver::GetIdentityHash(isolate, *obj);\n}",
      "range": {
        "startLine": 91,
        "startChar": 2,
        "endLine": 91,
        "endChar": 46
      },
      "revId": "244dca7d8712d92761590660e0e18f3505ae0c84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56dc88c3_6349a2ff",
        "filename": "test/cctest/test-hashcode.cc",
        "patchSetId": 6
      },
      "lineNbr": 139,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-17T22:53:18Z",
      "side": 1,
      "message": "Here it would definitely be nicer to use an explicit JSObject::NormalizeProperties call, instead of relying on the heuristic that Object.create(null) currently creates dictionary-mode objects.",
      "range": {
        "startLine": 139,
        "startChar": 2,
        "endLine": 139,
        "endChar": 35
      },
      "revId": "244dca7d8712d92761590660e0e18f3505ae0c84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1103f569_ed6da04c",
        "filename": "test/cctest/test-hashcode.cc",
        "patchSetId": 6
      },
      "lineNbr": 180,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-17T22:53:18Z",
      "side": 1,
      "message": "This block seems like another candidate for extraction of a helper function:\n\nvoid CheckFastObject(Isolate* isolate, Handle\u003cJSObject\u003e obj, Object* expected_hash) {...}\n\n(and a similar \"CheckDictionaryObject\" for the dictionary cases).",
      "range": {
        "startLine": 177,
        "startChar": 0,
        "endLine": 180,
        "endChar": 60
      },
      "revId": "244dca7d8712d92761590660e0e18f3505ae0c84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce6660e4_63687c70",
        "filename": "test/cctest/test-hashcode.cc",
        "patchSetId": 6
      },
      "lineNbr": 216,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-17T22:53:18Z",
      "side": 1,
      "message": "Maybe s/SlowWithPropertyDictionary/Slow/, because \"slow without property dictionary\" does not exist.",
      "range": {
        "startLine": 216,
        "startChar": 38,
        "endLine": 216,
        "endChar": 64
      },
      "revId": "244dca7d8712d92761590660e0e18f3505ae0c84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50bf1109_dae78df3",
        "filename": "test/cctest/test-hashcode.cc",
        "patchSetId": 6
      },
      "lineNbr": 240,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-17T22:53:18Z",
      "side": 1,
      "message": "You have the full power of C++ at your disposal. You can JSObject::NormalizeProperties(obj).",
      "range": {
        "startLine": 240,
        "startChar": 2,
        "endLine": 240,
        "endChar": 28
      },
      "revId": "244dca7d8712d92761590660e0e18f3505ae0c84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cff39dc_e028d6ca",
        "filename": "test/cctest/test-hashcode.cc",
        "patchSetId": 6
      },
      "lineNbr": 302,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-17T22:53:18Z",
      "side": 1,
      "message": "just FYI, the string here doesn\u0027t matter much, it\u0027s just for human profiling/debugging. \"testing\" would be specific enough.",
      "range": {
        "startLine": 302,
        "startChar": 39,
        "endLine": 302,
        "endChar": 59
      },
      "revId": "244dca7d8712d92761590660e0e18f3505ae0c84",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}