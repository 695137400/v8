{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "79c7a469_a1864923",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2024-09-23T10:53:35Z",
      "side": 1,
      "message": "src/torque LGTM",
      "revId": "f3c4c41416819d6971677a01705f847ca05ad233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a82cf4d_de9eee3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1440073
      },
      "writtenOn": "2024-09-23T15:29:42Z",
      "side": 1,
      "message": "Neat, thank you! Just one typo and 2 questions.",
      "revId": "f3c4c41416819d6971677a01705f847ca05ad233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4582109_b479c4ae",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 4
      },
      "lineNbr": 5418,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2024-09-23T10:19:47Z",
      "side": 1,
      "message": "FYI: Here we now compute a new \"minimal\" index type instead of using the conjunction of the two booleans.",
      "revId": "f3c4c41416819d6971677a01705f847ca05ad233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7a43c20_71705f94",
        "filename": "src/objects/objects-body-descriptors-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 1188,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2024-09-23T10:19:47Z",
      "side": 1,
      "message": "FYI: The `WasmMemoryObject` now needs a body descriptor because it contains an untagged field which needs to be skipped by the GC.",
      "revId": "f3c4c41416819d6971677a01705f847ca05ad233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01b7ab5f_d4487a3e",
        "filename": "src/objects/objects-body-descriptors-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 1194,
      "author": {
        "id": 1440073
      },
      "writtenOn": "2024-09-23T15:29:42Z",
      "side": 1,
      "message": "question: how did you figure out the constants here?",
      "range": {
        "startLine": 1193,
        "startChar": 0,
        "endLine": 1194,
        "endChar": 49
      },
      "revId": "f3c4c41416819d6971677a01705f847ca05ad233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b94f5e6_7b259e37",
        "filename": "src/objects/objects-body-descriptors-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 1194,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2024-09-23T15:59:30Z",
      "side": 1,
      "message": "These are default constants defined by Torque. Instead of `kStartOffset` I could also have used `kStartOfStrongFieldsOffset` to make it more clear, but in this case this is the same (because there are no fields prior to tagged fields). AFAIK \"strong fields\" really just means \"tagged fields\" here.",
      "parentUuid": "01b7ab5f_d4487a3e",
      "range": {
        "startLine": 1193,
        "startChar": 0,
        "endLine": 1194,
        "endChar": 49
      },
      "revId": "f3c4c41416819d6971677a01705f847ca05ad233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a965fce2_596706e0",
        "filename": "src/torque/csa-generator.cc",
        "patchSetId": 4
      },
      "lineNbr": 279,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2024-09-23T10:19:47Z",
      "side": 1,
      "message": "This adds support for constructing a `uint8_t` enum from a constant. We need to case the `Uint32Constant` to `Uint8T`.",
      "revId": "f3c4c41416819d6971677a01705f847ca05ad233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "07f71352_99123f40",
        "filename": "src/wasm/module-instantiate.cc",
        "patchSetId": 4
      },
      "lineNbr": 2155,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2024-09-23T10:19:47Z",
      "side": 1,
      "message": "FYI: We generate slightly different error messages now.",
      "revId": "f3c4c41416819d6971677a01705f847ca05ad233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dcd082f3_930d8ab7",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 4
      },
      "lineNbr": 1326,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2024-09-23T10:19:47Z",
      "side": 1,
      "message": "FYI: I pulled this out into a separate function.",
      "revId": "f3c4c41416819d6971677a01705f847ca05ad233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bcde42e_3b4c825d",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 4
      },
      "lineNbr": 1341,
      "author": {
        "id": 1440073
      },
      "writtenOn": "2024-09-23T15:29:42Z",
      "side": 1,
      "message": "question: what are these locals?",
      "range": {
        "startLine": 1341,
        "startChar": 12,
        "endLine": 1341,
        "endChar": 19
      },
      "revId": "f3c4c41416819d6971677a01705f847ca05ad233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe35b7c9_582c69ac",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 4
      },
      "lineNbr": 1341,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2024-09-23T15:59:30Z",
      "side": 1,
      "message": "`Local` is the equivalent to `Handle`, but on the external API. The `wasm-js.cc` file bridges between internal and external API, so we use a mixture of handles and locals here.\nHappy to explain more offline if wanted.",
      "parentUuid": "5bcde42e_3b4c825d",
      "range": {
        "startLine": 1341,
        "startChar": 12,
        "endLine": 1341,
        "endChar": 19
      },
      "revId": "f3c4c41416819d6971677a01705f847ca05ad233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4068f154_9e8ceaba",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 4
      },
      "lineNbr": 1498,
      "author": {
        "id": 1440073
      },
      "writtenOn": "2024-09-23T15:29:42Z",
      "side": 1,
      "message": "typo: Memory",
      "range": {
        "startLine": 1498,
        "startChar": 53,
        "endLine": 1498,
        "endChar": 58
      },
      "fixSuggestions": [
        {
          "fixId": "eaa2ea51_6e2c09fb",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/wasm/wasm-js.cc",
              "range": {
                "startLine": 1498,
                "startChar": 0,
                "endLine": 1499,
                "endChar": 0
              },
              "replacement": "// new WebAssembly.Memory(descriptor) -\u003e WebAssembly.Memory\n"
            }
          ]
        }
      ],
      "revId": "f3c4c41416819d6971677a01705f847ca05ad233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21bd69cb_ea69938c",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 4
      },
      "lineNbr": 1498,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2024-09-23T15:59:30Z",
      "side": 1,
      "message": "Ha, indeed! Done.",
      "parentUuid": "4068f154_9e8ceaba",
      "range": {
        "startLine": 1498,
        "startChar": 53,
        "endLine": 1498,
        "endChar": 58
      },
      "revId": "f3c4c41416819d6971677a01705f847ca05ad233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2bb5cff1_6399007e",
        "filename": "src/wasm/wasm-objects.tq",
        "patchSetId": 4
      },
      "lineNbr": 204,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2024-09-23T10:19:47Z",
      "side": 1,
      "message": "FYI: It would be nicer to write something like `padding_for_index_type: uint8[kTaggedSize - kUint8Size];`, but torque does not support this currently. Not even with a true constant size. I\u0027ll look into fixing this, but will only do it if it\u0027s easy enough.",
      "revId": "f3c4c41416819d6971677a01705f847ca05ad233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}