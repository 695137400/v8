{
  "comments": [
    {
      "key": {
        "uuid": "ba3e8d4c_525196b9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2020-07-08T08:42:23Z",
      "side": 1,
      "message": "This does actually share memory on Android and Linux but is a little clunky so I\u0027d appreciate any insights you two have (and if you think anyone else should take a look)\n\nThanks!\nDan",
      "revId": "7c6bd1444d758b2b596a8aaaabedce3dca4c7f68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9acb773_dea460fa",
        "filename": "include/v8-platform.h",
        "patchSetId": 17
      },
      "lineNbr": 377,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2020-07-08T08:42:23Z",
      "side": 1,
      "message": "I think Windows needs a HANDLE to access shared memory so we might need to return some kind of opaque structure instead of void* and provide a method to get the address from that.\n\nAlternatively we could require that the PlatformAllocator for Windows keeps\ntrack of that internally in which case the interface can stay as it is.",
      "range": {
        "startLine": 371,
        "startChar": 0,
        "endLine": 377,
        "endChar": 3
      },
      "revId": "7c6bd1444d758b2b596a8aaaabedce3dca4c7f68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93be5a05_1a90f956",
        "filename": "include/v8-platform.h",
        "patchSetId": 17
      },
      "lineNbr": 377,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2020-07-08T12:46:01Z",
      "side": 1,
      "message": "In fact, I should probably be building my chrome implementation around:\nhttps://source.chromium.org/chromium/chromium/src/+/master:base/memory/platform_shared_memory_region.h;l\u003d83;drc\u003dcd906b81b2b72f0ad83f0b6c0f0bf1f22c0981e0?originalUrl\u003dhttps:%2F%2Fcs.chromium.org%2F\n\nwhich might us sharing on all platforms",
      "parentUuid": "b9acb773_dea460fa",
      "range": {
        "startLine": 371,
        "startChar": 0,
        "endLine": 377,
        "endChar": 3
      },
      "revId": "7c6bd1444d758b2b596a8aaaabedce3dca4c7f68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06126783_0fec4f2e",
        "filename": "include/v8-platform.h",
        "patchSetId": 17
      },
      "lineNbr": 377,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2020-07-08T16:56:07Z",
      "side": 1,
      "message": "Quick update: I misunderstood what PlatformSharedMemoryRegion does. It looks to be there to share memory between processes. It doesn\u0027t have the facility to Map to a particular memory address despite having a function called MapAt. What that appears to do is map a slice of the shared memory region. Should probably be called MapRange.\n\nI suspect it could be changed to allow mapping to specific memory addresses, but currently it doesn\u0027t do that.\n\nI can use it to allocate the shared memory in the first place (to store the canonical pages), but currently I would have to implement the remapping myself (which I only know how to on Linux).",
      "parentUuid": "93be5a05_1a90f956",
      "range": {
        "startLine": 371,
        "startChar": 0,
        "endLine": 377,
        "endChar": 3
      },
      "revId": "7c6bd1444d758b2b596a8aaaabedce3dca4c7f68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}