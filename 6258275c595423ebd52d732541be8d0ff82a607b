{
  "comments": [
    {
      "key": {
        "uuid": "f3fcdcd4_e18f6b43",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001213
      },
      "writtenOn": "2020-08-05T22:51:18Z",
      "side": 1,
      "message": "Something that just occurred to me: if we want to report attempts to create SABs or PostMessage them as errors in the Dev console (as part of migration process), then we shouldn\u0027t remove the SAB function from the global object. Instead, we should check the flags in the constructor to throw the appropriate exception.",
      "revId": "6258275c595423ebd52d732541be8d0ff82a607b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98fa137e_79d741b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2020-08-05T23:30:47Z",
      "side": 1,
      "message": "In order to maintain feature-detection capability with the existing world (where Chrome on desktop has the SAB constructor but Chrome on Android does not), the plan (and spec) require us to continue that behavior. CCing syg@ for confirmation.",
      "parentUuid": "f3fcdcd4_e18f6b43",
      "revId": "6258275c595423ebd52d732541be8d0ff82a607b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f431ff5c_8a8f2ba2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2020-08-05T23:30:47Z",
      "side": 1,
      "message": "Where else do you intend to check this flag in V8? As-is I don\u0027t understand the motivation for adding a flag which does the same thing as an existing flag.",
      "revId": "6258275c595423ebd52d732541be8d0ff82a607b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f831e0f_f5a8c3b5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1362925
      },
      "writtenOn": "2020-08-05T23:36:59Z",
      "side": 1,
      "message": "(Assuming this or a functionally equivalent flag gets passed in when the loaded page has COOP+COEP.)\n\nAs Adam said, in order to keep the feature detection capability, the standard behavior is that the SharedArrayBuffer global property is only present when COOP+COEP are present.\n\nThe presence of the SharedArrayBuffer global property is orthogonal to whether postMessage throws when passed a SAB. Even when COOP+COEP are not present, it is still possible to get at an SAB using WebAssembly.Memory. In that case, passing it to postMessage throws.\n\nDoes that clear it up?",
      "parentUuid": "98fa137e_79d741b4",
      "revId": "6258275c595423ebd52d732541be8d0ff82a607b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}