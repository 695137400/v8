{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6e698b4b_29c34da4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1313365
      },
      "writtenOn": "2024-07-26T08:40:17Z",
      "side": 1,
      "message": "Could you please review this patch?",
      "revId": "3e661e4fcf5920b09fa6fe75105a229c93e1cb3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82cdf049_059e644a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2024-07-26T12:09:12Z",
      "side": 1,
      "message": "+1 with comment\nAdding pthier as backup reviewer because I\u0027ll be OOO soon.",
      "revId": "3e661e4fcf5920b09fa6fe75105a229c93e1cb3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e075dd6_e4cfe596",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1313365
      },
      "writtenOn": "2024-07-29T02:56:35Z",
      "side": 1,
      "message": "Thanks for your review!\n@Patrick, could you please further review?",
      "revId": "3e661e4fcf5920b09fa6fe75105a229c93e1cb3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98233756_78bc981e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2024-08-02T13:06:22Z",
      "side": 1,
      "message": "Sorry for the late reply, I was sick.\n\nLGTM",
      "revId": "3e661e4fcf5920b09fa6fe75105a229c93e1cb3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23ba5bfa_424d7f4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1313365
      },
      "writtenOn": "2024-08-05T01:09:06Z",
      "side": 1,
      "message": "@Patrick",
      "parentUuid": "5e075dd6_e4cfe596",
      "revId": "3e661e4fcf5920b09fa6fe75105a229c93e1cb3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0abd55e_eab7e930",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1313365
      },
      "writtenOn": "2024-08-05T01:09:39Z",
      "side": 1,
      "message": "Thanks for your review!",
      "parentUuid": "98233756_78bc981e",
      "revId": "3e661e4fcf5920b09fa6fe75105a229c93e1cb3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e61c55ba_384aec35",
        "filename": "src/objects/transitions-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 424,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2024-07-26T12:09:12Z",
      "side": 1,
      "message": "Can this happen if the `transition_name` is a string and equal to the `key_chars`? If not move that `transition_name` check first and drop this check (or make it a DCHECK or a CHECK)",
      "revId": "3e661e4fcf5920b09fa6fe75105a229c93e1cb3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "112f6d78_1ec1d2b1",
        "filename": "src/objects/transitions-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 424,
      "author": {
        "id": 1313365
      },
      "writtenOn": "2024-07-29T02:56:35Z",
      "side": 1,
      "message": "No.\nI think check whether ```transition_name``` is equal to the ```key_chars``` is expensive, move ```transition_name``` check first may introduce regression in the case of map check fail. \nThis check is needed by the next line TransitionsAccessor::GetSimpleTargetDetails() -\u003e Map::GetLastDescriptorDetails() -\u003e Map::LastAdded() -\u003e DCHECK_GT(number_of_own_descriptors, 0), it also works that move this line into TransitionsAccessor::GetSimpleTargetDetails(), which is better?",
      "parentUuid": "e61c55ba_384aec35",
      "revId": "3e661e4fcf5920b09fa6fe75105a229c93e1cb3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98e4bdf3_fca9a453",
        "filename": "src/objects/transitions-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 424,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2024-08-02T13:06:22Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "112f6d78_1ec1d2b1",
      "revId": "3e661e4fcf5920b09fa6fe75105a229c93e1cb3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "If the author is a V8 committer, code review is required from one other committer (see https://v8.dev/docs/become-committer). Otherwise, code review is required from two committers."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "((uploaderin:cria/project-v8-committers AND label:Code-Review\u003dMAX,user\u003dnon_uploader) OR label:Code-Review\u003dMAX,count\u003e\u003d2) AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"((uploaderin:cria/project-v8-committers AND label:Code-Review=MAX,user=non_uploader) OR label:Code-Review=MAX,count>=2) AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MAX,count>=2"],"failingAtoms":["label:Code-Review=MIN","uploaderin:cria/project-v8-committers"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "3e661e4fcf5920b09fa6fe75105a229c93e1cb3f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "3e661e4fcf5920b09fa6fe75105a229c93e1cb3f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3e661e4fcf5920b09fa6fe75105a229c93e1cb3f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}