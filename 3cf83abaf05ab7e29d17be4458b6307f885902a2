{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ac801bf1_962b82fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-08-19T10:22:40Z",
      "side": 1,
      "message": "+Michael for src/heap",
      "revId": "3cf83abaf05ab7e29d17be4458b6307f885902a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "686cfa42_d45c0016",
        "filename": "src/heap/heap-write-barrier.cc",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2024-08-19T10:45:21Z",
      "side": 1,
      "message": "nit: I think it would be nice here to have the `JSDispatchTable` (actually a base class) acknowledge that it can never do compaction with slots recording by setting a bool that is asserted here.\n\nThe comment would then move into the dispatch table saying how it works and we don\u0027t need to keep it distributed over the code (write barrier, mark compact, etc)\n\nE.g.\n\n`static_assert(decltype(GetProcessWideJSDispatchTable())::kSupportsCompaction \u003d\u003d false)`.",
      "range": {
        "startLine": 134,
        "startChar": 3,
        "endLine": 136,
        "endChar": 51
      },
      "revId": "3cf83abaf05ab7e29d17be4458b6307f885902a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f779c63_f139f71f",
        "filename": "src/heap/heap-write-barrier.cc",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-08-19T12:14:41Z",
      "side": 1,
      "message": "Ah yeah, I think that\u0027s a nice idea. Gave it a shot and also added static_asserts into src/heap/marking-barrier.cc. WDYT?",
      "parentUuid": "686cfa42_d45c0016",
      "range": {
        "startLine": 134,
        "startChar": 3,
        "endLine": 136,
        "endChar": 51
      },
      "revId": "3cf83abaf05ab7e29d17be4458b6307f885902a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8cba6b09_6478a50d",
        "filename": "src/heap/heap-write-barrier.cc",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2024-08-19T12:36:54Z",
      "side": 1,
      "message": "Yip, this is what I meant.\n\nIn retrospect: I was thinking about table compaction here when really I think you are talking about compaction of Code which is handled differently.",
      "parentUuid": "3f779c63_f139f71f",
      "range": {
        "startLine": 134,
        "startChar": 3,
        "endLine": 136,
        "endChar": 51
      },
      "revId": "3cf83abaf05ab7e29d17be4458b6307f885902a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f76bf446_e1aff685",
        "filename": "src/heap/mark-compact.cc",
        "patchSetId": 2
      },
      "lineNbr": 5571,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2024-08-19T10:45:21Z",
      "side": 1,
      "message": "Do we relocate the compile lazy builtin?",
      "range": {
        "startLine": 5571,
        "startChar": 31,
        "endLine": 5571,
        "endChar": 45
      },
      "revId": "3cf83abaf05ab7e29d17be4458b6307f885902a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37ed3701_ee1ace26",
        "filename": "src/heap/mark-compact.cc",
        "patchSetId": 2
      },
      "lineNbr": 5571,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-08-19T12:14:41Z",
      "side": 1,
      "message": "The builtin should be in read-only space so I we shouldn\u0027t be relocating it (I can add a DCHECK somewhere if you think that\u0027d be useful), but I\u0027m also not sure if that would be a problem here? I think we\u0027re first doing the JSFunctionFlushing (https://source.chromium.org/chromium/chromium/src/+/main:v8/src/heap/mark-compact.cc;l\u003d434;drc\u003d82dff63dbf9db05e9274e11d9128af7b9f51ceaa) and then afterwards do the evacuation and run this code. So if we did relocate the builtin, we should be able to deal with that here I think?",
      "parentUuid": "f76bf446_e1aff685",
      "range": {
        "startLine": 5571,
        "startChar": 31,
        "endLine": 5571,
        "endChar": 45
      },
      "revId": "3cf83abaf05ab7e29d17be4458b6307f885902a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99d57c12_ce631522",
        "filename": "src/heap/mark-compact.cc",
        "patchSetId": 2
      },
      "lineNbr": 5571,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2024-08-19T12:36:54Z",
      "side": 1,
      "message": "Nevermind, I was holding it wrong. This code here updates the pointers to code that actually moved.",
      "parentUuid": "37ed3701_ee1ace26",
      "range": {
        "startLine": 5571,
        "startChar": 31,
        "endLine": 5571,
        "endChar": 45
      },
      "revId": "3cf83abaf05ab7e29d17be4458b6307f885902a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27707f18_52800a4c",
        "filename": "src/heap/read-only-promotion.cc",
        "patchSetId": 2
      },
      "lineNbr": 430,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2024-08-19T10:45:21Z",
      "side": 1,
      "message": "Can you add a one sentence summary what the method does?",
      "range": {
        "startLine": 430,
        "startChar": 9,
        "endLine": 430,
        "endChar": 34
      },
      "revId": "3cf83abaf05ab7e29d17be4458b6307f885902a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5176c944_598414e3",
        "filename": "src/heap/read-only-promotion.cc",
        "patchSetId": 2
      },
      "lineNbr": 430,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-08-19T12:14:41Z",
      "side": 1,
      "message": "Sure!",
      "parentUuid": "27707f18_52800a4c",
      "range": {
        "startLine": 430,
        "startChar": 9,
        "endLine": 430,
        "endChar": 34
      },
      "revId": "3cf83abaf05ab7e29d17be4458b6307f885902a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}