{
  "comments": [
    {
      "key": {
        "uuid": "3711a254_44f98041",
        "filename": "src/js/intl.js",
        "patchSetId": 13
      },
      "lineNbr": 1025,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:32:23Z",
      "side": 1,
      "message": "No need for object_define_properties now that we have an object with a null prototype, you can just do:\n\nvar resolved \u003d {__proto__: null};\n\nOr skip the resolved variable altogether and just change the line below to\n\ndateFormat[resolvedSymbol] \u003d {__proto__: null};",
      "range": {
        "startLine": 1025,
        "startChar": 16,
        "endLine": 1025,
        "endChar": 42
      },
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64b071a5_4045ca85",
        "filename": "src/js/intl.js",
        "patchSetId": 13
      },
      "lineNbr": 1025,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T00:33:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3711a254_44f98041",
      "range": {
        "startLine": 1025,
        "startChar": 16,
        "endLine": 1025,
        "endChar": 42
      },
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "113d0468_f3ddff31",
        "filename": "src/objects/intl-objects.cc",
        "patchSetId": 13
      },
      "lineNbr": 540,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:32:23Z",
      "side": 1,
      "message": "Nit: no need for parens here.",
      "range": {
        "startLine": 540,
        "startChar": 32,
        "endLine": 540,
        "endChar": 33
      },
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7558077_f417dd54",
        "filename": "src/objects/intl-objects.cc",
        "patchSetId": 13
      },
      "lineNbr": 540,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T00:33:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "113d0468_f3ddff31",
      "range": {
        "startLine": 540,
        "startChar": 32,
        "endLine": 540,
        "endChar": 33
      },
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e847475_0084e05f",
        "filename": "src/objects/intl-objects.cc",
        "patchSetId": 13
      },
      "lineNbr": 541,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:32:23Z",
      "side": 1,
      "message": "I would\u0027ve expected the default to be return false, can you explain?",
      "range": {
        "startLine": 541,
        "startChar": 9,
        "endLine": 541,
        "endChar": 13
      },
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "886f950c_43c7fae9",
        "filename": "src/objects/intl-objects.cc",
        "patchSetId": 13
      },
      "lineNbr": 541,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T00:33:32Z",
      "side": 1,
      "message": "In the old code, the timezone is invalid if the SUCCESS is true (in src/objects/intl-object.cc) and later js code find the value is equals to \"ETC/Unknown\" (in src/js/intl.js). This is just moving that old logic here.",
      "parentUuid": "3e847475_0084e05f",
      "range": {
        "startLine": 541,
        "startChar": 9,
        "endLine": 541,
        "endChar": 13
      },
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5578472_e5821b3e",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 12,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:32:23Z",
      "side": 1,
      "message": "These two don\u0027t seem to be used, but I do see std::string used, please include \u003cstring\u003e",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cce0799f_fd20e69e",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 12,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T00:33:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5578472_e5821b3e",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99e9fc7a_6c6c4120",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:32:23Z",
      "side": 1,
      "message": "In general it looks like there are a good number of includes that aren\u0027t used here, please only include what you use to help keep build times low.",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1afba9bf_129e176f",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T00:33:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "99e9fc7a_6c6c4120",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54183962_53ea9136",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 31,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:32:23Z",
      "side": 1,
      "message": "Please wrap this, and the next two declarations in an anonymous namespace.",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d6d6e1c_1390affd",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 31,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T00:33:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "54183962_53ea9136",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b689a765_6d5f91e7",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 32,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:32:23Z",
      "side": 1,
      "message": "Can these be \"more const\", since they should never change? That is, const char* const? Same goes below.",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c32bffdb_233921d7",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 32,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T00:33:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b689a765_6d5f91e7",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac706b6b_97dd2f4c",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 40,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:32:23Z",
      "side": 1,
      "message": "Typo: s/m/n/\n\nAlso this should be called \"kPatternItems\" to reflect its constant-ness.",
      "range": {
        "startLine": 40,
        "startChar": 31,
        "endLine": 40,
        "endChar": 32
      },
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e6b6f4e_4788e5a0",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 40,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:32:23Z",
      "side": 1,
      "message": "Please add a comment here about the importance of the ordering from longer to shorter, since you\u0027re depending on the longer things coming first.",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68435dcb_596b5739",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 40,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T00:33:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e6b6f4e_4788e5a0",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdc632af_316d5b48",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 40,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T00:33:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ac706b6b_97dd2f4c",
      "range": {
        "startLine": 40,
        "startChar": 31,
        "endLine": 40,
        "endChar": 32
      },
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34d2dc9a_e903d35f",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 102,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:32:23Z",
      "side": 1,
      "message": "Can this be a CHECK instead of an if? That is,\n\nCHECK(resolved_obj-\u003eIsJSReceiver());\nHandle\u003cJSReceiver\u003e resolved \u003d Handle\u003cJSReceiver\u003e::cast(resolved_obj);",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d1f5a6b_ce8065b2",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 102,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T00:33:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "34d2dc9a_e903d35f",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96bab6c3_1b326bd2",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 112,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:32:23Z",
      "side": 1,
      "message": "Given the CHECK above, no need for an if here, you can just case directly.",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f546cbe_e6c0e946",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 112,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T00:33:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96bab6c3_1b326bd2",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3176e43_4d74f1b4",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 125,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:32:23Z",
      "side": 1,
      "message": "This actually isn\u0027t guaranteed right now, because SetResolvedDateSettings can actually put undefined here.",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "999116f1_da26fd3e",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 125,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T00:33:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b3176e43_4d74f1b4",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b9d982f_4b68f586",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 140,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:32:23Z",
      "side": 1,
      "message": "Please use const PatternItem* here, makes it a little easier to follow this code (for me anyway).",
      "range": {
        "startLine": 140,
        "startChar": 7,
        "endLine": 140,
        "endChar": 11
      },
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80bb1cc1_48257fbb",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 140,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:32:23Z",
      "side": 1,
      "message": "I think it\u0027d be easier to understand this code if it were pulled out into a helper function that\u0027s up next to kPatternItems. As is I found myself bouncing back and forth in the file to follow the logic.",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48c14e07_fc52c4e9",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 140,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:37:05Z",
      "side": 1,
      "message": "One more high-level question: this method of approximating the JS regexp-based code looks a little hacky to me. But I\u0027m not at all familiar with ICU here; did you look into other ways of extracting this information?",
      "parentUuid": "80bb1cc1_48257fbb",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "555965d0_28ff091c",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 140,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2018-08-17T23:44:26Z",
      "side": 1,
      "message": "Frank -- looks like you can most of this from this class:\nhttp://icu-project.org/apiref/icu4c621/classicu_1_1DateFormatSymbols.html",
      "parentUuid": "48c14e07_fc52c4e9",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad180633_4db9b52d",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 140,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T00:33:32Z",
      "side": 1,
      "message": "DONE",
      "parentUuid": "6b9d982f_4b68f586",
      "range": {
        "startLine": 140,
        "startChar": 7,
        "endLine": 140,
        "endChar": 11
      },
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "509ad586_417fccfd",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 140,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T00:33:32Z",
      "side": 1,
      "message": "Satha- the DateFormatSymbols is dealing with what  the string of each field should be (for example, \"Monday\", \"Tuesday\" (as in English) or \"domingo\" , \"lunes\" (as in Spanish) but in here we are dealing with the pattern (using long weekday or short weekday). Not the samething\n\nI asked ICU team. I don\u0027t believe there are class to parse the generated pattern in icu",
      "parentUuid": "555965d0_28ff091c",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad3a4837_4aaceb92",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 140,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-21T00:49:09Z",
      "side": 1,
      "message": "Thanks for investigating. While it works, the current code doesn\u0027t seem ideal to me (in particular, having to hardcode `pairs[11]` into PatternItem seems bad). How would you feel about adding a TODO on SetPropertyFromPattern for doing this with regexes (or some other more-formalized matching) in future?",
      "parentUuid": "509ad586_417fccfd",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fafc6d6_e6748f54",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 140,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T01:24:55Z",
      "side": 1,
      "message": "I really think using regex here is overkill, if you look at what the previous js code was doing. It may make this less frequent use function a little faster (or maybe slower and use more memory). I am open for suggestion of how should I remove that pairs[11].",
      "parentUuid": "ad3a4837_4aaceb92",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e531eaf1_caa41d15",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 150,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:32:23Z",
      "side": 1,
      "message": "Please add a comment here explaining that you\u0027re bailing out of the inner loop because the patterns are listed from longer to shorter.",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b08c445_d048df1a",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 150,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T00:33:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e531eaf1_caa41d15",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1632c8f9_c3fc7ee1",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 226,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:32:23Z",
      "side": 1,
      "message": "Would we ever hit this branch? I thought the point of IsValidTimeZone was to make this unreachable?",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9def88b5_4fe8a93a",
        "filename": "src/objects/js-date-time-format.cc",
        "patchSetId": 13
      },
      "lineNbr": 226,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T00:33:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1632c8f9_c3fc7ee1",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b609abff_3cc02610",
        "filename": "src/objects/js-date-time-format.h",
        "patchSetId": 13
      },
      "lineNbr": 13,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:32:23Z",
      "side": 1,
      "message": "You shouldn\u0027t need these headers here.",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64f5131f_34bb4157",
        "filename": "src/objects/js-date-time-format.h",
        "patchSetId": 13
      },
      "lineNbr": 13,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T00:33:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b609abff_3cc02610",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bde1a3a_62342986",
        "filename": "src/runtime/runtime-intl.cc",
        "patchSetId": 13
      },
      "lineNbr": 246,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-08-17T23:32:23Z",
      "side": 1,
      "message": "The equivalent C++ function for this spec concept is actually IsJSReceiver() (which is the superclass of JSObject and JSProxy). This doesn\u0027t make a big difference, since Intl::IsObjectOfType will already disregard non-JSObjects, but since this code is trying to follow the spec exactly I\u0027d prefer if this check was IsJSReceiver, and JSDateTimeFormat::ResolvedOptions should take a Handle\u003cJSReceiver\u003e.\n\nAlternatively, after all that explanation, you could just pass a Handle\u003cObject\u003e directly to ResolvedOptions, since that\u0027s what IsObjectOfType expects. That won\u0027t match 1:1 with the spec, but the behavior will be identical. So that\u0027s what I\u0027d recommend.",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1904d54f_64256552",
        "filename": "src/runtime/runtime-intl.cc",
        "patchSetId": 13
      },
      "lineNbr": 246,
      "author": {
        "id": 1291594
      },
      "writtenOn": "2018-08-21T00:33:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0bde1a3a_62342986",
      "revId": "f68792d4661fd6b6efd2fef8c0de8df7d096d811",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}