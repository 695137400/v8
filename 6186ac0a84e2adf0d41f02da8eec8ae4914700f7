{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c0016384_0953e9ad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2024-07-29T11:32:52Z",
      "side": 1,
      "message": "To double check: We don\u0027t need the Isolate at all? We should not retrieve it through `object-\u003eGetIsolate()` anywhere else.",
      "range": {
        "startLine": 10,
        "startChar": 47,
        "endLine": 10,
        "endChar": 66
      },
      "revId": "6186ac0a84e2adf0d41f02da8eec8ae4914700f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84a07c08_b2b5d9dd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2024-07-29T14:49:22Z",
      "side": 1,
      "message": "All these functions convert handles to locals. The isolate parameter was required in mixed configurations, when direct handles were converted to indirect locals. This configuration is no longer supported, after the configuration cleanup.\n\nThis CL is just removing redundant things. It does not introduce new retrievals of the isolate, from anywhere. In general, there is `HandleScope::CreateHandleForCurrentIsolate` (in the direct handle configuration), which is used only in `Utils::OpenHandle`, i.e., when creating an indirect handle from a direct local. This is progressively avoided, as more handles are migrated to direct handles and `Utils::OpenHandle` is migrated to `Utils::OpenDirectHandle`.",
      "parentUuid": "c0016384_0953e9ad",
      "range": {
        "startLine": 10,
        "startChar": 47,
        "endLine": 10,
        "endChar": 66
      },
      "revId": "6186ac0a84e2adf0d41f02da8eec8ae4914700f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4fde37a_aa2916f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2024-07-29T14:55:20Z",
      "side": 1,
      "message": "lgtm",
      "revId": "6186ac0a84e2adf0d41f02da8eec8ae4914700f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "183aebfc_d3b73125",
        "filename": "src/api/api-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2024-07-29T10:46:17Z",
      "side": 1,
      "message": "Are these `Name##_helper`s used elsewhere as well? If not, should this also be `TO_LOCAL_NAME_LIST`?",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 83,
        "endChar": 13
      },
      "revId": "6186ac0a84e2adf0d41f02da8eec8ae4914700f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1d2bd13_fc0b3d93",
        "filename": "src/api/api-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2024-07-29T14:49:22Z",
      "side": 1,
      "message": "They are only used from `Utils::Name` (defined above).  \nThis should indeed be `TO_LOCAL_LIST`, and the one above `TO_LOCAL_NAME_LIST`.\n\nThe former defines one instance for all From/To pairs.  \nThe latter defines one instance for each name.",
      "parentUuid": "183aebfc_d3b73125",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 83,
        "endChar": 13
      },
      "revId": "6186ac0a84e2adf0d41f02da8eec8ae4914700f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "44e8ed2f_4d836d04",
        "filename": "src/api/api-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2024-07-29T14:55:20Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "d1d2bd13_fc0b3d93",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 83,
        "endChar": 13
      },
      "revId": "6186ac0a84e2adf0d41f02da8eec8ae4914700f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dcd0e4f_641555a5",
        "filename": "src/api/api.cc",
        "patchSetId": 1
      },
      "lineNbr": 5593,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2024-07-29T10:46:17Z",
      "side": 1,
      "message": "Was this missing from an earlier CL? Or was it intentionally an indirect handle until now?",
      "range": {
        "startLine": 5593,
        "startChar": 26,
        "endLine": 5593,
        "endChar": 42
      },
      "revId": "6186ac0a84e2adf0d41f02da8eec8ae4914700f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57c270b0_66c44f2d",
        "filename": "src/api/api.cc",
        "patchSetId": 1
      },
      "lineNbr": 5593,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2024-07-29T14:49:22Z",
      "side": 1,
      "message": "Not sure. But:\n- In the configuration with indirect handles/locals, it doesn\u0027t make a difference, as `i::direct_handle` is the same as `i::handle`.\n- In the configuration with direct handle/locals, we don\u0027t need to create an indirect handle and then convert that to a direct local. We\u0027d be just wasting a handle slot. If we actually intended to create an indirect handle here, it should have been better documented. My interpretation is that it\u0027s not required.",
      "parentUuid": "5dcd0e4f_641555a5",
      "range": {
        "startLine": 5593,
        "startChar": 26,
        "endLine": 5593,
        "endChar": 42
      },
      "revId": "6186ac0a84e2adf0d41f02da8eec8ae4914700f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1240804_0f5017ff",
        "filename": "src/api/api.cc",
        "patchSetId": 1
      },
      "lineNbr": 5593,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2024-07-29T14:55:20Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "57c270b0_66c44f2d",
      "range": {
        "startLine": 5593,
        "startChar": 26,
        "endLine": 5593,
        "endChar": 42
      },
      "revId": "6186ac0a84e2adf0d41f02da8eec8ae4914700f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5a89c1d_e2c2fbcc",
        "filename": "src/api/api.h",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2024-07-29T10:46:17Z",
      "side": 1,
      "message": "Could you use `requires` instead?",
      "range": {
        "startLine": 228,
        "startChar": 23,
        "endLine": 228,
        "endChar": 39
      },
      "revId": "6186ac0a84e2adf0d41f02da8eec8ae4914700f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4196bfea_c7bdd15a",
        "filename": "src/api/api.h",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2024-07-29T14:57:52Z",
      "side": 1,
      "message": "As \"the migration (to C++20) is done but concepts specifically are blocked by our gcc bot until we deprecate it in a few weeks\", let\u0027s leave it like this for now. I\u0027m adding a comment.",
      "parentUuid": "d5a89c1d_e2c2fbcc",
      "range": {
        "startLine": 228,
        "startChar": 23,
        "endLine": 228,
        "endChar": 39
      },
      "revId": "6186ac0a84e2adf0d41f02da8eec8ae4914700f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}