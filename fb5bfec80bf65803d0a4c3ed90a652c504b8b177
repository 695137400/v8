{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c9a312e3_dc5c59bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1362925
      },
      "writtenOn": "2022-10-19T14:56:50Z",
      "side": 1,
      "message": "PTAL",
      "revId": "fb5bfec80bf65803d0a4c3ed90a652c504b8b177",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "296d8887_4c0f3f77",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2022-10-19T15:56:21Z",
      "side": 1,
      "message": "Let\u0027s use a more local owner. Change looks good to me though.",
      "revId": "fb5bfec80bf65803d0a4c3ed90a652c504b8b177",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24989246_28009bb1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-10-19T16:15:02Z",
      "side": 1,
      "message": "lgtm with suggestions",
      "revId": "fb5bfec80bf65803d0a4c3ed90a652c504b8b177",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a3e24b8_a6d3dde2",
        "filename": "src/execution/isolate.h",
        "patchSetId": 3
      },
      "lineNbr": 644,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-10-19T16:15:02Z",
      "side": 1,
      "message": "Why not make it inlined as long as no cross-component usage is involved?",
      "revId": "fb5bfec80bf65803d0a4c3ed90a652c504b8b177",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "995a6146_1c5eaa1e",
        "filename": "src/execution/isolate.h",
        "patchSetId": 3
      },
      "lineNbr": 644,
      "author": {
        "id": 1362925
      },
      "writtenOn": "2022-10-19T16:18:59Z",
      "side": 1,
      "message": "Initially I tried to make it inlined by making `current_per_isolate_thread_data` a `static thread_local`. However, `static thread_local` didn\u0027t compile on Windows because thread locals can\u0027t have dllexport linkage or something like that (I guess that\u0027s because of `V8_EXPORT_PRIVATE`. Any pointers how to make it inlined?",
      "parentUuid": "2a3e24b8_a6d3dde2",
      "revId": "fb5bfec80bf65803d0a4c3ed90a652c504b8b177",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "528172fb_43bfd260",
        "filename": "src/execution/isolate.h",
        "patchSetId": 3
      },
      "lineNbr": 644,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2022-10-19T16:21:25Z",
      "side": 1,
      "message": "I am leaving this here as a way to optimize this as much as possible: https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/platform/heap/thread_state_storage.h;l\u003d46;bpv\u003d1;bpt\u003d1\n\ntl;dr: Custom getters and different TLS models depending on configuration.",
      "parentUuid": "995a6146_1c5eaa1e",
      "revId": "fb5bfec80bf65803d0a4c3ed90a652c504b8b177",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43670738_f0caf60e",
        "filename": "src/execution/isolate.h",
        "patchSetId": 3
      },
      "lineNbr": 644,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-10-19T16:34:49Z",
      "side": 1,
      "message": "I had a similar issue with thread_local `RwxMemoryWriteScope::code_space_write_nesting_level_` but in that case cross-component usage happened only for usages in cctest/unittests components, so I ended up with introducing a non-inlining version `RwxMemoryWriteScopeForTesting` which I used from the tests.\n\nProbably the issue is that we `V8_EXPORT_PRIVATE` the whole Isolate class instead of per-method approach that we use in other places. WDYT about trying to export only those Isolate methods that are used cross/component, maybe as a follow-up CL?",
      "parentUuid": "995a6146_1c5eaa1e",
      "revId": "fb5bfec80bf65803d0a4c3ed90a652c504b8b177",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24cbcfd5_3660ea77",
        "filename": "src/execution/isolate.h",
        "patchSetId": 3
      },
      "lineNbr": 647,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-10-19T16:15:02Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "fb5bfec80bf65803d0a4c3ed90a652c504b8b177",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}