{
  "comments": [
    {
      "key": {
        "uuid": "bf957eaa_42409411",
        "filename": "src/wasm/wasm-interpreter.cc",
        "patchSetId": 4
      },
      "lineNbr": 1527,
      "author": {
        "id": 1119499
      },
      "writtenOn": "2017-10-24T11:28:21Z",
      "side": 1,
      "message": "I think this is much clearer without the template and its specializations. Is it possible to do it as before with std::is_same?",
      "revId": "8348b3dd61f9588c12f8e5aaa887193634a04472",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4faa7535_41b1b179",
        "filename": "src/wasm/wasm-interpreter.cc",
        "patchSetId": 4
      },
      "lineNbr": 1527,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-10-24T11:29:54Z",
      "side": 1,
      "message": "No, unfortunately not. Before, we could just call std::isnan, which works for both float and double. Now we need to call Float32::is_nan and Float64::is_nan, and even though this code would be in statically dead branches, the compiler still complains about this.",
      "parentUuid": "bf957eaa_42409411",
      "revId": "8348b3dd61f9588c12f8e5aaa887193634a04472",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}