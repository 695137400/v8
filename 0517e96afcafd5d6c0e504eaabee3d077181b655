{
  "comments": [
    {
      "key": {
        "uuid": "9ae49a2b_7344a350",
        "filename": "src/base/random-utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-10-26T09:10:22Z",
      "side": 1,
      "message": "Maybe also put this file into base/utils? Or maybe add it to random-number-generator directly?",
      "range": {
        "startLine": 12,
        "startChar": 14,
        "endLine": 12,
        "endChar": 25
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cecdaa2a_11d46003",
        "filename": "src/base/random-utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-10-26T10:06:07Z",
      "side": 1,
      "message": "Other \"utils\" files are under src/base, so I wanted to be consistent with the majority.\nMaybe utils need simple reorganization?",
      "parentUuid": "9ae49a2b_7344a350",
      "range": {
        "startLine": 12,
        "startChar": 14,
        "endLine": 12,
        "endChar": 25
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c5e1e0c_3eabe0eb",
        "filename": "src/base/random-utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-10-26T11:58:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cecdaa2a_11d46003",
      "range": {
        "startLine": 12,
        "startChar": 14,
        "endLine": 12,
        "endChar": 25
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d193aa8a_eeffcf7f",
        "filename": "src/base/random-utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-10-26T09:10:22Z",
      "side": 1,
      "message": "nit: http://shortn/_UVcs3z4hSi",
      "range": {
        "startLine": 22,
        "startChar": 49,
        "endLine": 22,
        "endChar": 53
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb5c90c2_e443ad6d",
        "filename": "src/base/random-utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-10-26T10:06:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d193aa8a_eeffcf7f",
      "range": {
        "startLine": 22,
        "startChar": 49,
        "endLine": 22,
        "endChar": 53
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ecdaa6e_78a3438c",
        "filename": "src/base/random-utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-10-26T09:10:22Z",
      "side": 1,
      "message": "It looks like selected might contain the same values several times. Should it? And if it should, why restrict to n\u003cmax?",
      "range": {
        "startLine": 25,
        "startChar": 29,
        "endLine": 25,
        "endChar": 37
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d16b4b2e_8ed3cb38",
        "filename": "src/base/random-utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-10-26T10:06:07Z",
      "side": 1,
      "message": "Set contains only unique values.",
      "parentUuid": "9ecdaa6e_78a3438c",
      "range": {
        "startLine": 25,
        "startChar": 29,
        "endLine": 25,
        "endChar": 37
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84a6c32e_9f61cc35",
        "filename": "src/base/random-utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-10-26T11:58:16Z",
      "side": 1,
      "message": "Right, but isn\u0027t this approach prone to be wasteful when the number n gets close to half? If n is at half, towards the end of the loop, near half the values will be chosen and it will re-iterate until it finds a vacant value.\n\nWith a truly entropic RNG, I\u0027d assume that we still get progress, but with a pseudo-RNG that follows a simplistic pattern, we might actually cycle through existing values and get an infinite loop. Is that possible?\n\nHow about an approach where, instead of reiterating, we pick the nearest unused value?",
      "parentUuid": "d16b4b2e_8ed3cb38",
      "range": {
        "startLine": 25,
        "startChar": 29,
        "endLine": 25,
        "endChar": 37
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff762d29_4d38a873",
        "filename": "src/base/random-utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-10-26T12:31:07Z",
      "side": 1,
      "message": "Probably choosing the nearest value gives also a biased result.\n\nAfter reading \nhttps://visualstudiomagazine.com/articles/2013/07/01/generating-distinct-random-array-indices.aspx I tend to be fine with your approach, given the number n is small. Maybe introduce a sanity variable that prevents infinite loops as in one of the examples in the article?\n\nIf n is larger, reservoir sampling seems to be the best method.",
      "parentUuid": "84a6c32e_9f61cc35",
      "range": {
        "startLine": 25,
        "startChar": 29,
        "endLine": 25,
        "endChar": 37
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f21ab206_f9267e06",
        "filename": "src/base/random-utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-10-26T09:10:22Z",
      "side": 1,
      "message": "Just making sure that I get the math:\nLLONG_MIN - LLONG_MIN \u003d 0\n-1 - LLONG_MIN \u003d LLONG_MAX\nDoes that sound right?",
      "range": {
        "startLine": 31,
        "startChar": 6,
        "endLine": 31,
        "endChar": 21
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67cab058_03e5d708",
        "filename": "src/base/random-utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-10-26T10:06:07Z",
      "side": 1,
      "message": "Yes",
      "parentUuid": "f21ab206_f9267e06",
      "range": {
        "startLine": 31,
        "startChar": 6,
        "endLine": 31,
        "endChar": 21
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f11a7175_0e85a741",
        "filename": "src/base/random-utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-10-26T09:10:22Z",
      "side": 1,
      "message": "Won\u0027t this have a (very small) bias towards the modulo rest? E.g. assume nextint64 returns in interval [0,9] and max is 7. We\u0027d have a higher probability for 0,1,2 than for the other numbers.\n\nMaybe use a random double d in (0,1] and choose max*d?",
      "range": {
        "startLine": 33,
        "startChar": 40,
        "endLine": 33,
        "endChar": 47
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f6a1c68_1c4f0b17",
        "filename": "src/base/random-utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-10-26T10:06:07Z",
      "side": 1,
      "message": "You\u0027re right.\n\nWe could also return a vector of integers, then we could use nextInt(max) from RandomNumberGenerator. What do you think?",
      "parentUuid": "f11a7175_0e85a741",
      "range": {
        "startLine": 33,
        "startChar": 40,
        "endLine": 33,
        "endChar": 47
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36005bb2_ce6f1871",
        "filename": "src/base/random-utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-10-26T11:58:16Z",
      "side": 1,
      "message": "I.e. you\u0027d want to construct the full vector of possible values first? But that could be very large, right?\n\nHow about making a fraction of LLONG_MAX / NextInt64? And then use this fraction like the d I described above?",
      "parentUuid": "4f6a1c68_1c4f0b17",
      "range": {
        "startLine": 33,
        "startChar": 40,
        "endLine": 33,
        "endChar": 47
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1dfac57_3866a479",
        "filename": "src/heap/mark-compact.cc",
        "patchSetId": 4
      },
      "lineNbr": 923,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-10-26T09:10:22Z",
      "side": 1,
      "message": "I\u0027m too much of a python guy I guess. What happens if FLAG_stress_compaction_percentage is 0? Which value is used to keep the flag off? For the other fuzzer flags we include \u003e 0 in this check.",
      "range": {
        "startLine": 923,
        "startChar": 13,
        "endLine": 923,
        "endChar": 46
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91e341e6_984d258e",
        "filename": "src/heap/mark-compact.cc",
        "patchSetId": 4
      },
      "lineNbr": 923,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-10-26T10:06:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b1dfac57_3866a479",
      "range": {
        "startLine": 923,
        "startChar": 13,
        "endLine": 923,
        "endChar": 46
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a379ae35_a83e2b24",
        "filename": "src/heap/mark-compact.cc",
        "patchSetId": 4
      },
      "lineNbr": 924,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-10-26T09:10:22Z",
      "side": 1,
      "message": "Wonder if we maybe should make all dchecks checks instead within our fuzzing code? We\u0027d discover dcheck failures only if we add a debug fuzzer build. But maybe we only do release + tsan... Those checks should not be that expensive at this point I guess...",
      "range": {
        "startLine": 924,
        "startChar": 4,
        "endLine": 924,
        "endChar": 52
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10029fcc_76dde6c4",
        "filename": "src/heap/mark-compact.cc",
        "patchSetId": 4
      },
      "lineNbr": 924,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-10-26T10:06:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a379ae35_a83e2b24",
      "range": {
        "startLine": 924,
        "startChar": 4,
        "endLine": 924,
        "endChar": 52
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8076cffa_dd250ae7",
        "filename": "src/heap/mark-compact.cc",
        "patchSetId": 4
      },
      "lineNbr": 930,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-10-26T09:10:22Z",
      "side": 1,
      "message": "Is the order in this loop important? Right now, the samples are not sorted. Also note that I believe it can contain the same i twice, as commented on the util file.",
      "range": {
        "startLine": 930,
        "startChar": 6,
        "endLine": 930,
        "endChar": 9
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6c71d7b_3e5ad03d",
        "filename": "src/heap/mark-compact.cc",
        "patchSetId": 4
      },
      "lineNbr": 930,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-10-26T10:06:07Z",
      "side": 1,
      "message": "The order is not important, I just want to iterate over page indexes that should be marked.",
      "parentUuid": "8076cffa_dd250ae7",
      "range": {
        "startLine": 930,
        "startChar": 6,
        "endLine": 930,
        "endChar": 9
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9edd97a0_f1d0c38e",
        "filename": "src/heap/mark-compact.cc",
        "patchSetId": 4
      },
      "lineNbr": 930,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-10-26T11:58:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d6c71d7b_3e5ad03d",
      "range": {
        "startLine": 930,
        "startChar": 6,
        "endLine": 930,
        "endChar": 9
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3058c901_e862e090",
        "filename": "test/unittests/base/random-utils-unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-10-26T09:10:22Z",
      "side": 1,
      "message": "Could we not compare with exact expected numbers? The RNG should be deterministic with the 123 seed.",
      "range": {
        "startLine": 44,
        "startChar": 4,
        "endLine": 45,
        "endChar": 22
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a9f2836_e9d2aba9",
        "filename": "test/unittests/base/random-utils-unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-10-26T10:06:07Z",
      "side": 1,
      "message": "I just wanted to check if they\u0027re from given range. If we change how we generate random values inside RandomSample then the test with hardcoded values will fail, even if they\u0027re still correct (from the correct range).\nMaybe I should call the same test multiple times with different seeds?",
      "parentUuid": "3058c901_e862e090",
      "range": {
        "startLine": 44,
        "startChar": 4,
        "endLine": 45,
        "endChar": 22
      },
      "revId": "0517e96afcafd5d6c0e504eaabee3d077181b655",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}