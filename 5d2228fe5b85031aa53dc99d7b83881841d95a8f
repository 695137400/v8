{
  "comments": [
    {
      "key": {
        "uuid": "f5ccdb18_5f9fa19b",
        "filename": "src/builtins/builtins-intl.cc",
        "patchSetId": 8
      },
      "lineNbr": 388,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2018-04-20T19:20:47Z",
      "side": 1,
      "message": "JSReceiver is the super type for all the JavaScript Objects in V8. \n\nThis check should be !tag-\u003eIsJSReceiver().",
      "range": {
        "startLine": 388,
        "startChar": 26,
        "endLine": 388,
        "endChar": 45
      },
      "revId": "5d2228fe5b85031aa53dc99d7b83881841d95a8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72294e22_6db482c7",
        "filename": "src/builtins/builtins-intl.cc",
        "patchSetId": 8
      },
      "lineNbr": 388,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2018-04-20T19:20:47Z",
      "side": 1,
      "message": "Name is a super type for all the String (including Symbol) types in V8. See the big comment header in src/objects.cc for the completely hierarchy.\n\nLooking at the spec again, we don\u0027t need to check for Symbols, so this check should be tag-\u003eIsString() (the ToString in the next step would throw for Symbols anyways so it doesn\u0027t matter, which is why I was confused). Sorry!",
      "revId": "5d2228fe5b85031aa53dc99d7b83881841d95a8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2794580_db183410",
        "filename": "src/objects/intl-objects.cc",
        "patchSetId": 8
      },
      "lineNbr": 1118,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2018-04-20T19:20:47Z",
      "side": 1,
      "message": "The spec defines `calendar, collation, hourCycle, caseFirst, numeric, numericSystem, language, script and region` as getters, not properties. This is visible to userland javascript via `Object.getOwnPropertyDescriptor(new Intl.locale(\u0027sr\u0027), \"language\")`. \n\nThese need to be defined on the Intl.Locale.prototype, not on the instance. You\u0027ll have to create individual builtin functions for each of these getters and then install them using `SimpleInstallGetter` in bootstrapper.cc\n\nSome of the other properties installed here are not part of the spec. Those shouldn\u0027t be exposed, right?",
      "revId": "5d2228fe5b85031aa53dc99d7b83881841d95a8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}