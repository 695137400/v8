{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "40f3e892_9abcf8b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1420650
      },
      "writtenOn": "2022-12-09T10:21:08Z",
      "side": 1,
      "message": "PTAL. Thanks!",
      "revId": "50a25e740b00a9bdf6d6e833e3fa6e8cd8e7d2d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b9a6f9c_1965331f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1420650
      },
      "writtenOn": "2022-12-09T10:23:52Z",
      "side": 1,
      "message": "+Tobias for src/compiler/effect-control-linearizer.cc",
      "revId": "50a25e740b00a9bdf6d6e833e3fa6e8cd8e7d2d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95b114fe_16c4a113",
        "filename": "src/codegen/interface-descriptors.h",
        "patchSetId": 1
      },
      "lineNbr": 1573,
      "author": {
        "id": 1420650
      },
      "writtenOn": "2022-12-09T10:21:08Z",
      "side": 1,
      "message": "Do we need to use same registers for lhs and rhs as its caller (e.g. Compare_BaselineDescriptor)? This might avoid register moves.\n\nIf not, I will  use default registers set.",
      "revId": "50a25e740b00a9bdf6d6e833e3fa6e8cd8e7d2d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be11fafc_7cad7e34",
        "filename": "src/codegen/interface-descriptors.h",
        "patchSetId": 1
      },
      "lineNbr": 1573,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-12-09T12:00:59Z",
      "side": 1,
      "message": "No, we don\u0027t have to because builtin with StringEqualDescriptor calling convention is not going to call builtin with Compare_BaselineDescriptor calling convention and vice versa.\nPlease use DECLARE_DEFAULT_DESCRIPTOR.",
      "parentUuid": "95b114fe_16c4a113",
      "revId": "50a25e740b00a9bdf6d6e833e3fa6e8cd8e7d2d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d96788ec_565aa78c",
        "filename": "src/codegen/interface-descriptors.h",
        "patchSetId": 1
      },
      "lineNbr": 1573,
      "author": {
        "id": 1420650
      },
      "writtenOn": "2022-12-09T13:03:55Z",
      "side": 1,
      "message": "It seems that Builtin::StrictEqual_Baseline (which use Compare_BaselineDescriptor) might call Builtin::StringEqual?",
      "parentUuid": "be11fafc_7cad7e34",
      "revId": "50a25e740b00a9bdf6d6e833e3fa6e8cd8e7d2d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77685ce8_92a9a20d",
        "filename": "src/codegen/interface-descriptors.h",
        "patchSetId": 1
      },
      "lineNbr": 1573,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-12-09T14:54:37Z",
      "side": 1,
      "message": "Well, it might but it does tons of other stuff before it reaches that string-to-string comparison case, so I think we shouldn\u0027t worry about that. We should probably consider switching other descriptors to default registers. IIRC the only place it\u0027s worth having a manually-defined descriptors is for ICs dispatchers (like LoadWithVectorDescriptor vs. LoadDescriptor, where one tail calls to another, see GenerateLoadICTrampoline).\n\nAnother option you could give a try is to `return Compare_BaselineDescriptor::registers();` with a respective comment.",
      "parentUuid": "d96788ec_565aa78c",
      "revId": "50a25e740b00a9bdf6d6e833e3fa6e8cd8e7d2d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5f6b8c5_ae4b8a82",
        "filename": "src/codegen/interface-descriptors.h",
        "patchSetId": 1
      },
      "lineNbr": 1573,
      "author": {
        "id": 1420650
      },
      "writtenOn": "2022-12-12T05:09:58Z",
      "side": 1,
      "message": "I think `StrictEqual_Baseline` uses manually-defined registers because of the location of `kInterpreterAccumulatorRegister` (https://chromium-review.googlesource.com/c/v8/v8/+/4090410/5/src/baseline/baseline-compiler.cc#1463). I also checked the code and found that using manually-defined descriptors for `StringEqual` do avoid some register moves in `StrictEqual_Baseline`.\n\nBut currently I just use default descriptors because I found that `StrictEqual_WithFeedback` (which uses default descriptors) also calls `StringEqual`.\n\nMaybe a better choice is to use manually-defined descriptors for all cases? If it worth it, I can do this in a follow-up CL that fix all the inconsistency between `XXX_Baseline` and `XXX_WithFeedback` builtins.",
      "parentUuid": "77685ce8_92a9a20d",
      "revId": "50a25e740b00a9bdf6d6e833e3fa6e8cd8e7d2d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90a2c63c_d62376f3",
        "filename": "src/codegen/interface-descriptors.h",
        "patchSetId": 1
      },
      "lineNbr": 1573,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-12-12T11:00:25Z",
      "side": 1,
      "message": "Using default descriptor in this CL SG.\nOur mental model was that having a couple of register-to-register moves is not an issue for modern CPUs.\nIf you have resources to experiment with calling conventions you can give it a try, although I think we need to have a clear evidence that using custom descriptors improve things because using/maintaining them does complicate things a lot.\nProbably your other work in StringEquals area might bring more benefits.",
      "parentUuid": "c5f6b8c5_ae4b8a82",
      "revId": "50a25e740b00a9bdf6d6e833e3fa6e8cd8e7d2d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "284bdef2_ef51c5c0",
        "filename": "src/codegen/interface-descriptors.h",
        "patchSetId": 1
      },
      "lineNbr": 1573,
      "author": {
        "id": 1420650
      },
      "writtenOn": "2022-12-13T03:42:11Z",
      "side": 1,
      "message": "Got it. Thanks for your explanation!",
      "parentUuid": "90a2c63c_d62376f3",
      "revId": "50a25e740b00a9bdf6d6e833e3fa6e8cd8e7d2d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}