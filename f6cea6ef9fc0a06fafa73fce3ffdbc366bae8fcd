{
  "comments": [
    {
      "key": {
        "uuid": "be57b34d_d24cc638",
        "filename": "src/ast/scopes.cc",
        "patchSetId": 6
      },
      "lineNbr": 1934,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2017-05-02T23:50:10Z",
      "side": 1,
      "message": "I don\u0027t love having to dot this function with these, nor to make a function called \"AccessNeedsHoleCheck\" have side-effects. I first tried doing this in the caller, but I had to move it here to deal with the local_if_not_shadowed case. Happy to move it if reviewers have a better suggestion (or a better name for this function).",
      "revId": "f6cea6ef9fc0a06fafa73fce3ffdbc366bae8fcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8a2f279_883f0b43",
        "filename": "src/ast/scopes.cc",
        "patchSetId": 6
      },
      "lineNbr": 1934,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2017-05-03T10:37:57Z",
      "side": 1,
      "message": "Why not rename to something like \"UpdateNeedsHoleCheck\" and set proxy-\u003eset_needs_hole_check() in this function too?",
      "parentUuid": "be57b34d_d24cc638",
      "revId": "f6cea6ef9fc0a06fafa73fce3ffdbc366bae8fcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b71401c5_429ba739",
        "filename": "src/ast/scopes.cc",
        "patchSetId": 6
      },
      "lineNbr": 1934,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2017-05-03T11:26:52Z",
      "side": 1,
      "message": "+1 on what Leszek suggested.",
      "parentUuid": "c8a2f279_883f0b43",
      "revId": "f6cea6ef9fc0a06fafa73fce3ffdbc366bae8fcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a0865b1_da810652",
        "filename": "src/ast/scopes.cc",
        "patchSetId": 6
      },
      "lineNbr": 1934,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2017-05-03T18:00:56Z",
      "side": 1,
      "message": "Done, and moved the pair of mutations into a helper function.",
      "parentUuid": "b71401c5_429ba739",
      "revId": "f6cea6ef9fc0a06fafa73fce3ffdbc366bae8fcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13fe8af4_834d3c7e",
        "filename": "src/ast/variables.h",
        "patchSetId": 6
      },
      "lineNbr": 184,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2017-05-03T11:26:52Z",
      "side": 1,
      "message": "nit: Could we add printing of this flag in {PrintVar} in the scopes.cc file? I am fine with only printing it for stack-local variables. But we should print a \"positive result\" (i.e. when the analysis determines that initialization can be skipped).",
      "range": {
        "startLine": 184,
        "startChar": 8,
        "endLine": 184,
        "endChar": 36
      },
      "revId": "f6cea6ef9fc0a06fafa73fce3ffdbc366bae8fcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "492f19e9_4694b079",
        "filename": "src/ast/variables.h",
        "patchSetId": 6
      },
      "lineNbr": 184,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2017-05-03T18:00:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "13fe8af4_834d3c7e",
      "range": {
        "startLine": 184,
        "startChar": 8,
        "endLine": 184,
        "endChar": 36
      },
      "revId": "f6cea6ef9fc0a06fafa73fce3ffdbc366bae8fcd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}