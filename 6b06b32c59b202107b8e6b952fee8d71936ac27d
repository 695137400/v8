{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2be66980_704ee128",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-03-04T12:55:05Z",
      "side": 1,
      "message": "Hi folks,\nCould you PTAL at this CL that adds basic support for leaf interface types to the fast API?\n@Sathya, Toon told me you had some similar idea in mind for the IsTemplateForApiObject method. Should I also loop in Camillo?\nThanks!",
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "129bfa83_9d164f4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-03-04T16:52:05Z",
      "side": 1,
      "message": "Hi Camillo, PTAL at include/*, thanks!",
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74ac45c9_fafbca5f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2021-03-04T17:45:04Z",
      "side": 1,
      "message": "Looks mostly ok to me. Thanks!",
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8cce484_0e6192cc",
        "filename": "include/v8-fast-api-calls.h",
        "patchSetId": 17
      },
      "lineNbr": 311,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2021-03-04T17:45:04Z",
      "side": 1,
      "message": "can we use the V8_DEPRECATED_SOON macro?",
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "823ee20e_7417352c",
        "filename": "include/v8-fast-api-calls.h",
        "patchSetId": 17
      },
      "lineNbr": 311,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-03-05T10:45:26Z",
      "side": 1,
      "message": "Added V8_DEPRECATED. Where can I read more about deprecation of certain API types or functions?",
      "parentUuid": "a8cce484_0e6192cc",
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d26bcce9_361364fb",
        "filename": "include/v8-fast-api-calls.h",
        "patchSetId": 17
      },
      "lineNbr": 311,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-03-05T14:38:41Z",
      "side": 1,
      "message": "https://v8.dev/docs/api might be the best place",
      "parentUuid": "823ee20e_7417352c",
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f7d8f15_b6e3092b",
        "filename": "include/v8-fast-api-calls.h",
        "patchSetId": 17
      },
      "lineNbr": 311,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-03-05T15:01:07Z",
      "side": 1,
      "message": "You should use V8_DEPRECATE_SOON which then gets promoted to V8_DEPRECATED after a version.",
      "parentUuid": "d26bcce9_361364fb",
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ff36c77_9bc945cd",
        "filename": "include/v8-fast-api-calls.h",
        "patchSetId": 17
      },
      "lineNbr": 311,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-03-05T15:37:00Z",
      "side": 1,
      "message": "Ack, thanks!",
      "parentUuid": "4f7d8f15_b6e3092b",
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1be527ef_41655ca4",
        "filename": "include/v8-fast-api-calls.h",
        "patchSetId": 17
      },
      "lineNbr": 311,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-03-15T14:11:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ff36c77_9bc945cd",
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0e4a9d9_e1781df6",
        "filename": "include/v8.h",
        "patchSetId": 17
      },
      "lineNbr": 6829,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2021-03-04T17:45:04Z",
      "side": 1,
      "message": "Can we mark this as experimental?",
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ba0d532_5d475ce2",
        "filename": "include/v8.h",
        "patchSetId": 17
      },
      "lineNbr": 6829,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-03-05T10:45:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f0e4a9d9_e1781df6",
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "841fcc67_37d91711",
        "filename": "include/v8.h",
        "patchSetId": 17
      },
      "lineNbr": 6830,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2021-03-04T17:45:04Z",
      "side": 1,
      "message": "Should we name this IsLeafTemplateForApiObject to make it more explicit? Don\u0027t feel too strongly though, up to you.",
      "range": {
        "startLine": 6830,
        "startChar": 7,
        "endLine": 6830,
        "endChar": 29
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c710b9df_8695172e",
        "filename": "include/v8.h",
        "patchSetId": 17
      },
      "lineNbr": 6830,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-03-05T10:45:26Z",
      "side": 1,
      "message": "Sg, thanks!",
      "parentUuid": "841fcc67_37d91711",
      "range": {
        "startLine": 6830,
        "startChar": 7,
        "endLine": 6830,
        "endChar": 29
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d4bb2a7_95f21e0b",
        "filename": "src/api/api.cc",
        "patchSetId": 17
      },
      "lineNbr": 6314,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2021-03-04T17:45:04Z",
      "side": 1,
      "message": "Will this never allocate a handle? Should we wrap this IsTemplateForApiObject function in a DisallowHandleAllocation scope?",
      "range": {
        "startLine": 6314,
        "startChar": 14,
        "endLine": 6314,
        "endChar": 31
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72f7bc91_0b0427e8",
        "filename": "src/api/api.cc",
        "patchSetId": 17
      },
      "lineNbr": 6314,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-03-05T10:29:50Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "4d4bb2a7_95f21e0b",
      "range": {
        "startLine": 6314,
        "startChar": 14,
        "endLine": 6314,
        "endChar": 31
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52fcea65_5c3c11f1",
        "filename": "src/api/api.cc",
        "patchSetId": 17
      },
      "lineNbr": 6314,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-03-05T10:45:26Z",
      "side": 1,
      "message": "This was my assumption, as the `this` is an object that is already in the JS heap. But it\u0027s good to ensure this, so I\u0027ll add DisallowHandleAllocation as you\u0027re suggesting.",
      "parentUuid": "4d4bb2a7_95f21e0b",
      "range": {
        "startLine": 6314,
        "startChar": 14,
        "endLine": 6314,
        "endChar": 31
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1a5744d_4ff4608f",
        "filename": "src/api/api.cc",
        "patchSetId": 17
      },
      "lineNbr": 6314,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-03-05T14:26:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "52fcea65_5c3c11f1",
      "range": {
        "startLine": 6314,
        "startChar": 14,
        "endLine": 6314,
        "endChar": 31
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd14464d_391b2378",
        "filename": "src/api/api.cc",
        "patchSetId": 17
      },
      "lineNbr": 6318,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-03-05T10:29:50Z",
      "side": 1,
      "message": "nit: return self-\u003eIsTemplateForApiObject(*heap_obj)",
      "range": {
        "startLine": 6315,
        "startChar": 1,
        "endLine": 6318,
        "endChar": 14
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9cb8d8f0_8a42d349",
        "filename": "src/api/api.cc",
        "patchSetId": 17
      },
      "lineNbr": 6318,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-03-05T14:26:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd14464d_391b2378",
      "range": {
        "startLine": 6315,
        "startChar": 1,
        "endLine": 6318,
        "endChar": 14
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62333ba6_0f1fc56a",
        "filename": "src/objects/objects.cc",
        "patchSetId": 17
      },
      "lineNbr": 1340,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-03-05T10:29:50Z",
      "side": 1,
      "message": "i::DisallowGarbageCollection no_gc;",
      "range": {
        "startLine": 1340,
        "startChar": 0,
        "endLine": 1340,
        "endChar": 44
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26fa0bc0_30c5e490",
        "filename": "src/objects/objects.cc",
        "patchSetId": 17
      },
      "lineNbr": 1340,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-03-05T14:26:57Z",
      "side": 1,
      "message": "Good point, thanks!",
      "parentUuid": "62333ba6_0f1fc56a",
      "range": {
        "startLine": 1340,
        "startChar": 0,
        "endLine": 1340,
        "endChar": 44
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81a074fe_eb5f32aa",
        "filename": "src/objects/templates.h",
        "patchSetId": 17
      },
      "lineNbr": 139,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-03-05T10:29:50Z",
      "side": 1,
      "message": "nit: ... const;",
      "range": {
        "startLine": 139,
        "startChar": 0,
        "endLine": 139,
        "endChar": 49
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2216b78b_97e4ebea",
        "filename": "src/objects/templates.h",
        "patchSetId": 17
      },
      "lineNbr": 139,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-03-05T14:26:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "81a074fe_eb5f32aa",
      "range": {
        "startLine": 139,
        "startChar": 0,
        "endLine": 139,
        "endChar": 49
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d4ab1ed_c70d8feb",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 17
      },
      "lineNbr": 20757,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-03-05T10:29:50Z",
      "side": 1,
      "message": "I guess we could just keep everything in C++ here?\n\n  Local\u003cObject\u003e instance \u003d child_templ-\u003eGetFunction(context.local()).ToLocalChecked()\n  .NewInstance(context.local()).ToLocalChecked();",
      "range": {
        "startLine": 20754,
        "startChar": 0,
        "endLine": 20757,
        "endChar": 23
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b156ad6c_8b621822",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 17
      },
      "lineNbr": 20757,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-03-05T14:26:57Z",
      "side": 1,
      "message": "Nice simplification, thanks!",
      "parentUuid": "0d4ab1ed_c70d8feb",
      "range": {
        "startLine": 20754,
        "startChar": 0,
        "endLine": 20757,
        "endChar": 23
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3869fd31_b5ca615c",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 17
      },
      "lineNbr": 27863,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2021-03-04T17:45:04Z",
      "side": 1,
      "message": "Should we add mjsunit tests as well to get fuzzer coverage by installing fast api bindings in d8?",
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3ab258b_6c1fbb83",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 17
      },
      "lineNbr": 27863,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-03-05T10:29:50Z",
      "side": 1,
      "message": "+1 on adding mjsunit tests for extended coverage",
      "parentUuid": "3869fd31_b5ca615c",
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a099430f_bf65de0a",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 17
      },
      "lineNbr": 27863,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-03-05T10:45:26Z",
      "side": 1,
      "message": "That\u0027s a very good idea! For this we\u0027ll need some kind of dummy bindings, which is an idea we\u0027ve already discussed, but didn\u0027t get to implementing it yet. I could add some bindings to d8 as part of this CL (or even better - as a prerequisite).",
      "parentUuid": "3869fd31_b5ca615c",
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "304a3347_b203b300",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 17
      },
      "lineNbr": 27886,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-03-05T10:29:50Z",
      "side": 1,
      "message": "unused?",
      "range": {
        "startLine": 27886,
        "startChar": 22,
        "endLine": 27886,
        "endChar": 27
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b6157c2_66c6ab53",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 17
      },
      "lineNbr": 27886,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-03-05T14:26:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "304a3347_b203b300",
      "range": {
        "startLine": 27886,
        "startChar": 22,
        "endLine": 27886,
        "endChar": 27
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33affba3_7e441317",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 17
      },
      "lineNbr": 27887,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-03-05T10:29:50Z",
      "side": 1,
      "message": "nit: checker.Reset() or something similar maybe?",
      "range": {
        "startLine": 27887,
        "startChar": 10,
        "endLine": 27887,
        "endChar": 48
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bdc73eb3_38f18cca",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 17
      },
      "lineNbr": 27887,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-03-05T14:26:57Z",
      "side": 1,
      "message": "Good idea, thanks!",
      "parentUuid": "33affba3_7e441317",
      "range": {
        "startLine": 27887,
        "startChar": 10,
        "endLine": 27887,
        "endChar": 48
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab5df2c7_a54834f5",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 17
      },
      "lineNbr": 27893,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-03-05T10:29:50Z",
      "side": 1,
      "message": "would it make sense to add a second call before *and* after func is optimized with an incompatible receiver and check that we actually threw?\n\n- non-api Object\n- incompatible API object (separate leaf)\n- subclass \n\nMaybe this is easier to do in mjsunit (like Sathya suggested)",
      "range": {
        "startLine": 27891,
        "startChar": 1,
        "endLine": 27893,
        "endChar": 16
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ce74461_f96ef0ff",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 17
      },
      "lineNbr": 27893,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-03-05T14:26:57Z",
      "side": 1,
      "message": "All good ideas. Will add the machinery and the tests as part of this CL, otherwise it\u0027s not really safe to submit it with the initial limited tests.",
      "parentUuid": "ab5df2c7_a54834f5",
      "range": {
        "startLine": 27891,
        "startChar": 1,
        "endLine": 27893,
        "endChar": 16
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cad726e7_bd50dae7",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 17
      },
      "lineNbr": 27894,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-03-05T10:29:50Z",
      "side": 1,
      "message": "We never throw here, right?",
      "range": {
        "startLine": 27894,
        "startChar": 7,
        "endLine": 27894,
        "endChar": 28
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7002250_f76b441a",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 17
      },
      "lineNbr": 27894,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-03-05T14:26:57Z",
      "side": 1,
      "message": "True, removed the TryCatch and the CompileRun return value.",
      "parentUuid": "cad726e7_bd50dae7",
      "range": {
        "startLine": 27894,
        "startChar": 7,
        "endLine": 27894,
        "endChar": 28
      },
      "revId": "6b06b32c59b202107b8e6b952fee8d71936ac27d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}