{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c500090a_c4a1c436",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1440073
      },
      "writtenOn": "2024-06-06T10:23:17Z",
      "side": 1,
      "message": "Thanks for the comments!\nPatchset 9 vs 10 are the changes based on your comments. \nOtherwise, since Patchset 6 (your review) I just fixed the element segment decoding and added a test for it.\nIn the next patchsets I continue adjusting the table instructions.",
      "revId": "3fa471d5796127726de612d512d846a5cad88832",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ff66aed_811482fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1440073
      },
      "writtenOn": "2024-06-07T19:00:25Z",
      "side": 1,
      "message": "All instructions apart from table.init and call_indirect (+ reaturn_call_indirect) are implemented and tested for every compiler.\n`Table.copy` fails on 32bit platforms on Liftoff, because there are not enough registers ðŸ˜•.\nEach patchset has a descriptive name: it says which instruction is added.",
      "parentUuid": "c500090a_c4a1c436",
      "revId": "3fa471d5796127726de612d512d846a5cad88832",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec33e812_af1b8281",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1440073
      },
      "writtenOn": "2024-06-12T11:08:31Z",
      "side": 1,
      "message": "resolving",
      "parentUuid": "4ff66aed_811482fc",
      "revId": "3fa471d5796127726de612d512d846a5cad88832",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}