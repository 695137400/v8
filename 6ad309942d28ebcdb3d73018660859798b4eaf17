{
  "comments": [
    {
      "key": {
        "uuid": "f0b7fa8f_923d0222",
        "filename": "src/heap/heap.cc",
        "patchSetId": 17
      },
      "lineNbr": 5704,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2018-03-27T12:05:37Z",
      "side": 1,
      "message": "I realize this is just a PoC, however you probably shouldn\u0027t do this scope checking here, but instead have some kind of scoped object that disables inline allocations (and does the counter checking internally, calling through to Enable / Disable allocations when necessary.",
      "range": {
        "startLine": 5704,
        "startChar": 2,
        "endLine": 5704,
        "endChar": 32
      },
      "revId": "6ad309942d28ebcdb3d73018660859798b4eaf17",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58293908_88e53cdb",
        "filename": "src/heap/heap.cc",
        "patchSetId": 17
      },
      "lineNbr": 5704,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-03-29T10:58:07Z",
      "side": 1,
      "message": "This inline allocation API works OK for a single user, but is fragile for multiple users. Because they have to coordinate enabling/disabling.\n\nI think it would be cleaner if heap would not expose the inline allocation state.\nInstead the heap should provide high-level API:\n\nHeap::AddAllocationTracker(AllocationTracker*);\nHeap::RemoveAllocationTracker(AllocationTracker*);\n\nIf there is at least one allocation tracker, then the heap disables inline allocation.\nThe heap calls AllocationTracker::OnMoveEvent, AllocationTracker::OnAllocationEvent for each registered allocation.\n\nWDYT?",
      "parentUuid": "f0b7fa8f_923d0222",
      "range": {
        "startLine": 5704,
        "startChar": 2,
        "endLine": 5704,
        "endChar": 32
      },
      "revId": "6ad309942d28ebcdb3d73018660859798b4eaf17",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e23729d_799d8289",
        "filename": "src/heap/heap.cc",
        "patchSetId": 17
      },
      "lineNbr": 5704,
      "author": {
        "id": 1125920
      },
      "writtenOn": "2018-03-29T21:51:33Z",
      "side": 1,
      "message": "I introduced AllocationTracker. The problem is that heap_profiler by default needs only move event and enabled inline allocations, when it tracks allocations it needs allocation, move and update size events, and disabled inline allocations.\nDebugger requires allocation and moves events with disabled inline allocations. So I need to have all three event as part of tracker and additionally call MoveEvent on heap profiler when it is needed if I would like to use existing of tracker as trigger of inline allocations.\nPlease take a look!",
      "parentUuid": "58293908_88e53cdb",
      "range": {
        "startLine": 5704,
        "startChar": 2,
        "endLine": 5704,
        "endChar": 32
      },
      "revId": "6ad309942d28ebcdb3d73018660859798b4eaf17",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}