{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "53c3c751_bf30448e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1559107
      },
      "writtenOn": "2023-05-30T12:32:04Z",
      "side": 1,
      "message": "initial comments",
      "revId": "723121b46b78bd2c87513e7d3e2f9b403afc74e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5ed4c68_1297b0ee",
        "filename": "src/snapshot/read-only-serializer-deserializer.h",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1559107
      },
      "writtenOn": "2023-05-30T12:32:04Z",
      "side": 1,
      "message": "should we add a marker for this to ease debugability?",
      "revId": "723121b46b78bd2c87513e7d3e2f9b403afc74e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbfe46a4_e5a93462",
        "filename": "src/snapshot/read-only-serializer-deserializer.h",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2023-05-30T12:52:47Z",
      "side": 1,
      "message": "Sure I can add one.",
      "parentUuid": "f5ed4c68_1297b0ee",
      "revId": "723121b46b78bd2c87513e7d3e2f9b403afc74e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e08474e0_e0210a22",
        "filename": "src/snapshot/read-only-serializer-deserializer.h",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2023-05-31T06:24:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dbfe46a4_e5a93462",
      "revId": "723121b46b78bd2c87513e7d3e2f9b403afc74e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb05ff85_dd23359a",
        "filename": "src/snapshot/read-only-serializer.cc",
        "patchSetId": 6
      },
      "lineNbr": 69,
      "author": {
        "id": 1559107
      },
      "writtenOn": "2023-05-30T12:32:04Z",
      "side": 1,
      "message": "imho for static root builds this could just be the compressed address as we preserve their relative offset to the cage base.",
      "revId": "723121b46b78bd2c87513e7d3e2f9b403afc74e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f23bd55_a2248325",
        "filename": "src/snapshot/read-only-serializer.cc",
        "patchSetId": 6
      },
      "lineNbr": 69,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2023-05-30T12:52:47Z",
      "side": 1,
      "message": "Yeah I\u0027ve preserved that behavior. EncodeTaggedSlots is only called when !V8_STATIC_ROOTS.\n\n(SerializeReadOnlyRootsTable does encode - keeping them unencoded there doesn\u0027t help much because the table stores full pointers.)",
      "parentUuid": "eb05ff85_dd23359a",
      "revId": "723121b46b78bd2c87513e7d3e2f9b403afc74e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "344fb973_552a9315",
        "filename": "src/snapshot/read-only-serializer.cc",
        "patchSetId": 6
      },
      "lineNbr": 69,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2023-05-31T06:24:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f23bd55_a2248325",
      "revId": "723121b46b78bd2c87513e7d3e2f9b403afc74e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43f7702a_e382c3ee",
        "filename": "src/snapshot/read-only-serializer.cc",
        "patchSetId": 6
      },
      "lineNbr": 219,
      "author": {
        "id": 1559107
      },
      "writtenOn": "2023-05-30T12:32:04Z",
      "side": 1,
      "message": "I think this is unnecessary for static roots builds",
      "revId": "723121b46b78bd2c87513e7d3e2f9b403afc74e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8a9e58a_0bd0a18e",
        "filename": "src/snapshot/read-only-serializer.cc",
        "patchSetId": 6
      },
      "lineNbr": 219,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2023-05-30T12:52:47Z",
      "side": 1,
      "message": "If the table is there it should be initialized imo. Is it completely unused in SR builds? If yes, let\u0027s remove it (in a separate CL).",
      "parentUuid": "43f7702a_e382c3ee",
      "revId": "723121b46b78bd2c87513e7d3e2f9b403afc74e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fead7371_cb5ca677",
        "filename": "src/snapshot/read-only-serializer.cc",
        "patchSetId": 6
      },
      "lineNbr": 219,
      "author": {
        "id": 1559107
      },
      "writtenOn": "2023-05-30T13:00:18Z",
      "side": 1,
      "message": "it\u0027s used. what I meant is you can restore it from the static roots without serializing it.",
      "parentUuid": "c8a9e58a_0bd0a18e",
      "revId": "723121b46b78bd2c87513e7d3e2f9b403afc74e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd1b1b67_f9bdc1e3",
        "filename": "src/snapshot/read-only-serializer.cc",
        "patchSetId": 6
      },
      "lineNbr": 219,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2023-05-30T13:03:40Z",
      "side": 1,
      "message": "I see. I went this way for the uniformity (https://chromium-review.googlesource.com/c/v8/v8/+/4543306/6/src/snapshot/read-only-deserializer.cc#109) but don\u0027t have a super strong opinion. Changing to restore-from-static-roots is okay for me as well. LMK.",
      "parentUuid": "fead7371_cb5ca677",
      "revId": "723121b46b78bd2c87513e7d3e2f9b403afc74e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "032ce16d_9d27d2b0",
        "filename": "src/snapshot/read-only-serializer.cc",
        "patchSetId": 6
      },
      "lineNbr": 219,
      "author": {
        "id": 1559107
      },
      "writtenOn": "2023-05-30T20:48:29Z",
      "side": 1,
      "message": "well, it is probably faster and saves on serialized data...",
      "parentUuid": "dd1b1b67_f9bdc1e3",
      "revId": "723121b46b78bd2c87513e7d3e2f9b403afc74e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d70b1ed7_ecbedd1d",
        "filename": "src/snapshot/read-only-serializer.cc",
        "patchSetId": 6
      },
      "lineNbr": 219,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2023-05-31T06:24:54Z",
      "side": 1,
      "message": ".. and it\u0027s more code complexity, hence a higher risk of bugs and misunderstandings. IMO a tradeoff situation with good arguments in both directions. But like I say I don\u0027t have a super strong opinion here so I\u0027m happy to go with the InitFromStaticRootsTable way. Done in the latest PS.",
      "parentUuid": "032ce16d_9d27d2b0",
      "revId": "723121b46b78bd2c87513e7d3e2f9b403afc74e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "467e688b_3b50d531",
        "filename": "src/snapshot/read-only-serializer.cc",
        "patchSetId": 6
      },
      "lineNbr": 278,
      "author": {
        "id": 1559107
      },
      "writtenOn": "2023-05-30T12:32:04Z",
      "side": 1,
      "message": "ðŸ¤£",
      "revId": "723121b46b78bd2c87513e7d3e2f9b403afc74e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}