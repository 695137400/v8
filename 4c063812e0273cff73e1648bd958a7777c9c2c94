{
  "comments": [
    {
      "key": {
        "uuid": "ac5a0198_b5f81629",
        "filename": "src/builtins/builtins-async-generator-gen.cc",
        "patchSetId": 5
      },
      "lineNbr": 342,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2017-07-25T13:22:10Z",
      "side": 1,
      "message": "I\u0027d rather avoid the duplication of Code::is_interpreter_trampoline_builtin() logic here. Another option would be to replace this entire helper function by call into C (using CallCFunction), wdyt? There we could ideally reuse code we already have,",
      "revId": "4c063812e0273cff73e1648bd958a7777c9c2c94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e53ce82_214f154a",
        "filename": "src/builtins/builtins-async-generator-gen.cc",
        "patchSetId": 5
      },
      "lineNbr": 342,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2017-07-25T15:39:34Z",
      "side": 1,
      "message": "I\u0027ll give it a try",
      "parentUuid": "ac5a0198_b5f81629",
      "revId": "4c063812e0273cff73e1648bd958a7777c9c2c94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70cef19f_13e09de9",
        "filename": "src/builtins/builtins-async-generator-gen.cc",
        "patchSetId": 5
      },
      "lineNbr": 688,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2017-07-25T13:22:10Z",
      "side": 1,
      "message": "IMO using these variables just to avoid inlining Await twice is a bit awkward. WDYT about making a TFS Await builtin and calling that with the relevant indices after branching here:\n\nBranch(is_closed, a, b);\n\nBIND(\u0026a);\nCallBuiltin(Await, ..., CLOSED_RESOLVE, CLOSED_REJECT, ...)\n\nBIND(\u0026b);\nCallBuiltin(Await, ..., RETURN_RESOLVE, AWAIT_REJECT, ...)\n\nBut this is also fine in another CL.",
      "revId": "4c063812e0273cff73e1648bd958a7777c9c2c94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5bce812_29491554",
        "filename": "src/builtins/builtins-async-generator-gen.cc",
        "patchSetId": 5
      },
      "lineNbr": 688,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2017-07-25T15:39:34Z",
      "side": 1,
      "message": "I\u0027ve discussed this with Ross, I proposed doing it in a followup to these 2 (to try to get some savings in snapshot size from some duplicated code).",
      "parentUuid": "70cef19f_13e09de9",
      "revId": "4c063812e0273cff73e1648bd958a7777c9c2c94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67d0f62c_1ff8a85e",
        "filename": "src/builtins/builtins-async-generator-gen.cc",
        "patchSetId": 5
      },
      "lineNbr": 695,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2017-07-25T13:22:10Z",
      "side": 1,
      "message": "Nit: IsGeneratorStateClosed. Can we a assert a specific state after this Goto?",
      "revId": "4c063812e0273cff73e1648bd958a7777c9c2c94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83e670e0_1b29367b",
        "filename": "src/builtins/builtins-async-generator-gen.cc",
        "patchSetId": 5
      },
      "lineNbr": 695,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2017-07-25T15:39:34Z",
      "side": 1,
      "message": "Done.\n\nAnd, not exactly. In the v8 implementation, `state` (when suspended) is a jump table index to jump to on resume, so it\u0027s unknown which state it refers to. We could assert that `state \u003e\u003d 0`, I suppose.",
      "parentUuid": "67d0f62c_1ff8a85e",
      "revId": "4c063812e0273cff73e1648bd958a7777c9c2c94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac3a0878_a3f915f1",
        "filename": "src/builtins/builtins-async-generator-gen.cc",
        "patchSetId": 5
      },
      "lineNbr": 698,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2017-07-25T13:22:10Z",
      "side": 1,
      "message": "Nit: I\u0027m a bit confused that on_resolve is RETURN_RESOLVE while on_reject is AWAIT_REJECT. Could AWAIT_REJECT be renamed to something more intuitive?",
      "revId": "4c063812e0273cff73e1648bd958a7777c9c2c94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb06d1b3_2c9b5e13",
        "filename": "src/builtins/builtins-async-generator-gen.cc",
        "patchSetId": 5
      },
      "lineNbr": 698,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2017-07-25T15:39:34Z",
      "side": 1,
      "message": "there are a few cases for resolve and reject handlners:\n\n1) on resolve, resume the generator with resume mode \"next\"\n2) on resolve, resume the generator with resume mode \"return\"\n3) on resolve, perform AsyncGeneratorResolve(generator, value, true)\n\n1) on reject, resume the generator with resume mode \"throw\"\n2) on reject, perform AsyncGeneratorReject(generator).\n\nSo we could call these \"AsyncGeneratorResumeWithNextClosure\", \"AsyncGeneratorResumeWithReturnClosure\", \"AsyncGeneratorResolveClosure\", \"AsyncGeneratorResumeWithThrowClosure\", and \"AsyncGeneratorRejectClosure\", or some variation on those.\n\nDo those seem better to you? If we want to rename these, I\u0027d prefer not to do it in these 2 patches (except for the portions which these 2 patches touch).",
      "parentUuid": "ac3a0878_a3f915f1",
      "revId": "4c063812e0273cff73e1648bd958a7777c9c2c94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c2d05a1_2ddaa7e1",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 5
      },
      "lineNbr": 2230,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2017-07-25T13:22:10Z",
      "side": 1,
      "message": "Nit: Please keep the named variables as documentation of what the args contain.",
      "revId": "4c063812e0273cff73e1648bd958a7777c9c2c94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "654e5893_fca879b2",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 5
      },
      "lineNbr": 2230,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2017-07-25T15:39:34Z",
      "side": 1,
      "message": "Ross had asked me to not do that in a previous patch in this chain, I\u0027m getting mixed messages ðŸ˜› I\u0027m Â happy to do it either way, or by just using comments to document the parameters --- but we should figure out a consistent way we prefer to do this so that everyone is on the same page.",
      "parentUuid": "4c2d05a1_2ddaa7e1",
      "revId": "4c063812e0273cff73e1648bd958a7777c9c2c94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a917425_314c45a2",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 5
      },
      "lineNbr": 2230,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2017-07-25T18:00:38Z",
      "side": 1,
      "message": "Ah :) I didn\u0027t see that. In that case, defering to Ross as interpreter/ owner.",
      "parentUuid": "654e5893_fca879b2",
      "revId": "4c063812e0273cff73e1648bd958a7777c9c2c94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}