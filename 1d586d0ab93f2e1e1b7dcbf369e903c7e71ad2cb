{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c46ad804_98f8e046",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1349169
      },
      "writtenOn": "2022-08-31T06:02:27Z",
      "side": 1,
      "message": "Hi Tobias, Could you please help take a look at this change? Thanks!",
      "revId": "1d586d0ab93f2e1e1b7dcbf369e903c7e71ad2cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef9c2ace_1564e7a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1349169
      },
      "writtenOn": "2022-09-20T01:35:01Z",
      "side": 1,
      "message": "Ping...",
      "revId": "1d586d0ab93f2e1e1b7dcbf369e903c7e71ad2cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7dfed7b2_1418c38e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1349169
      },
      "writtenOn": "2022-09-23T03:11:57Z",
      "side": 1,
      "message": "Hi Jakob, Would you please help take a look at this change? This change may help improve the performance of a micro-bench for ~73% and WebXPRT4/StockOptionPricing for ~14%. Thanks!",
      "revId": "1d586d0ab93f2e1e1b7dcbf369e903c7e71ad2cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "715dca62_7b4160d6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-26T06:37:27Z",
      "side": 1,
      "message": "My main comment so far is that IMO GraphAssembler should be used to write the reduction, waiting for this to be decided to review the rest. Tobias PTAL.",
      "revId": "1d586d0ab93f2e1e1b7dcbf369e903c7e71ad2cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "091cdea4_09bea47c",
        "filename": "src/compiler/js-call-reducer.cc",
        "patchSetId": 2
      },
      "lineNbr": 5069,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-26T06:37:27Z",
      "side": 1,
      "message": "Let\u0027s not repeat this verbose bailout path 4 times.. instead, I\u0027d suggest something like\n\n```\n  base::Optional\u003cReduction\u003e maybe_result \u003d TryReduceMathMinMax(...);\n  if (maybe_result.has_value()) return maybe_result.value();\n  \n  ...\n```",
      "revId": "1d586d0ab93f2e1e1b7dcbf369e903c7e71ad2cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98c31324_08bb7fdd",
        "filename": "src/compiler/js-call-reducer.cc",
        "patchSetId": 2
      },
      "lineNbr": 5075,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-26T06:37:27Z",
      "side": 1,
      "message": "A comment would be useful for this big new conditional block.",
      "revId": "1d586d0ab93f2e1e1b7dcbf369e903c7e71ad2cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd003111_505d1889",
        "filename": "src/compiler/js-call-reducer.cc",
        "patchSetId": 2
      },
      "lineNbr": 5079,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-26T06:37:27Z",
      "side": 1,
      "message": "Why this condition?",
      "range": {
        "startLine": 5079,
        "startChar": 41,
        "endLine": 5079,
        "endChar": 62
      },
      "revId": "1d586d0ab93f2e1e1b7dcbf369e903c7e71ad2cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54cac21e_50f8b53a",
        "filename": "src/compiler/js-call-reducer.cc",
        "patchSetId": 2
      },
      "lineNbr": 5091,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-26T06:37:27Z",
      "side": 1,
      "message": "Merge with the next line",
      "revId": "1d586d0ab93f2e1e1b7dcbf369e903c7e71ad2cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "043db707_73bde522",
        "filename": "src/compiler/js-call-reducer.cc",
        "patchSetId": 2
      },
      "lineNbr": 5095,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-26T06:37:27Z",
      "side": 1,
      "message": "Do you need this matcher? You already have a ref for feedback_target.",
      "revId": "1d586d0ab93f2e1e1b7dcbf369e903c7e71ad2cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72be6485_2572e409",
        "filename": "src/compiler/js-call-reducer.cc",
        "patchSetId": 2
      },
      "lineNbr": 5109,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-26T06:37:27Z",
      "side": 1,
      "message": "IMO new code should use the GraphAssembler unless there\u0027s a good reason not to. Leaving this up to Tobias though. Also below.",
      "revId": "1d586d0ab93f2e1e1b7dcbf369e903c7e71ad2cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "744b3c6d_1a93996c",
        "filename": "src/compiler/js-call-reducer.cc",
        "patchSetId": 2
      },
      "lineNbr": 5109,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2022-09-26T10:24:51Z",
      "side": 1,
      "message": "I agree, new code should use the GraphAssembler. Manual construction of the effect and control chains has proven to be error-prone and hard to maintain.",
      "parentUuid": "72be6485_2572e409",
      "revId": "1d586d0ab93f2e1e1b7dcbf369e903c7e71ad2cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf0ff830_9e9ddbaa",
        "filename": "src/compiler/js-call-reducer.cc",
        "patchSetId": 2
      },
      "lineNbr": 8449,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-26T06:37:27Z",
      "side": 1,
      "message": "You could pass in the builtin id (or a new kMax/kMin enum) instead of the bool.",
      "revId": "1d586d0ab93f2e1e1b7dcbf369e903c7e71ad2cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6839f246_b9aa7e00",
        "filename": "src/compiler/js-call-reducer.cc",
        "patchSetId": 2
      },
      "lineNbr": 8452,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-26T06:37:27Z",
      "side": 1,
      "message": "This could be a DCHECK given you check it in the caller.",
      "revId": "1d586d0ab93f2e1e1b7dcbf369e903c7e71ad2cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81aa506e_dee1dc6a",
        "filename": "src/compiler/js-call-reducer.cc",
        "patchSetId": 2
      },
      "lineNbr": 8459,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-26T06:37:27Z",
      "side": 1,
      "message": "n.effect(), n.control()",
      "revId": "1d586d0ab93f2e1e1b7dcbf369e903c7e71ad2cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d25b9a4_39fb6c0d",
        "filename": "src/compiler/opcodes.h",
        "patchSetId": 2
      },
      "lineNbr": 501,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-09-26T06:37:27Z",
      "side": 1,
      "message": "This list seems to be alpha-sorted.",
      "revId": "1d586d0ab93f2e1e1b7dcbf369e903c7e71ad2cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}