{
  "comments": [
    {
      "key": {
        "uuid": "6a7f07f3_370c7723",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 25
      },
      "lineNbr": 0,
      "author": {
        "id": 1118564
      },
      "writtenOn": "2020-09-30T20:49:50Z",
      "side": 1,
      "message": "Thanks Georg for the excellent comments.\nI\u0027ve followed all suggestions in this case.\nAll the best,\n--Michael\n",
      "revId": "6a837e52a2cc07ac89e0a560d2192b380b41aad6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4209ae49_eee2442a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 25
      },
      "lineNbr": 0,
      "author": {
        "id": 1118564
      },
      "writtenOn": "2020-10-01T17:10:09Z",
      "side": 1,
      "message": "Making a reply to one comment because the implications are large and I\u0027m curious to discuss.\nMore to follow, thanks!",
      "revId": "6a837e52a2cc07ac89e0a560d2192b380b41aad6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "279d741b_329f9432",
        "filename": "src/objects/feedback-vector-inl.h",
        "patchSetId": 25
      },
      "lineNbr": 152,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-10-01T15:24:05Z",
      "side": 1,
      "message": "Since we are in the inl-header, it\u0027s probably cleaner to hide this in the FeedbackVector class.",
      "revId": "6a837e52a2cc07ac89e0a560d2192b380b41aad6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "200077a8_be241b9f",
        "filename": "src/objects/feedback-vector-inl.h",
        "patchSetId": 25
      },
      "lineNbr": 152,
      "author": {
        "id": 1118564
      },
      "writtenOn": "2020-10-02T05:51:19Z",
      "side": 1,
      "message": "Right on, done.",
      "parentUuid": "279d741b_329f9432",
      "revId": "6a837e52a2cc07ac89e0a560d2192b380b41aad6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a3428d8_b7fccc9f",
        "filename": "src/objects/feedback-vector-inl.h",
        "patchSetId": 25
      },
      "lineNbr": 380,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-10-01T15:24:05Z",
      "side": 1,
      "message": "I would have expected the FeedbackNexus-NexusConfig interaction to work in one of two ways:\n1) FeedbackNexus checks config (mode) to decide what to do and how to do it.\n2) FeedbackNexus does reads/writes/... by calling the respective method on NexusConfig, and it\u0027s up to those methods to decide how to do it.\n\nIt seems that in your CL we have something in-between. Was that a conscious decision?",
      "revId": "6a837e52a2cc07ac89e0a560d2192b380b41aad6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19e8d93a_8c2f09e8",
        "filename": "src/objects/feedback-vector-inl.h",
        "patchSetId": 25
      },
      "lineNbr": 380,
      "author": {
        "id": 1118564
      },
      "writtenOn": "2020-10-01T17:10:09Z",
      "side": 1,
      "message": "I wanted to push as much as possible into the NexusConfig regarding \"how to do it.\" However, the cache seemed better positioned in the FeedbackNexus, because it\u0027s a cache of the values of a particular slot(s) in the vector. Whereas if this caching behavior lived in the NexusConfig there are many questions regarding lifetime of the NexusConfig (very long lived, like in the isolate, or maybe new ones are created each time we kick off a compilation thread for the Background case), as well as what to cache and for how long (different vectors, different slots).\n\nSo, I do admit that I answered this question rather organically (ie, less consciously than I might have), but we have the NexusConfig to express:\n\na) opinions about capabilities (can_write(), etc.) which the FeedbackNexus can use to disallow certain methods,\nb) complete control over read/write of vector slots (thus hiding the locking),\nc) complete control over handle creation\n\nBut the cache lives in the FeedbackNexus, which takes it\u0027s cue from the Configuration.",
      "parentUuid": "2a3428d8_b7fccc9f",
      "revId": "6a837e52a2cc07ac89e0a560d2192b380b41aad6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f05e8281_25c011ab",
        "filename": "src/objects/feedback-vector.cc",
        "patchSetId": 25
      },
      "lineNbr": 516,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-10-01T15:24:05Z",
      "side": 1,
      "message": "This shouldn\u0027t be needed, HeapObjectReference is a subclass of MaybeObject.",
      "range": {
        "startLine": 516,
        "startChar": 10,
        "endLine": 516,
        "endChar": 34
      },
      "revId": "6a837e52a2cc07ac89e0a560d2192b380b41aad6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e21ee349_c950917b",
        "filename": "src/objects/feedback-vector.cc",
        "patchSetId": 25
      },
      "lineNbr": 516,
      "author": {
        "id": 1118564
      },
      "writtenOn": "2020-10-02T05:51:19Z",
      "side": 1,
      "message": "Thanks, done.",
      "parentUuid": "f05e8281_25c011ab",
      "range": {
        "startLine": 516,
        "startChar": 10,
        "endLine": 516,
        "endChar": 34
      },
      "revId": "6a837e52a2cc07ac89e0a560d2192b380b41aad6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6c04ade_eddb2cfb",
        "filename": "src/objects/feedback-vector.h",
        "patchSetId": 25
      },
      "lineNbr": 660,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-10-01T15:24:05Z",
      "side": 1,
      "message": "I think I haven\u0027t understood this part yet. Is this config always the main thread (\u003d writer) config? Why is it on the isolate?",
      "revId": "6a837e52a2cc07ac89e0a560d2192b380b41aad6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "771100df_94160280",
        "filename": "src/objects/feedback-vector.h",
        "patchSetId": 25
      },
      "lineNbr": 660,
      "author": {
        "id": 1118564
      },
      "writtenOn": "2020-10-02T05:51:19Z",
      "side": 1,
      "message": "There was a suggestion from Nico that we wanted to give the JSHeapBroker control over the mode in which it\u0027s usages of the FeedbackNexus could be easily set up for main thread or background. In an early version of the CL, I had awkward logic to instantiate the FeedbackNexus correctly, either with a LocalHeap or only the isolate retrieved from the vector. Nico suggested the elegant construct for those many usages:\n\n  FeedbackNexus nexus(vector, slot, nexus_config());\n\nThis way, all those usages don\u0027t have to be touched for a change in mode from MainThread to BackgroundThread.\n\nThe idea of having the default config pre-created in the isolate came downwind of that idea. I could eliminate that with the following idea:\n\n1. FeedbackNexus no longer contains a pointer to a NexusConfig, but instead a member.\n2. This member is initialized by copy constructor from one passed in (like the line above), or, if none is specified, by NexusConfig::FromMainThread(vector-\u003eGetIsolate()).\n\nI went ahead and did that in the CL, I hope that is a useful adjustment.",
      "parentUuid": "e6c04ade_eddb2cfb",
      "revId": "6a837e52a2cc07ac89e0a560d2192b380b41aad6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}