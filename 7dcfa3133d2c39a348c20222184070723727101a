{
  "comments": [
    {
      "key": {
        "uuid": "b96c3c4b_c36d2195",
        "filename": "src/compiler/bytecode-graph-builder.cc",
        "patchSetId": 14
      },
      "lineNbr": 1722,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2017-06-01T13:20:27Z",
      "side": 1,
      "message": "suggestion: On a conceptual level once could think of the case using deopt with a protector cell as an optimization (i.e. it represents an early lowering to the simplified operator level). The fallback case is the full implementation. Could we move this case into \"TryBuildFoo\" family to make this clear? WDYT? We would have a TryBuildDeoptOnHole() that returns {nullptr} if the early lowering doesn\u0027t apply. I am fine with having the early lowering directly in this file and not in a separate file like we did for {JSTypeHintLowering}.",
      "range": {
        "startLine": 1722,
        "startChar": 2,
        "endLine": 1722,
        "endChar": 57
      },
      "revId": "7dcfa3133d2c39a348c20222184070723727101a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83949806_5e7ce046",
        "filename": "src/compiler/bytecode-graph-builder.h",
        "patchSetId": 14
      },
      "lineNbr": 8,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2017-06-01T13:20:27Z",
      "side": 1,
      "message": "nit: Could we forward declare \"CompilationDependencies\" instead?",
      "range": {
        "startLine": 8,
        "startChar": 14,
        "endLine": 8,
        "endChar": 38
      },
      "revId": "7dcfa3133d2c39a348c20222184070723727101a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18df7b12_a0614f88",
        "filename": "src/runtime/runtime.h",
        "patchSetId": 14
      },
      "lineNbr": 342,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2017-06-01T13:27:13Z",
      "side": 1,
      "message": "nit: s/IfHole/OnHole/ ... otherwise it sounds like it is a conditional throw IMHO.",
      "range": {
        "startLine": 342,
        "startChar": 4,
        "endLine": 342,
        "endChar": 29
      },
      "revId": "7dcfa3133d2c39a348c20222184070723727101a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}