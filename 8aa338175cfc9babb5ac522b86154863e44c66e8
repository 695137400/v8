{
  "comments": [
    {
      "key": {
        "uuid": "fdde2cbc_27812e4d",
        "filename": "src/ic/accessor-assembler.cc",
        "patchSetId": 2
      },
      "lineNbr": 3460,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2018-08-21T21:34:14Z",
      "side": 1,
      "message": "this probably doesn’t 100% follow the spec, I’m pretty sure this will call accessors installed on Object.prototype",
      "revId": "8aa338175cfc9babb5ac522b86154863e44c66e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c18f7414_76724b25",
        "filename": "src/ic/accessor-assembler.cc",
        "patchSetId": 2
      },
      "lineNbr": 3460,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2018-08-22T11:33:12Z",
      "side": 1,
      "message": "unfortunately yes, Object.assign() does not work for CopyDataProperties... I guess sharing a stub isn\u0027t in the cards.",
      "parentUuid": "fdde2cbc_27812e4d",
      "revId": "8aa338175cfc9babb5ac522b86154863e44c66e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b42ffa58_d65eeed1",
        "filename": "src/ic/accessor-assembler.cc",
        "patchSetId": 2
      },
      "lineNbr": 3460,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2018-08-22T15:30:31Z",
      "side": 1,
      "message": "Yes, that\u0027s not what I meant initially. Maybe one approach here would be to have a couple of checks whether the map fulfills the requirements for the monomorphic handler case? And if so use that?",
      "parentUuid": "c18f7414_76724b25",
      "revId": "8aa338175cfc9babb5ac522b86154863e44c66e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2480a05a_b014f91d",
        "filename": "src/ic/accessor-assembler.cc",
        "patchSetId": 2
      },
      "lineNbr": 3460,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2018-08-22T16:06:26Z",
      "side": 1,
      "message": "what I did to work around this was just hack KeyedStoreGenericAssembler to support this case (basically by adding an enum class tag to indicate that it should use a \"store-in-literal\" behaviour, meaning \"don\u0027t check the prototype chain for accessors\" and \"ignore accessors on the receiver\" --- which is maybe a bit more complicated than that idea. Any preference there?",
      "parentUuid": "b42ffa58_d65eeed1",
      "revId": "8aa338175cfc9babb5ac522b86154863e44c66e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}