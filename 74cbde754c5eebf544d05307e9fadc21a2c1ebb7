{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7cb8efca_d6c2a3be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2021-08-13T07:57:25Z",
      "side": 1,
      "message": "PTAL",
      "revId": "74cbde754c5eebf544d05307e9fadc21a2c1ebb7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed088f3a_b5a83c79",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2021-08-16T09:19:09Z",
      "side": 1,
      "message": "+jgruber for src/debug and src/init owners",
      "revId": "74cbde754c5eebf544d05307e9fadc21a2c1ebb7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce05201b_78151b38",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-08-16T09:57:25Z",
      "side": 1,
      "message": "lgtm with comments",
      "revId": "74cbde754c5eebf544d05307e9fadc21a2c1ebb7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "034d6663_43d0c71c",
        "filename": "src/api/api.cc",
        "patchSetId": 1
      },
      "lineNbr": 2423,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-08-16T09:57:25Z",
      "side": 1,
      "message": "nit: is the unique_ptr helpful here? We immediately call `get` below.",
      "revId": "74cbde754c5eebf544d05307e9fadc21a2c1ebb7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b7d1ae2_381abad3",
        "filename": "src/api/api.cc",
        "patchSetId": 1
      },
      "lineNbr": 2423,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2021-08-16T11:26:44Z",
      "side": 1,
      "message": "We call \u0027get\u0027, not \u0027release\u0027 -- the cached_data stays alive so that it can be checked for `rejected()`",
      "parentUuid": "034d6663_43d0c71c",
      "revId": "74cbde754c5eebf544d05307e9fadc21a2c1ebb7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82402785_919f0aed",
        "filename": "src/api/api.cc",
        "patchSetId": 1
      },
      "lineNbr": 2423,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2021-08-17T08:53:30Z",
      "side": 1,
      "message": "(considering this resolved)",
      "parentUuid": "0b7d1ae2_381abad3",
      "revId": "74cbde754c5eebf544d05307e9fadc21a2c1ebb7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7949ed09_e6f405ae",
        "filename": "src/api/api.cc",
        "patchSetId": 1
      },
      "lineNbr": 2445,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-08-16T09:57:25Z",
      "side": 1,
      "message": "Wdyt about adding 2 overloads, one that takes a BackgroundDeserializeTask, the other a AlignedCachedData? Seems a bit weird to have 2 mutually exclusive args, together with `if (options \u003d\u003d kConsumeCodeCache)` logic in a few spots.",
      "revId": "74cbde754c5eebf544d05307e9fadc21a2c1ebb7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b329aab_8a82f8ae",
        "filename": "src/api/api.cc",
        "patchSetId": 1
      },
      "lineNbr": 2445,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2021-08-16T11:26:44Z",
      "side": 1,
      "message": "I could add convenience overloads, but the main GetSharedFunctionInfoForScript differentiates between the two pretty deep in its logic so it would either need heavy refactoring, or something like a \"get cached function\" lambda param. WDYT?",
      "parentUuid": "7949ed09_e6f405ae",
      "revId": "74cbde754c5eebf544d05307e9fadc21a2c1ebb7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8af7240_910da838",
        "filename": "src/api/api.cc",
        "patchSetId": 1
      },
      "lineNbr": 2445,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-08-16T11:33:31Z",
      "side": 1,
      "message": "Yep that\u0027s what I was thinking; 2 convenience overloads (perhaps +1 for the testing case that passes all nullptrs).",
      "parentUuid": "5b329aab_8a82f8ae",
      "revId": "74cbde754c5eebf544d05307e9fadc21a2c1ebb7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ec7b158_5ddbfbdb",
        "filename": "src/api/api.cc",
        "patchSetId": 1
      },
      "lineNbr": 2445,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2021-08-17T08:53:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d8af7240_910da838",
      "revId": "74cbde754c5eebf544d05307e9fadc21a2c1ebb7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00d0f75a_f5068efd",
        "filename": "src/codegen/compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 2887,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-08-16T09:57:25Z",
      "side": 1,
      "message": "\u0027.\u0027 or alternatively remove the comment.",
      "revId": "74cbde754c5eebf544d05307e9fadc21a2c1ebb7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90bda342_2db5cb93",
        "filename": "src/codegen/compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 2887,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2021-08-17T08:53:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00d0f75a_f5068efd",
      "revId": "74cbde754c5eebf544d05307e9fadc21a2c1ebb7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "969bda3e_8fac6d8c",
        "filename": "src/debug/debug-evaluate.cc",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-08-16T09:57:25Z",
      "side": 1,
      "message": "oO this also smells like a 3rd overload.",
      "revId": "74cbde754c5eebf544d05307e9fadc21a2c1ebb7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d3c492c_df1d8104",
        "filename": "src/debug/debug-evaluate.cc",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2021-08-17T08:53:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "969bda3e_8fac6d8c",
      "revId": "74cbde754c5eebf544d05307e9fadc21a2c1ebb7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}