{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "230c9a4e_b0b54cc8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1345975
      },
      "writtenOn": "2023-11-29T11:43:06Z",
      "side": 1,
      "message": "LGTM, thanks for fixing it!",
      "revId": "7cd2e993b81981466ee6d30ec6a4146588f40c27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f78b254_a7f93007",
        "filename": "test/fuzzer/wasm-compile.cc",
        "patchSetId": 7
      },
      "lineNbr": 2874,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2023-11-28T13:07:14Z",
      "side": 1,
      "message": "If we can\u0027t just emit a `kExprRefAsNonNull` after the nullref, see also the `kExtern` handling below. It isn\u0027t great but it should be fine. (for the extern case we could actually use `ref.as_non_null(extern.convert_any(x))` where x is `GenerateRef(HeapType::kAnyRef)` to not always create something that traps.",
      "range": {
        "startLine": 2874,
        "startChar": 9,
        "endLine": 2874,
        "endChar": 24
      },
      "revId": "7cd2e993b81981466ee6d30ec6a4146588f40c27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2adc2c28_f5177928",
        "filename": "test/fuzzer/wasm-compile.cc",
        "patchSetId": 7
      },
      "lineNbr": 2874,
      "author": {
        "id": 1345975
      },
      "writtenOn": "2023-11-29T11:43:06Z",
      "side": 1,
      "message": "We always have at least one tag in the module, so it should be easy to generate a guaranteed non-null exnref here. It could look something like:\n\n    block exnref $label\n      try_table catch_all_ref $label\n        \u003cgenerate $tag params\u003e\n        throw $tag\n      end\n    end\n    \nI can take this.",
      "parentUuid": "4f78b254_a7f93007",
      "range": {
        "startLine": 2874,
        "startChar": 9,
        "endLine": 2874,
        "endChar": 24
      },
      "revId": "7cd2e993b81981466ee6d30ec6a4146588f40c27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10d2a6f5_fe125a6b",
        "filename": "test/fuzzer/wasm-compile.cc",
        "patchSetId": 7
      },
      "lineNbr": 2874,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2023-11-29T14:27:30Z",
      "side": 1,
      "message": "For now I use `kExprRefAsNonNull`.",
      "parentUuid": "4f78b254_a7f93007",
      "range": {
        "startLine": 2874,
        "startChar": 9,
        "endLine": 2874,
        "endChar": 24
      },
      "revId": "7cd2e993b81981466ee6d30ec6a4146588f40c27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "7cd2e993b81981466ee6d30ec6a4146588f40c27",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "7cd2e993b81981466ee6d30ec6a4146588f40c27",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "7cd2e993b81981466ee6d30ec6a4146588f40c27",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "7cd2e993b81981466ee6d30ec6a4146588f40c27",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}