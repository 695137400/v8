{
  "comments": [
    {
      "key": {
        "uuid": "c3f552ba_6d3b2fa0",
        "filename": "src/parsing/parser.cc",
        "patchSetId": 8
      },
      "lineNbr": 1749,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2019-05-14T10:30:59Z",
      "side": 0,
      "message": "Do we need to add an return statement for implicit return here? The bytecode generator will add an implicit return here [1]. This will end up being after the try/catch/finally blocks, but I\u0027m not sure this would change anything if this is a non-awaiting return.\n\n[1] https://cs.chromium.org/chromium/src/v8/src/interpreter/bytecode-generator.cc?q\u003dbytecode-genera\u0026sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d1176",
      "range": {
        "startLine": 1746,
        "startChar": 4,
        "endLine": 1749,
        "endChar": 0
      },
      "revId": "e483fb2731c13e811783bbb4bd2a70272027c15b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4b779aa_82f4ea22",
        "filename": "src/parsing/parser.cc",
        "patchSetId": 8
      },
      "lineNbr": 1749,
      "author": {
        "id": 1122311
      },
      "writtenOn": "2019-05-14T19:01:01Z",
      "side": 0,
      "message": "This is the implicit return I was trying to fix, per spec it is not supposed to await. I am currently using the pos \u003d\u003d kNoSourcePosition signal to determine whether or not to await. In the older versions of this cl, it passed is_implicit_return\u003dtrue here. Would you prefer the explicit bool?",
      "parentUuid": "c3f552ba_6d3b2fa0",
      "range": {
        "startLine": 1746,
        "startChar": 4,
        "endLine": 1749,
        "endChar": 0
      },
      "revId": "e483fb2731c13e811783bbb4bd2a70272027c15b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9604b63c_601143c6",
        "filename": "src/parsing/parser.cc",
        "patchSetId": 8
      },
      "lineNbr": 1749,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2019-05-14T20:16:41Z",
      "side": 0,
      "message": "That wasn\u0027t my question here. The implicit return isn\u0027t usually added by the parser, instead the bytecode generator (implicitly :)) adds it at the end of the function if there wasn\u0027t an explicit return beforehand (see the link above) without there being a corresponding AST node for it.\n\nI the case of AsyncGenerators here the parser does add an AST node for the implicit return at the end of all the parsed statements (bit before the hidden try/catch logic). When we needed a suspend point for the await in the return that was necessary (since the parser needed to add the suspend point), but without it, I\u0027m wondering if we can just depend on the implicit return logic in the bytecode generator without adding any extra ast node for the async generator case. This would move the implicit return to be outside the hidden try and below the hidden finally block, but I don\u0027t think this would matter semantically since the implicit return can\u0027t throw, and it would probably generate better code (no need to add the \"return interception\" logic into the hidden finally block if there isn\u0027t an explicit return within the hidden try block).",
      "parentUuid": "a4b779aa_82f4ea22",
      "range": {
        "startLine": 1746,
        "startChar": 4,
        "endLine": 1749,
        "endChar": 0
      },
      "revId": "e483fb2731c13e811783bbb4bd2a70272027c15b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b430cff1_4f06268e",
        "filename": "src/parsing/parser.cc",
        "patchSetId": 8
      },
      "lineNbr": 1749,
      "author": {
        "id": 1122311
      },
      "writtenOn": "2019-05-14T21:03:58Z",
      "side": 0,
      "message": "Sorry, yes you are 100% right, thanks for patiently explaining what you actually explained well the first time, I just completely misunderstood your question. ptal.",
      "parentUuid": "9604b63c_601143c6",
      "range": {
        "startLine": 1746,
        "startChar": 4,
        "endLine": 1749,
        "endChar": 0
      },
      "revId": "e483fb2731c13e811783bbb4bd2a70272027c15b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "805804b6_c3db3e4c",
        "filename": "src/parsing/parser.cc",
        "patchSetId": 9
      },
      "lineNbr": 1717,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2019-05-15T10:34:26Z",
      "side": 0,
      "message": "this should be removed, or changed to \"// fall through to the implicit return after the try-finally\" or similar",
      "range": {
        "startLine": 1717,
        "startChar": 7,
        "endLine": 1717,
        "endChar": 45
      },
      "revId": "e483fb2731c13e811783bbb4bd2a70272027c15b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}