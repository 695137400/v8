{
  "comments": [
    {
      "key": {
        "uuid": "ce31eb08_42015c8e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-09-16T16:35:22Z",
      "side": 1,
      "message": "ptal.\n\nI\u0027m looking into what we can support for marking in the standalone library case.\nI think we can do better than we currently do in regards to incremental marking.",
      "revId": "9805bd07bb381091736c4353f65a6174798885b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "794486e4_c727e08c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2020-09-17T09:01:58Z",
      "side": 1,
      "message": "lgtm",
      "revId": "9805bd07bb381091736c4353f65a6174798885b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c39ffe9_2f1195f5",
        "filename": "src/heap/cppgc/gc-invoker.cc",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2020-09-17T09:01:58Z",
      "side": 1,
      "message": "Not just finalization, but the whole GC, right? We shouldn\u0027t start incremental marking if we know that we cannot finish it meaningfully without the user invoking ForceGCSlow.\n\nFor the future: Maybe we should think about a way to ensure that defined a meaningful set of the platform and pass matching configs. E.g., we should avoid the config where we don\u0027t have delayed tasks and cannot run conservative.",
      "range": {
        "startLine": 100,
        "startChar": 10,
        "endLine": 100,
        "endChar": 22
      },
      "revId": "9805bd07bb381091736c4353f65a6174798885b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efaa9afa_9f4b9f55",
        "filename": "src/heap/cppgc/gc-invoker.cc",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-09-17T09:49:39Z",
      "side": 1,
      "message": "Yes, but I think the whole GC is not supported because we can\u0027t finalize. From a correctness pov, starting incremental GC would still be correct. The problem imo is that it would be very inefficient since we can\u0027t finalize it without the user. That\u0027s what I tried to convey in this comment, that the reason we bail out on StartIncrementalGC is because we wouldn\u0027t be able to finalize it.\n\nIs there something specific you\u0027d like me to change/add in the comment?",
      "parentUuid": "3c39ffe9_2f1195f5",
      "range": {
        "startLine": 100,
        "startChar": 10,
        "endLine": 100,
        "endChar": 22
      },
      "revId": "9805bd07bb381091736c4353f65a6174798885b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d12cf0d_dfa3631e",
        "filename": "src/heap/cppgc/gc-invoker.cc",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2020-09-17T10:16:00Z",
      "side": 1,
      "message": "(This is just about the comment.)\n\nI think I tripped over \"GC finalization is only supported through ForceGCSlow.\"\n\nI think we need to add something like \"In this configuration the GC finalization can only be triggered through... For that reason, we do not support running incremental GCs here.\"",
      "parentUuid": "efaa9afa_9f4b9f55",
      "range": {
        "startLine": 100,
        "startChar": 10,
        "endLine": 100,
        "endChar": 22
      },
      "revId": "9805bd07bb381091736c4353f65a6174798885b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6476fd2_2885bdd3",
        "filename": "src/heap/cppgc/gc-invoker.cc",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-09-17T10:44:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d12cf0d_dfa3631e",
      "range": {
        "startLine": 100,
        "startChar": 10,
        "endLine": 100,
        "endChar": 22
      },
      "revId": "9805bd07bb381091736c4353f65a6174798885b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a6f2ffe_d7d52547",
        "filename": "src/heap/cppgc/marker.cc",
        "patchSetId": 2
      },
      "lineNbr": 173,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2020-09-17T09:01:58Z",
      "side": 1,
      "message": "nit: Maybe move this to Post(). Run() seems fine as well but as I was following the code I was wondering in Post() why that is correct.",
      "range": {
        "startLine": 173,
        "startChar": 4,
        "endLine": 173,
        "endChar": 18
      },
      "revId": "9805bd07bb381091736c4353f65a6174798885b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc2c5d62_8c495e9d",
        "filename": "src/heap/cppgc/marker.cc",
        "patchSetId": 2
      },
      "lineNbr": 173,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-09-17T09:49:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a6f2ffe_d7d52547",
      "range": {
        "startLine": 173,
        "startChar": 4,
        "endLine": 173,
        "endChar": 18
      },
      "revId": "9805bd07bb381091736c4353f65a6174798885b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}