{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3b1961a5_897ab1e0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 9,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2024-02-19T11:17:05Z",
      "side": 1,
      "message": "I would prefer `Bug: 41497291`. `b/` is a Google-internal shortcut, and we should keep it out of open-source commits unless it\u0027s really necessary to mention it. If any tools don\u0027t work without the `b/` prefix, we should fix those tools, not pollute our commit messages.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 16
      },
      "revId": "8470a00f5a51505fda1448021d267c1fb6a3effc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47813d0c_b27d8ced",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 9,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2024-02-20T09:31:41Z",
      "side": 1,
      "message": "Done. I don\u0027t know where I have this \"Bugs\" from. That one doesn\u0027t work without b/, while \"Bug\" does. Very weird.",
      "parentUuid": "3b1961a5_897ab1e0",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 16
      },
      "revId": "8470a00f5a51505fda1448021d267c1fb6a3effc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e492e5db_664c82ea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2024-02-19T11:17:05Z",
      "side": 1,
      "message": "LGTM.\n\nNow please do this several hundred times more to meaningfully improve compile times ðŸ˜Š\n\nWhich is to say: if someone had time on their hands, we should conduct some research into what would be a good way to organize our code such that (1) it\u0027s maintainable and the what-goes-where rules make sense to humans, (2) the compiler can inline what it needs to for performance, and (3) it\u0027s fast to compile (think: the benefits of jumbo-builds, but without needing the jumbo magic).",
      "revId": "8470a00f5a51505fda1448021d267c1fb6a3effc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31a01722_78d9b054",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2024-02-20T09:31:41Z",
      "side": 1,
      "message": "Yea, I guess the pure benefit of this CL is next to none, but now at least the door is open to move some stuff from flags.cc to this new file to make it testable.",
      "parentUuid": "e492e5db_664c82ea",
      "revId": "8470a00f5a51505fda1448021d267c1fb6a3effc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}