{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "669e1700_a84f0f46",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1440073
      },
      "writtenOn": "2023-09-26T13:40:27Z",
      "side": 1,
      "message": "Hi!\nCould you please take a look? After this CL I will add the other Get/Set operations",
      "revId": "29ff163039eba2365b5df0758481096da4a11a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3204fc35_99b00ce1",
        "filename": "src/compiler/turboshaft/machine-lowering-reducer.h",
        "patchSetId": 8
      },
      "lineNbr": 2359,
      "author": {
        "id": 1440073
      },
      "writtenOn": "2023-09-26T13:40:27Z",
      "side": 1,
      "message": "Had to be added, as I had [failing tests](https://ci.chromium.org/ui/p/v8/builders/try/v8_linux64_dbg/b8768958713091394257/test-results?sortby\u003d\u0026groupby\u003d) in a previous patch.\n\nSome functions, like [F32Trunc](https://logs.chromium.org/logs/v8/buildbucket/cr-buildbucket/8768958713091394257/+/u/Check_-_extra/RunWasmTurbofan_F32Trunc), call this `REDUCE` and it\u0027s implemented only for `Float64`.",
      "range": {
        "startLine": 2357,
        "startChar": 0,
        "endLine": 2359,
        "endChar": 9
      },
      "revId": "29ff163039eba2365b5df0758481096da4a11a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d773677_024b3f51",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 8
      },
      "lineNbr": 1027,
      "author": {
        "id": 1440073
      },
      "writtenOn": "2023-09-26T13:40:27Z",
      "side": 1,
      "message": "Follows the description from [ECMAScript](https://tc39.es/ecma262/#sec-getviewvalue)",
      "range": {
        "startLine": 1027,
        "startChar": 6,
        "endLine": 1027,
        "endChar": 34
      },
      "revId": "29ff163039eba2365b5df0758481096da4a11a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc67e72e_47788758",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 8
      },
      "lineNbr": 1030,
      "author": {
        "id": 1440073
      },
      "writtenOn": "2023-09-26T13:40:27Z",
      "side": 1,
      "message": "I was wondering whether this is okay or some transformations are needed (e.g. shouldn\u0027t it be UInt32), though `__ LoadDataViewElement` receives a Word32.\n\n[ECMAScript ToBoolean link](https://tc39.es/ecma262/#sec-toboolean)",
      "range": {
        "startLine": 1030,
        "startChar": 8,
        "endLine": 1030,
        "endChar": 48
      },
      "revId": "29ff163039eba2365b5df0758481096da4a11a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06a8f859_b4604b71",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 8
      },
      "lineNbr": 1030,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2023-09-27T14:25:03Z",
      "side": 1,
      "message": "Yes, if this is `ToBoolean`, you\u0027ll need to handle all the conversions, like empty String being interpreted as false etc.",
      "parentUuid": "dc67e72e_47788758",
      "range": {
        "startLine": 1030,
        "startChar": 8,
        "endLine": 1030,
        "endChar": 48
      },
      "revId": "29ff163039eba2365b5df0758481096da4a11a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a857391_8e36ba47",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 8
      },
      "lineNbr": 1030,
      "author": {
        "id": 1440073
      },
      "writtenOn": "2023-09-27T15:53:57Z",
      "side": 1,
      "message": "First I wanted to add some asserts to the test like:\n```assertEquals(0x78563412, instance.exports.getInt32(dataview, 4, undefined));```\nand other similar cases that need to be false. \n\nBut then Tobias made me realise that I first import `getInt32()` from JS to Wasm, and then I export it back to JS, so the JS-to-Wasm wrapper already handled the bool conversion.\n\nAlso in this case, as far as I understand, the parameters are already converted to Int32 values, so no need for checks.",
      "parentUuid": "06a8f859_b4604b71",
      "range": {
        "startLine": 1030,
        "startChar": 8,
        "endLine": 1030,
        "endChar": 48
      },
      "revId": "29ff163039eba2365b5df0758481096da4a11a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08deddde_53c47156",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 8
      },
      "lineNbr": 1030,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2023-09-27T16:00:40Z",
      "side": 1,
      "message": "Right, that makes sense. Can you please add test cases for at least some of these special cases to ensure that this is indeed the case?",
      "parentUuid": "5a857391_8e36ba47",
      "range": {
        "startLine": 1030,
        "startChar": 8,
        "endLine": 1030,
        "endChar": 48
      },
      "revId": "29ff163039eba2365b5df0758481096da4a11a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af004a3b_2257d042",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 8
      },
      "lineNbr": 1030,
      "author": {
        "id": 1440073
      },
      "writtenOn": "2023-09-27T17:38:02Z",
      "side": 1,
      "message": "I added them.\n\nNote:\nI was curious whether a non-empty string as the `littleEndian` parameter gets converted to `true`, but it was converted to `false`:\n```assertEquals(42, instance.exports.getInt32(dataview, 0, \"blabla\"));```\nThe specification says in point 3 in the ToBoolean conversion: *If argument is an Object and argument has an [[IsHTMLDDA]] internal slot, return false.*\nI wonder if this is the case here, I didn\u0027t figure out how to check this internal property.\nJust in case I also tried running this assert without the flag `--variants\u003dturboshaft` and it was still converted to `false`.",
      "parentUuid": "08deddde_53c47156",
      "range": {
        "startLine": 1030,
        "startChar": 8,
        "endLine": 1030,
        "endChar": 48
      },
      "revId": "29ff163039eba2365b5df0758481096da4a11a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b45ae521_0b7f874c",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 8
      },
      "lineNbr": 1030,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2023-09-27T17:48:34Z",
      "side": 1,
      "message": "Thanks a lot for adding it. Regarding `isHTMLDDA` and ToBoolean in general I\u0027m not really familiar with the details. @jkummerow@chromium.org: Can you help out here?",
      "parentUuid": "af004a3b_2257d042",
      "range": {
        "startLine": 1030,
        "startChar": 8,
        "endLine": 1030,
        "endChar": 48
      },
      "revId": "29ff163039eba2365b5df0758481096da4a11a87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}