{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5dc95318_0a1c2c1c",
        "filename": "src/compiler/memory-lowering.cc",
        "patchSetId": 21
      },
      "lineNbr": 599,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2022-11-29T09:12:59Z",
      "side": 0,
      "message": "If we make the store above a Uint32 store, then I think we should be able to add this DCHECK back.",
      "revId": "0afe3f519821449f00c746df3747543d3458bb68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbf9f30a_bf8c613a",
        "filename": "src/compiler/memory-lowering.cc",
        "patchSetId": 21
      },
      "lineNbr": 599,
      "author": {
        "id": 1558499
      },
      "writtenOn": "2022-11-29T11:27:56Z",
      "side": 0,
      "message": "It would not hold for sandboxless code.",
      "parentUuid": "5dc95318_0a1c2c1c",
      "revId": "0afe3f519821449f00c746df3747543d3458bb68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b158a6ee_e50df834",
        "filename": "src/compiler/memory-lowering.cc",
        "patchSetId": 21
      },
      "lineNbr": 599,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2022-11-29T12:26:39Z",
      "side": 0,
      "message": "Good point! So could we turn it into\n```\nDCHECK(!access.type.Is(Type::ExternalPointer()) || !V8_ENABLE_SANDBOX_BOOL);\n```\n?\n\nI think the DCHECK is useful here since the logic for dealing with stores to sandboxed ExternalPointer fields is not implemented, so it cannot really work correctly (as opposed to loads, which are handled by `ReduceLoadExternalPointerField`).",
      "parentUuid": "cbf9f30a_bf8c613a",
      "revId": "0afe3f519821449f00c746df3747543d3458bb68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}