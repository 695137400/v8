// Copyright 2019 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

extern class JSProxy extends JSReceiver {
  target: JSReceiver|Null;
  handler: JSReceiver|Null;
}

extern shape JSProxyRevocableResult extends JSObject {
  proxy: JSAny;
  revoke: JSAny;
  @if(V8_COMPRESS_POINTERS_8GB) optional_padding: Smi;
  @ifnot(V8_COMPRESS_POINTERS_8GB) optional_padding: void;
}

macro NewJSProxyRevocableResult(implicit context: Context)(
    proxy: JSProxy, revoke: JSFunction): JSProxyRevocableResult {
  @if(V8_COMPRESS_POINTERS_8GB) {
    return new JSProxyRevocableResult{
      map: GetProxyRevocableResultMap(),
      properties_or_hash: kEmptyFixedArray,
      elements: kEmptyFixedArray,
      proxy,
      revoke,
      optional_padding: 0
    };
  }
  @ifnot(V8_COMPRESS_POINTERS_8GB) {
    return new JSProxyRevocableResult{
      map: GetProxyRevocableResultMap(),
      properties_or_hash: kEmptyFixedArray,
      elements: kEmptyFixedArray,
      proxy,
      revoke
    };
  }
}
