{
  "comments": [
    {
      "key": {
        "uuid": "95293726_17de5086",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 10,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-03-21T14:27:40Z",
      "side": 1,
      "message": "nit: remove this",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 10
      },
      "revId": "ad50d4a16140eae64c547b261f4d9bd6ba6197a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f8cedc8_66e1337f",
        "filename": "tools/testrunner/local/variants.py",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-21T09:01:44Z",
      "side": 1,
      "message": "machenbach@ I had to remove this turbo_filter flag to avoid test failures. The reason was that the failing tests require optimization, and so set --crankshaft explicitly in there flags, however, with the turbo-filter flag they then go down the deprecated ignition-staging pipeline. Are you fine with removing this flag? I can do it in a seperate CL if you prefer?",
      "range": {
        "startLine": 14,
        "startChar": 43,
        "endLine": 14,
        "endChar": 48
      },
      "revId": "ad50d4a16140eae64c547b261f4d9bd6ba6197a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8bd6afa_921e5e27",
        "filename": "tools/testrunner/local/variants.py",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-03-21T14:27:40Z",
      "side": 1,
      "message": "How many tests were like that? Could those tests not explicitly set --turbo-filter\u003d*? I\u0027ve done that in some tests already. If you remove --turbo-filter\u003d~ here we won\u0027t get extra coverage on all the tests using OptimizeFunctionOnNextCall.",
      "parentUuid": "7f8cedc8_66e1337f",
      "range": {
        "startLine": 14,
        "startChar": 43,
        "endLine": 14,
        "endChar": 48
      },
      "revId": "ad50d4a16140eae64c547b261f4d9bd6ba6197a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f538ebdf_cc432ce5",
        "filename": "tools/testrunner/local/variants.py",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-03-21T14:50:20Z",
      "side": 1,
      "message": "What coverage are we getting for OptimizeFunctionOnNextCall? Won\u0027t --turbo-filter\u003d~ end up causing us to just compile functions with OptimizeFunctionOnNextCall in Crankshaft rather than TF? I don\u0027t think that\u0027s what we want for this config, is it?",
      "parentUuid": "f8bd6afa_921e5e27",
      "range": {
        "startLine": 14,
        "startChar": 43,
        "endLine": 14,
        "endChar": 48
      },
      "revId": "ad50d4a16140eae64c547b261f4d9bd6ba6197a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d7a25ed_e0b2b249",
        "filename": "tools/testrunner/local/variants.py",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-03-21T14:58:03Z",
      "side": 1,
      "message": "The hope was that we\u0027d turn the OptimizeFunctionOnNextCall into noops and continue with pure ignition. Won\u0027t we get this? And if not, is there a way to get it?",
      "parentUuid": "f538ebdf_cc432ce5",
      "range": {
        "startLine": 14,
        "startChar": 43,
        "endLine": 14,
        "endChar": 48
      },
      "revId": "ad50d4a16140eae64c547b261f4d9bd6ba6197a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}