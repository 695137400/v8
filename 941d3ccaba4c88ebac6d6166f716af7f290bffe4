{
  "comments": [
    {
      "key": {
        "uuid": "607dea35_74a775c0",
        "filename": "src/objects/objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 8056,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2019-11-26T13:42:23Z",
      "side": 1,
      "message": "Why don\u0027t you use the macro ASSIGN_RETURN_ON_EXCEPTION_VALUE?",
      "revId": "941d3ccaba4c88ebac6d6166f716af7f290bffe4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "755c295b_3df315f3",
        "filename": "src/objects/objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 8081,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2019-11-26T13:42:23Z",
      "side": 1,
      "message": "Same as above.",
      "revId": "941d3ccaba4c88ebac6d6166f716af7f290bffe4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e52063a_702f408c",
        "filename": "src/objects/objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 8097,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2019-11-26T13:42:23Z",
      "side": 1,
      "message": "Why do you go through the trouble of creating descriptor objects, rather than simply putting the value in the array as you previously did? We can identify accessors as values that are AccessorPairs on the outside.\n\nIf we want something like this, we should have property CreateDataDescriptor and CreateAccessorDescriptor functions that create object literals of the proper size. I\u0027d prefer not to create these unnecessary intermediate objects though.",
      "revId": "941d3ccaba4c88ebac6d6166f716af7f290bffe4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "032bcf0d_ef8e30e5",
        "filename": "src/objects/objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 8097,
      "author": {
        "id": 1288325
      },
      "writtenOn": "2019-11-26T14:50:38Z",
      "side": 1,
      "message": "Is it OK to use types in src/objects/struct.h in the inspector? From what I can tell, there are no precedences, and files under src/inspector only make use of API types exposed in the public v8.h, so I wonder if that restriction is intentional.",
      "parentUuid": "1e52063a_702f408c",
      "revId": "941d3ccaba4c88ebac6d6166f716af7f290bffe4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41d334a8_1111831f",
        "filename": "src/objects/objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 8097,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2019-11-27T13:28:23Z",
      "side": 1,
      "message": "The inspector used to be outside of V8. It might be a good idea to keep it that way. We could possibly use v8::PropertyDescriptor? I\u0027ll let the DevTools folks chime in on how this should best be done since I don\u0027t know too much about how the inspect is supposed to work.",
      "parentUuid": "032bcf0d_ef8e30e5",
      "revId": "941d3ccaba4c88ebac6d6166f716af7f290bffe4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e88b1a3_7ea3a220",
        "filename": "src/objects/objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 8097,
      "author": {
        "id": 1288325
      },
      "writtenOn": "2019-11-27T14:40:46Z",
      "side": 1,
      "message": "Since\n\n- v8::PropertyDescriptor does not have a name field\n- v8::PropertyDescriptor is not a v8::Value\n\nWhat would the signature of debug::GetPrivateMemberDescriptors() look like if we use v8::PropertyDescriptor? Maybe this?\n\nMaybeLocal\u003cArray\u003e debug::GetPrivateMemberDescriptors(\n    Local\u003cContext\u003e context, Local\u003cObject\u003e value,\n    std::vector\u003cv8::PropertyDescriptor\u003e* descriptors);\n\n(Where the returned Local\u003cArray\u003e contain the names of the descriptors in the corresponding index. The handles allocated shall all live in the closest HandleScope created by the caller.)",
      "parentUuid": "41d334a8_1111831f",
      "revId": "941d3ccaba4c88ebac6d6166f716af7f290bffe4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6025b966_aaafdecd",
        "filename": "src/objects/objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 8097,
      "author": {
        "id": 1118373
      },
      "writtenOn": "2019-11-28T12:39:51Z",
      "side": 1,
      "message": "I\u0027d be open to introducing a v8::debug::AccessorPair in debug-interface.h. We have done this for v8::internal::Script -\u003e v8::debug::Script as well. That way, we can expose accessors directly to the inspector.",
      "parentUuid": "0e88b1a3_7ea3a220",
      "revId": "941d3ccaba4c88ebac6d6166f716af7f290bffe4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}