{
  "comments": [
    {
      "key": {
        "uuid": "9a45cb7c_fdfa6c1a",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1144619
      },
      "writtenOn": "2017-08-08T21:46:49Z",
      "side": 1,
      "message": "This should be VALIDATE",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab31fdc9_633a9018",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-08-26T20:17:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a45cb7c_fdfa6c1a",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e022ffcb_7786a975",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 1144619
      },
      "writtenOn": "2017-08-08T21:46:49Z",
      "side": 1,
      "message": "This should be CHECK_ERROR",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b65dd840_120bc723",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-08-26T20:17:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e022ffcb_7786a975",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15bcdcf6_942373c7",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 229,
      "author": {
        "id": 1144619
      },
      "writtenOn": "2017-08-08T21:46:49Z",
      "side": 1,
      "message": "What happens if decode_local_type fails? What does |result| end up being?",
      "range": {
        "startLine": 229,
        "startChar": 20,
        "endLine": 229,
        "endChar": 0
      },
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98ead60a_5188ea09",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 229,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-08-26T20:17:23Z",
      "side": 1,
      "message": "It should never fail here, hence the DCHECK. The values were checked before in the constructor.",
      "parentUuid": "15bcdcf6_942373c7",
      "range": {
        "startLine": 229,
        "startChar": 20,
        "endLine": 229,
        "endChar": 0
      },
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c0614b6_fb98269b",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 395,
      "author": {
        "id": 1119499
      },
      "writtenOn": "2017-08-25T18:29:22Z",
      "side": 1,
      "message": "Consumer isn\u0027t an exact fit for the name. What about \"DecoderTraits\"? Also, can we have the expected members of DecoderTraits defined in a comment for documentation?",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45f9b5b2_fdf0a63a",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 395,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-08-26T20:17:23Z",
      "side": 1,
      "message": "DecoderTraits sounds like it would change the way the decoder works. This is not the case though. It only gets called at specific points during decoding to do additional stuff.\nEric named it Visitor before, but that sounds too active for me.\nI think we should discuss this offline.",
      "parentUuid": "3c0614b6_fb98269b",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20e87f0a_db79f279",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 396,
      "author": {
        "id": 1119499
      },
      "writtenOn": "2017-08-25T18:29:22Z",
      "side": 1,
      "message": "s/Value/AbstractValue/ ?",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3996f78f_005c2a82",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 396,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-08-26T20:17:23Z",
      "side": 1,
      "message": "The name \"Value\" was also used before (in function-body-decoder.cc), but I am fine with renaming this.",
      "parentUuid": "20e87f0a_db79f279",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "865e01c0_d8f4c082",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 412,
      "author": {
        "id": 1119499
      },
      "writtenOn": "2017-08-25T18:29:22Z",
      "side": 1,
      "message": "s/MergeValues/AbstractMerge/g ?\n\nAnd a comment for documentation.",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d62dda94_c35c9c07",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 412,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-08-26T20:17:23Z",
      "side": 1,
      "message": "Same here.",
      "parentUuid": "865e01c0_d8f4c082",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bddcc7f3_54f5e134",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 547,
      "author": {
        "id": 1119499
      },
      "writtenOn": "2017-08-25T18:29:22Z",
      "side": 1,
      "message": "perhaps TEMPLATIZED?",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f5a2f8a_f04909e4",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 548,
      "author": {
        "id": 1144619
      },
      "writtenOn": "2017-08-08T21:46:49Z",
      "side": 1,
      "message": "Does it make sense to have do_validation and Consumer as class-level template parameters?",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44038189_11fdb318",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 555,
      "author": {
        "id": 1119499
      },
      "writtenOn": "2017-08-25T18:29:22Z",
      "side": 1,
      "message": "s/do_validation/validate/g",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1497aa4_23cfef16",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 555,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-08-26T20:17:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44038189_11fdb318",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b81eccb_827363e1",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 880,
      "author": {
        "id": 1144619
      },
      "writtenOn": "2017-08-08T21:46:49Z",
      "side": 1,
      "message": "Should this be |ExceptionIndexOperand\u003cdo_validation\u003e|?",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae473f10_f5bbf98b",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 880,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-08-26T20:17:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5b81eccb_827363e1",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20775a26_134e7084",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 1016,
      "author": {
        "id": 1119499
      },
      "writtenOn": "2017-08-25T18:29:22Z",
      "side": 1,
      "message": "Can we typedef Value\u003cConsumer\u003e (actually Value\u003cDecoderTraits\u003e) to be DValue or similar? (also for the operands).",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4460798_600c9bf4",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 2156,
      "author": {
        "id": 1119499
      },
      "writtenOn": "2017-08-25T18:29:22Z",
      "side": 1,
      "message": "I think it\u0027s better not provide a default implementation of these methods, since this turns what would be a compile error into a runtime error.",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92ce9849_fc95a805",
        "filename": "src/wasm/function-body-decoder.cc",
        "patchSetId": 6
      },
      "lineNbr": 93,
      "author": {
        "id": 1144619
      },
      "writtenOn": "2017-08-08T21:46:49Z",
      "side": 1,
      "message": "Is the reason for using IMPL macros simply to save some typing, or is there another benefit to it? I find this pattern hard to read, but maybe I\u0027m missing something.",
      "range": {
        "startLine": 93,
        "startChar": 2,
        "endLine": 93,
        "endChar": 6
      },
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "298f4d13_e4d5ec10",
        "filename": "src/wasm/function-body-decoder.cc",
        "patchSetId": 6
      },
      "lineNbr": 123,
      "author": {
        "id": 1119499
      },
      "writtenOn": "2017-08-25T18:29:22Z",
      "side": 1,
      "message": "Definitely would benefit from a typedef of Control\u003cConsumer\u003e and Value\u003cConsumer\u003e.",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4be804b8_45e8460f",
        "filename": "src/wasm/function-body-decoder.cc",
        "patchSetId": 6
      },
      "lineNbr": 547,
      "author": {
        "id": 1144619
      },
      "writtenOn": "2017-08-08T21:46:49Z",
      "side": 1,
      "message": "Can these autos be made const?",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "516fdeb7_c29b0d8c",
        "filename": "src/wasm/function-body-decoder.cc",
        "patchSetId": 6
      },
      "lineNbr": 550,
      "author": {
        "id": 1144619
      },
      "writtenOn": "2017-08-08T21:46:49Z",
      "side": 1,
      "message": "What do you mean by this TODO?",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "088f117e_82639b96",
        "filename": "src/wasm/function-body-decoder.cc",
        "patchSetId": 6
      },
      "lineNbr": 924,
      "author": {
        "id": 1144619
      },
      "writtenOn": "2017-08-08T21:46:49Z",
      "side": 1,
      "message": "Did the meaning of this parameter change from the previous version? Why did we change from true to false here?",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa313df6_ec7a892a",
        "filename": "test/mjsunit/wasm/exceptions.js",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1144619
      },
      "writtenOn": "2017-08-08T21:46:49Z",
      "side": 1,
      "message": "Given that these tests were already passing, it seems like we should keep them passing rather than commenting them out.",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f306eca_cc9b60c9",
        "filename": "test/mjsunit/wasm/exceptions.js",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1224119
      },
      "writtenOn": "2017-08-09T15:10:35Z",
      "side": 1,
      "message": "These doesn\u0027t work because your refactoring has not taken into account changes I have committed for handling exceptions. Are you planning on fixing this before, or after this refactoring is committed?",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2d3a5fa_72cdbe29",
        "filename": "test/mjsunit/wasm/exceptions.js",
        "patchSetId": 6
      },
      "lineNbr": 37,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-08-26T20:17:23Z",
      "side": 1,
      "message": "At the last rebase, I tried to merge your changes, but failed at first go. I think I did not fully understand the logic yet. There is also this comment which made the code not look final anyway:\n// TODO(karlschimpf): Why not use EndControl ()? (currently fails)\n              FallThruTo(c);\n\nAfter rebasing to the current master, I will check again whether I get this test to pass. Otherwise, I propose to fix this in a follow-up CL.",
      "parentUuid": "9f306eca_cc9b60c9",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe9ecc30_28ab2699",
        "filename": "test/mjsunit/wasm/exceptions.js",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1000804
      },
      "writtenOn": "2017-08-09T16:16:21Z",
      "side": 1,
      "message": "In general, I think we should avoid disabling tests.\nIf we do disable this one, it seems like it would be better to disable it in mjsunit.status, along with a TODO + filed issue.\n\nHowever, it sounds like disabling the test obscures a mis-merge, as exceptions changes got lost in the process of things moving into the header?",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8db3b71d_a1ca2df1",
        "filename": "test/mjsunit/wasm/exceptions.js",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-08-26T20:17:23Z",
      "side": 1,
      "message": "As mentioned above, I failed to understand the logic of the code which is there. I will try again after rebasing to the current master.",
      "parentUuid": "fe9ecc30_28ab2699",
      "revId": "5d6991f91f603c7a431e35b423da26a1b7bf6ede",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}