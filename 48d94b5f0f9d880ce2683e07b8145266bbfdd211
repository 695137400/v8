{
  "comments": [
    {
      "key": {
        "uuid": "3cec0b59_e9bc8723",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 11,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "Giving this variable a default value is unnecessary.",
      "range": {
        "startLine": 11,
        "startChar": 51,
        "endLine": 11,
        "endChar": 65
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d98396b_a1c0615b",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "I don\u0027t see why you need this variable. {target} can just be a Node* declared in line 51.",
      "range": {
        "startLine": 12,
        "startChar": 1,
        "endLine": 12,
        "endChar": 58
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c39739ec_c67d0e1b",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 31,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "I would suggest to inline this function into its caller -- I think splitting it out makes things more confusing rather than more readable.",
      "range": {
        "startLine": 31,
        "startChar": 21,
        "endLine": 31,
        "endChar": 37
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b26fab8f_f1a40d41",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 33,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "{continue_loop} is never used (and never should be). I think you can remove the entire loop.",
      "range": {
        "startLine": 33,
        "startChar": 63,
        "endLine": 33,
        "endChar": 76
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c1d6e64_ce1d325b",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 37,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "nit: trailing full stop please. Also, in what way is this a workaround for special objects? How can the condition below ever be true? You\u0027re CSA_ASSERTing that {proxy} is a JSProxy before getting in here.",
      "range": {
        "startLine": 37,
        "startChar": 69,
        "endLine": 37,
        "endChar": 75
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1de0bf05_1e046247",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 43,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "please delete this instead of commenting it out.",
      "range": {
        "startLine": 43,
        "startChar": 2,
        "endLine": 43,
        "endChar": 51
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c3e5d5e_14759501",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 54,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "then what? Suggestion:\n\n// 7. If trap is undefined, then (see 7.a below).",
      "range": {
        "startLine": 54,
        "startChar": 30,
        "endLine": 54,
        "endChar": 34
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0e1d3aa_793d8169",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "Contrary to the C++ implementation of Object::GetMethod, CSA::GetMethod doesn\u0027t check for {trap} being callable. I think you need to check here and throw a TypeError (MessageTemplate::kPropertyNotFunction) if {trap} isn\u0027t callable.",
      "range": {
        "startLine": 56,
        "startChar": 15,
        "endLine": 56,
        "endChar": 24
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaae53ca_3aa4e5bb",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 64,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "Why is {if_found_value} passed in from the outside, as opposed to being a local variable inside CheckTrapResult?",
      "range": {
        "startLine": 64,
        "startChar": 19,
        "endLine": 64,
        "endChar": 33
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff046553_cccc7251",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 64,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "For the {if_bailout} case, you need to jump to the runtime.",
      "range": {
        "startLine": 64,
        "startChar": 51,
        "endLine": 64,
        "endChar": 63
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0371ca35_a8f45e11",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 66,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "nit: trailing punctuation please. Also, what prototype chain are you talking about?",
      "range": {
        "startLine": 66,
        "startChar": 41,
        "endLine": 66,
        "endChar": 56
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c609dce_ae8ad832",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 67,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "naming nit: Given that this is used for other cases too, it\u0027s confusing to call it \"if not found\". Consider \"return_result\" or similar.",
      "range": {
        "startLine": 67,
        "startChar": 8,
        "endLine": 67,
        "endChar": 20
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c596011b_8ed3e9c2",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 71,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "Since you have the pattern:\n  result-\u003eBind(xyz);\n  Goto(end);\n  BIND(end);\n  Return(result-\u003evalue());\nYou can drop both {result} and {end} and simply {Return(xyz)} here and in line 77.",
      "range": {
        "startLine": 71,
        "startChar": 4,
        "endLine": 71,
        "endChar": 14
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e20671c4_1f10cd13",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 86,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "This function is highly specific to the \"get\" trap, right? Its name should reflect that.",
      "range": {
        "startLine": 86,
        "startChar": 21,
        "endLine": 86,
        "endChar": 36
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6d9e676_eea19706",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 88,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "\"if not found\" does not reflect what this label is used for. How about \"check_passed\"?",
      "range": {
        "startLine": 88,
        "startChar": 67,
        "endLine": 88,
        "endChar": 79
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1442a557_07ebb77d",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 102,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "unused",
      "range": {
        "startLine": 102,
        "startChar": 10,
        "endLine": 102,
        "endChar": 54
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3971dce_ee9d20a7",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 103,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "unused",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 103,
        "endChar": 51
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "519061a9_311893c1",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 104,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "unused",
      "range": {
        "startLine": 104,
        "startChar": 8,
        "endLine": 104,
        "endChar": 54
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe81fcf5_a9c6b44a",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 110,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "Please end all comments with appropriate punctuation. In this case, a colon seems appropriate.",
      "range": {
        "startLine": 110,
        "startChar": 14,
        "endLine": 110,
        "endChar": 18
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad9d67d2_cda73989",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 116,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "nit: trailing colon",
      "range": {
        "startLine": 116,
        "startChar": 41,
        "endLine": 116,
        "endChar": 45
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46cb10bd_ec8a2340",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 135,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "nit: trailing colon",
      "range": {
        "startLine": 135,
        "startChar": 42,
        "endLine": 135,
        "endChar": 46
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a73418f5_6b3c0bd3",
        "filename": "src/builtins/builtins-proxy-helpers-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 141,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "nit: trailing full stop",
      "range": {
        "startLine": 141,
        "startChar": 29,
        "endLine": 141,
        "endChar": 33
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc0c45fe_29631083",
        "filename": "src/builtins/builtins-proxy-helpers-gen.h",
        "patchSetId": 8
      },
      "lineNbr": 5,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "nit: this include guard doesn\u0027t match the filename",
      "range": {
        "startLine": 5,
        "startChar": 8,
        "endLine": 5,
        "endChar": 41
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85e96635_aae0d337",
        "filename": "src/code-stub-assembler.h",
        "patchSetId": 8
      },
      "lineNbr": 896,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "(1) nit: trailing full stop please.\n(2) We already have CSA::IsName(Node* object), which is faster and simpler than this and semantically equivalent.\n(3) This implementation is probably not what we want. In V8, Smis are valid property keys too. (Compared to the spec, this is an unobservable implementation detail.)\n(4) Since you only need this for one CSA_ASSERT, I\u0027m fine with just not implementing it (and not ASSERTing).",
      "range": {
        "startLine": 896,
        "startChar": 43,
        "endLine": 896,
        "endChar": 49
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "956c0d4f_effccc13",
        "filename": "src/ic/accessor-assembler.cc",
        "patchSetId": 8
      },
      "lineNbr": 1485,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "naming nit: let\u0027s call this label {special_receiver}.",
      "range": {
        "startLine": 1485,
        "startChar": 36,
        "endLine": 1485,
        "endChar": 49
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74f87586_d97dcbed",
        "filename": "src/ic/accessor-assembler.cc",
        "patchSetId": 8
      },
      "lineNbr": 1617,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "nit: trailing full stop please. Or you could just drop this comment; it doesn\u0027t really explain anything that isn\u0027t obvious from the code.",
      "range": {
        "startLine": 1617,
        "startChar": 30,
        "endLine": 1617,
        "endChar": 33
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba3b18fe_b4536200",
        "filename": "src/ic/ic.cc",
        "patchSetId": 8
      },
      "lineNbr": 1132,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "nit: this cast should not be necessary, because JSObject is a subclass of JSReceiver.",
      "range": {
        "startLine": 1132,
        "startChar": 36,
        "endLine": 1132,
        "endChar": 60
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41e705e7_0830ffe9",
        "filename": "src/ic/ic.cc",
        "patchSetId": 8
      },
      "lineNbr": 1274,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "nit: unix_hacker_style for variable names",
      "range": {
        "startLine": 1274,
        "startChar": 22,
        "endLine": 1274,
        "endChar": 33
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce25e4cc_fc31377d",
        "filename": "src/ic/ic.cc",
        "patchSetId": 8
      },
      "lineNbr": 1280,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "this cast should not be necessary; JSProxy is a subclass of JSReceiver",
      "range": {
        "startLine": 1280,
        "startChar": 36,
        "endLine": 1280,
        "endChar": 54
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e31a71fb_7bc60928",
        "filename": "src/ic/ic.cc",
        "patchSetId": 8
      },
      "lineNbr": 1729,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "another unnecessary cast.\n\nWhy do you need this change at all? Given line 1721, both branches are identical, no?",
      "range": {
        "startLine": 1729,
        "startChar": 33,
        "endLine": 1729,
        "endChar": 51
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23d432be_853eb33e",
        "filename": "test/mjsunit/es6/proxies-get.js",
        "patchSetId": 8
      },
      "lineNbr": 70,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "debugging leftover? Please remove this (and the console.log below) again; it\u0027s better when tests are quiet by default.",
      "range": {
        "startLine": 70,
        "startChar": 2,
        "endLine": 70,
        "endChar": 26
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c7f785b_2af29152",
        "filename": "test/mjsunit/es6/proxies-get.js",
        "patchSetId": 8
      },
      "lineNbr": 146,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2017-08-01T04:00:30Z",
      "side": 1,
      "message": "nit: trailing full stop please.",
      "range": {
        "startLine": 146,
        "startChar": 35,
        "endLine": 146,
        "endChar": 40
      },
      "revId": "48d94b5f0f9d880ce2683e07b8145266bbfdd211",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}