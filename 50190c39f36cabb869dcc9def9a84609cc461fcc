{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7b003f60_b22d5ec7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1362925
      },
      "writtenOn": "2021-03-17T23:27:12Z",
      "side": 1,
      "message": "There\u0027s less immediate reason to do this for CallNew since there\u0027re no cross-cutting concerns with direct eval and optional chaining, but seems good to be consistent.",
      "revId": "50190c39f36cabb869dcc9def9a84609cc461fcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0660bdfe_11fd35a1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2021-03-18T09:55:54Z",
      "side": 1,
      "message": "++ for general consistency, at a glance similar comments as on the previous CL around first_spread_index and having a bool for the last-arg-spread fast path",
      "revId": "50190c39f36cabb869dcc9def9a84609cc461fcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb7ea5d5_e129cdad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1362925
      },
      "writtenOn": "2021-03-18T14:50:44Z",
      "side": 1,
      "message": "This CL refactors the ComputeFirstSpreadIndex and the \"has spread\" bitfield to a CallBase that\u0027s the superclass of both Call and CallNew nodes, so both nodes share the logic for computing the first spread index.",
      "parentUuid": "0660bdfe_11fd35a1",
      "revId": "50190c39f36cabb869dcc9def9a84609cc461fcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}