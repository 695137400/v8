{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4cef5a94_aa3bedad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2023-12-05T17:21:30Z",
      "side": 1,
      "message": "Another micro-optimization that speeds up Wasm graph building by ~7-8%, and thus total compile time by 0.5-1%. Could you take a look? (Or let me know if someone else would be a good person to review.)\nThanks!",
      "revId": "ad842be633f534ad1e25f2e63aff168c6718cab6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e1b7885_7f07c61c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2023-12-06T08:22:44Z",
      "side": 1,
      "message": "Great work, thanks! LGTM with some minor comments.",
      "revId": "ad842be633f534ad1e25f2e63aff168c6718cab6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "215b0d30_e661b63d",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3835,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2023-12-06T08:22:44Z",
      "side": 1,
      "message": "Since we are cleaning up, please mention the instance cache also.",
      "range": {
        "startLine": 3835,
        "startChar": 23,
        "endLine": 3835,
        "endChar": 24
      },
      "revId": "ad842be633f534ad1e25f2e63aff168c6718cab6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "330a89cd_b0438b14",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3835,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2023-12-06T11:58:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "215b0d30_e661b63d",
      "range": {
        "startLine": 3835,
        "startChar": 23,
        "endLine": 3835,
        "endChar": 24
      },
      "revId": "ad842be633f534ad1e25f2e63aff168c6718cab6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d34ece25_f28f1107",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3839,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2023-12-05T17:21:30Z",
      "side": 1,
      "message": "Moved below `InstanceCache` such that it is already defined.",
      "revId": "ad842be633f534ad1e25f2e63aff168c6718cab6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3457a652_4aa73807",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3839,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2023-12-06T08:22:44Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "d34ece25_f28f1107",
      "revId": "ad842be633f534ad1e25f2e63aff168c6718cab6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2ef8b51_38dafd9d",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3842,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2023-12-05T17:21:30Z",
      "side": 1,
      "message": "Partially extracted from `NewBlockWithPhis`.",
      "revId": "ad842be633f534ad1e25f2e63aff168c6718cab6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a150ad46_7e8f91d6",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3842,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2023-12-06T08:22:44Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "c2ef8b51_38dafd9d",
      "revId": "ad842be633f534ad1e25f2e63aff168c6718cab6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94e0fb6f_8f028263",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3844,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2023-12-06T08:22:44Z",
      "side": 1,
      "message": "nit: please run the formatter.",
      "range": {
        "startLine": 3844,
        "startChar": 38,
        "endLine": 3844,
        "endChar": 42
      },
      "revId": "ad842be633f534ad1e25f2e63aff168c6718cab6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61f20cac_3408fab7",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3844,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2023-12-06T11:58:42Z",
      "side": 1,
      "message": "Oh, I think this is a bug in `clang-format`. I ran it before uploading and when I remove the spaces manually and rerun, it adds them back.\n\nI searched for related issues, but could only find https://github.com/llvm/llvm-project/issues/43196 (from 2019), where it interpreted some arrows as trailing return arrows, thus adding spaces around them. It could be a similar cause here.\n\nI don\u0027t want to invest time debugging `clang-format` right now, so I just fixed this manually.",
      "parentUuid": "94e0fb6f_8f028263",
      "range": {
        "startLine": 3844,
        "startChar": 38,
        "endLine": 3844,
        "endChar": 42
      },
      "revId": "ad842be633f534ad1e25f2e63aff168c6718cab6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccb0b9f0_55b393f4",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3861,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2023-12-06T08:22:44Z",
      "side": 1,
      "message": "`ValueType` is a `uin32_t` under the hood, we can copy it trivially.",
      "range": {
        "startLine": 3854,
        "startChar": 6,
        "endLine": 3861,
        "endChar": 7
      },
      "revId": "ad842be633f534ad1e25f2e63aff168c6718cab6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55901f9c_9e6291c0",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3861,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2023-12-06T11:58:42Z",
      "side": 1,
      "message": "While it doesn\u0027t make a difference in this case (because `ValueType` is trivially copy-able, as you say), IIUC assigning or copying into `phi_types_` is actually undefined behavior, so `std::uninitialized_copy` and placement-new is required here.\n\nThe reasoning is that assigning/copy-constructing would conceptually call the assignment operator/copy-constructor on the uninitialized elements in `phi_types_`, which is UB. See https://stackoverflow.com/a/60910342.\n\nIn practice, the compiler optimizes it to be a memcpy either way (which I checked locally).",
      "parentUuid": "ccb0b9f0_55b393f4",
      "range": {
        "startLine": 3854,
        "startChar": 6,
        "endLine": 3861,
        "endChar": 7
      },
      "revId": "ad842be633f534ad1e25f2e63aff168c6718cab6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2281b175_df1e0772",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3876,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2023-12-05T17:21:30Z",
      "side": 1,
      "message": "Partially extracted from `StartFunction`.",
      "revId": "ad842be633f534ad1e25f2e63aff168c6718cab6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8945654c_7fdd27a1",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3876,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2023-12-06T08:22:44Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "2281b175_df1e0772",
      "revId": "ad842be633f534ad1e25f2e63aff168c6718cab6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de3bcf11_04b71765",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3897,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2023-12-05T17:21:30Z",
      "side": 1,
      "message": "This is extremely hot, so some micro-optimizations like avoiding divisions, multiplications, and keeping some fields close together pay out.",
      "revId": "ad842be633f534ad1e25f2e63aff168c6718cab6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35daeaed_8943ad22",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3897,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2023-12-06T08:22:44Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "de3bcf11_04b71765",
      "revId": "ad842be633f534ad1e25f2e63aff168c6718cab6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c44c641_5e919633",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3911,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2023-12-06T08:22:44Z",
      "side": 1,
      "message": "Again here, I think we do not need the `new` operator, just setting it will call the trivial copy constructor.",
      "range": {
        "startLine": 3911,
        "startChar": 6,
        "endLine": 3911,
        "endChar": 68
      },
      "revId": "ad842be633f534ad1e25f2e63aff168c6718cab6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30d55b3f_debe81d8",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3911,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2023-12-06T11:58:42Z",
      "side": 1,
      "message": "See above, same argument. IIUC, we must use placement-new since `phi_inputs_` is uninitialized storage, so calling the copy-constructor on its elements is UB.",
      "parentUuid": "4c44c641_5e919633",
      "range": {
        "startLine": 3911,
        "startChar": 6,
        "endLine": 3911,
        "endChar": 68
      },
      "revId": "ad842be633f534ad1e25f2e63aff168c6718cab6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}