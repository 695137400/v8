{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2e8042d5_c99242be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-04-10T10:49:36Z",
      "side": 1,
      "message": "PTAL! :)",
      "revId": "be836ee97863126fc50c0df055a921c701df2c13",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "499c6366_74145c12",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2024-04-12T08:41:30Z",
      "side": 1,
      "message": "LGTM",
      "revId": "be836ee97863126fc50c0df055a921c701df2c13",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e3358c7_146d2464",
        "filename": "src/compiler/turboshaft/operations.h",
        "patchSetId": 2
      },
      "lineNbr": 3327,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2024-04-12T08:22:36Z",
      "side": 1,
      "message": "Do we really need a separate operation for this? It feels like it should be merged into the other `StackCheckOp`, in particular this already has a `Kind::kLoopCheck`. I see that we have different inputs there, but I think it would be okay to make them optional, since this is a rather rare and special thing anyway. Wdyt?",
      "range": {
        "startLine": 3327,
        "startChar": 7,
        "endLine": 3327,
        "endChar": 26
      },
      "revId": "be836ee97863126fc50c0df055a921c701df2c13",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9afbd9f_64ba6c32",
        "filename": "src/compiler/turboshaft/operations.h",
        "patchSetId": 2
      },
      "lineNbr": 3327,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-04-12T08:27:03Z",
      "side": 1,
      "message": "This operator has 2 inputs, while StackCheck has none. It also doesn\u0027t have the same effects. Furthermore, as you can see in StackCheckLoweringReducer, the lowerings of StackCheck and JSLoopStackCheck share basically nothing. So I thought that another op would make sense.\n\nWe could changing the Kinds and Origin in StackCheck to have JSEntry, WasmEntry and WasmIteration so that it\u0027s clear that it\u0027s not adapted to JS iteration stack checks.\n\nThoughts?",
      "parentUuid": "3e3358c7_146d2464",
      "range": {
        "startLine": 3327,
        "startChar": 7,
        "endLine": 3327,
        "endChar": 26
      },
      "revId": "be836ee97863126fc50c0df055a921c701df2c13",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d12c3200_80c865fb",
        "filename": "src/compiler/turboshaft/operations.h",
        "patchSetId": 2
      },
      "lineNbr": 3327,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2024-04-12T08:41:30Z",
      "side": 1,
      "message": "SGTM",
      "parentUuid": "c9afbd9f_64ba6c32",
      "range": {
        "startLine": 3327,
        "startChar": 7,
        "endLine": 3327,
        "endChar": 26
      },
      "revId": "be836ee97863126fc50c0df055a921c701df2c13",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf3c674b_7ed8f66b",
        "filename": "src/compiler/turboshaft/operations.h",
        "patchSetId": 2
      },
      "lineNbr": 3327,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-04-12T09:05:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d12c3200_80c865fb",
      "range": {
        "startLine": 3327,
        "startChar": 7,
        "endLine": 3327,
        "endChar": 26
      },
      "revId": "be836ee97863126fc50c0df055a921c701df2c13",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}