{
  "comments": [
    {
      "key": {
        "uuid": "9c3db0bb_e1849c9e",
        "filename": "src/builtins/builtins.cc",
        "patchSetId": 8
      },
      "lineNbr": 326,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-08-24T14:12:11Z",
      "side": 1,
      "message": "I didn\u0027t notice this earlier, but the BUILTIN_LIST_BYTECODE_HANDLERS should be a flat list of all builtins, i.e. one entry per bytecode per operand scale. We rely on this assumption all over the place and manually expanding BCH entries at each use feels wrong. \n\nI do realize that it\u0027s a bit inconvenient since the BYTECODE_LIST doesn\u0027t have this format and AFAICT there\u0027s no easy way to do this with macro magic. Maybe we could generate handler lists during the build?\n\nWdyt?",
      "revId": "365b89ab1e10581ad0484d7d3d2c6684f0e633ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "189d98ba_1f88d4e2",
        "filename": "src/builtins/setup-builtins-internal.cc",
        "patchSetId": 8
      },
      "lineNbr": 255,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-08-24T14:12:11Z",
      "side": 1,
      "message": "Could we initialize with kIllegal instead to avoid snapshotting placeholder objects?",
      "revId": "365b89ab1e10581ad0484d7d3d2c6684f0e633ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b1bc9de_f79db417",
        "filename": "src/interpreter/setup-interpreter-internal.cc",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-08-24T14:12:11Z",
      "side": 1,
      "message": "Nit: We have Builtins::kNoBuiltinId for this purpose. Just fyi. Not important here since I assume this will go away in the follow-up.",
      "revId": "365b89ab1e10581ad0484d7d3d2c6684f0e633ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}