{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b7727875_9bcc0b43",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2022-11-07T12:35:59Z",
      "side": 1,
      "message": "Jakob, could you please take a look?\nI added the test and fixed a small inconsistency in data/elem printing.",
      "revId": "ccd91fe9bc3ee7dd198d5d14c042a43393850fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e26c760_af4513d1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2022-11-07T13:33:17Z",
      "side": 1,
      "message": "LGTM with one actionable comment.",
      "revId": "ccd91fe9bc3ee7dd198d5d14c042a43393850fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d96f863_c0470b0a",
        "filename": "src/wasm/names-provider.cc",
        "patchSetId": 4
      },
      "lineNbr": 330,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2022-11-07T12:35:59Z",
      "side": 1,
      "message": "I think if we print a elem/data segment name, we should also print the index (for consistency with functions/globals/tables etc.)",
      "revId": "ccd91fe9bc3ee7dd198d5d14c042a43393850fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87c7f666_34ea8ba6",
        "filename": "src/wasm/names-provider.cc",
        "patchSetId": 4
      },
      "lineNbr": 330,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2022-11-07T13:33:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8d96f863_c0470b0a",
      "revId": "ccd91fe9bc3ee7dd198d5d14c042a43393850fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcf7b068_a00b2ca9",
        "filename": "test/unittests/wasm/wasm-disassembler-unittest-names.wat.inc",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2022-11-07T12:35:59Z",
      "side": 1,
      "message": "This might be a bit larger change (printing types only if they are named?) and also not very critical, I would defer that to later/a separate CL.",
      "revId": "ccd91fe9bc3ee7dd198d5d14c042a43393850fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb33e444_be4eb8e7",
        "filename": "test/unittests/wasm/wasm-disassembler-unittest-names.wat.inc",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2022-11-07T13:33:17Z",
      "side": 1,
      "message": "Ack.\nThis is intentional legacy behavior for now: we only print struct/array types, not function types. See `kSkipFunctionTypesInTypeSection` in `wasm-disassembler-impl.h`.",
      "parentUuid": "fcf7b068_a00b2ca9",
      "revId": "ccd91fe9bc3ee7dd198d5d14c042a43393850fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e132006_e0d1de6d",
        "filename": "test/unittests/wasm/wasm-disassembler-unittest-names.wat.inc",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2022-11-07T12:35:59Z",
      "side": 1,
      "message": "See above: If a function has a named type in its signature, I think we should print the type as a reference to that name, not inline as we do right now. Since it depends on printing the type itself first, I\u0027ll defer that for the same reason as above.",
      "revId": "ccd91fe9bc3ee7dd198d5d14c042a43393850fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5eabae5_4601f6de",
        "filename": "test/unittests/wasm/wasm-disassembler-unittest-names.wat.inc",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2022-11-07T13:33:17Z",
      "side": 1,
      "message": "Ack.\n(It\u0027s not clear that changing this would ease debugging. Imagine having to scroll up hundreds of thousands of lines from a function definition just to find the named signature definition in the type section!)",
      "parentUuid": "4e132006_e0d1de6d",
      "revId": "ccd91fe9bc3ee7dd198d5d14c042a43393850fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb5ac294_93e0339a",
        "filename": "test/unittests/wasm/wasm-disassembler-unittest-names.wat.inc",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2022-11-07T14:07:24Z",
      "side": 1,
      "message": "That\u0027s a good point, hadn\u0027t thought about UX before!",
      "parentUuid": "f5eabae5_4601f6de",
      "revId": "ccd91fe9bc3ee7dd198d5d14c042a43393850fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1711729d_249ecc60",
        "filename": "test/unittests/wasm/wasm-disassembler-unittest-names.wat.inc",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2022-11-07T12:35:59Z",
      "side": 1,
      "message": "Is this still working as intended, i.e., not printing data segment names?",
      "revId": "ccd91fe9bc3ee7dd198d5d14c042a43393850fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa126591_12d29b3c",
        "filename": "test/unittests/wasm/wasm-disassembler-unittest-names.wat.inc",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2022-11-07T13:33:17Z",
      "side": 1,
      "message": "We haven\u0027t made a decision to change it. Arguably having tests is a prerequisite for making such decisions ðŸ˜Š",
      "parentUuid": "1711729d_249ecc60",
      "revId": "ccd91fe9bc3ee7dd198d5d14c042a43393850fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c85260a0_24ba8f21",
        "filename": "test/unittests/wasm/wasm-disassembler-unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2022-11-07T13:33:17Z",
      "side": 1,
      "message": "I think it would make sense to use `base::Vector\u003cconst byte\u003e` as the type here (and move the `base::ArrayVector` call to the callers), then you don\u0027t need the templatization and this unsightly type definition.",
      "range": {
        "startLine": 24,
        "startChar": 29,
        "endLine": 24,
        "endChar": 58
      },
      "revId": "ccd91fe9bc3ee7dd198d5d14c042a43393850fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab9939a7_a18f0474",
        "filename": "test/unittests/wasm/wasm-disassembler-unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2022-11-07T14:07:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c85260a0_24ba8f21",
      "range": {
        "startLine": 24,
        "startChar": 29,
        "endLine": 24,
        "endChar": 58
      },
      "revId": "ccd91fe9bc3ee7dd198d5d14c042a43393850fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f62e398c_c1f1265b",
        "filename": "test/unittests/wasm/wasm-disassembler-unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2022-11-07T12:35:59Z",
      "side": 1,
      "message": "Adding more disassembler tests should be easy now: Just add the two .inc files below, and add a new `TEST_F` here.",
      "revId": "ccd91fe9bc3ee7dd198d5d14c042a43393850fa6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}