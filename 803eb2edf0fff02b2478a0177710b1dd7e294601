{
  "comments": [
    {
      "key": {
        "uuid": "977da0dc_b471d406",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-07-24T14:34:27Z",
      "side": 1,
      "message": "Manos: PTAL.\n\nTobias: FYI, and please give formal +1.",
      "revId": "803eb2edf0fff02b2478a0177710b1dd7e294601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "843424af_22def9e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2020-07-24T15:06:46Z",
      "side": 1,
      "message": "Nice work. I feel this should work for subtypes of (ref eq) as well.",
      "revId": "803eb2edf0fff02b2478a0177710b1dd7e294601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "983986df_95a4f201",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 5791,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2020-07-24T15:06:46Z",
      "side": 1,
      "message": "Shouldn\u0027t this also work for array and struct types?",
      "revId": "803eb2edf0fff02b2478a0177710b1dd7e294601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed0caab3_259fcc09",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 5791,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-07-24T16:22:36Z",
      "side": 1,
      "message": "Exporting to JS would \"just work\" for concrete subtypes as well, yes. I\u0027ve restricted it to eqref for symmetry with the other direction.",
      "parentUuid": "983986df_95a4f201",
      "revId": "803eb2edf0fff02b2478a0177710b1dd7e294601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "552f5911_c2faa2be",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 5906,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2020-07-24T15:06:46Z",
      "side": 1,
      "message": "Same as above.",
      "revId": "803eb2edf0fff02b2478a0177710b1dd7e294601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d85a5165_d0556a66",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 5906,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-07-24T16:22:36Z",
      "side": 1,
      "message": "Different answer though: if we wanted to support concrete types here, we\u0027d have to type-check the incoming value, so we\u0027d need to get the right RTT from somewhere. By allowing only eqref, we move the type-checking into the code consuming these values (such code will have to use ref.test/ref.cast/br_on_cast).",
      "parentUuid": "552f5911_c2faa2be",
      "revId": "803eb2edf0fff02b2478a0177710b1dd7e294601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2c35e7f_d3e7a15f",
        "filename": "src/wasm/wasm-opcodes.cc",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2020-07-24T15:06:46Z",
      "side": 1,
      "message": "Same as above.",
      "revId": "803eb2edf0fff02b2478a0177710b1dd7e294601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c7c651a_dd7782e3",
        "filename": "src/wasm/wasm-opcodes.cc",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-07-24T16:22:36Z",
      "side": 1,
      "message": "This just has to match the above.",
      "parentUuid": "a2c35e7f_d3e7a15f",
      "revId": "803eb2edf0fff02b2478a0177710b1dd7e294601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f99aa93f_19b80404",
        "filename": "test/cctest/wasm/test-gc.cc",
        "patchSetId": 1
      },
      "lineNbr": 816,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2020-07-24T15:06:46Z",
      "side": 1,
      "message": "We should add a DefineExportedFunction() helper.",
      "revId": "803eb2edf0fff02b2478a0177710b1dd7e294601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d424ca0b_93c1f134",
        "filename": "test/cctest/wasm/test-gc.cc",
        "patchSetId": 1
      },
      "lineNbr": 816,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-07-24T16:22:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f99aa93f_19b80404",
      "revId": "803eb2edf0fff02b2478a0177710b1dd7e294601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}