{
  "comments": [
    {
      "key": {
        "uuid": "ad4732ef_b055ca49",
        "filename": "src/compiler/bytecode-graph-builder.cc",
        "patchSetId": 3
      },
      "lineNbr": 1685,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2017-05-22T19:35:20Z",
      "side": 1,
      "message": "This is a deopt loop, as TurboFan doesn\u0027t learn anything on next attempt. I\u0027m not exactly sure how to address this, but maybe as a first safety guard, add a global protector on the isolate and if the protector is invalidated (because we hit the hole somewhere) don\u0027t generate this operator but generate the explicit control flow and in the case below.",
      "revId": "46c896c1e79d37dd0f5c8b756a3ed73910b0cd0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b34907f7_d88420d6",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 3
      },
      "lineNbr": 2017,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-05-23T09:44:29Z",
      "side": 1,
      "message": "As discussed, let\u0027s see if we can do the check on the variable name being \"this\" instead of having the extra operand.",
      "range": {
        "startLine": 2017,
        "startChar": 53,
        "endLine": 2017,
        "endChar": 61
      },
      "revId": "46c896c1e79d37dd0f5c8b756a3ed73910b0cd0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e00c08dd_1ab2aac9",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 3
      },
      "lineNbr": 2188,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-05-23T09:44:29Z",
      "side": 1,
      "message": "As discussed offline, let\u0027s unify this with the other bytecode and take a name (which will always be \"this\" for now), or name it more specifically to be about super already being called.",
      "range": {
        "startLine": 2188,
        "startChar": 15,
        "endLine": 2188,
        "endChar": 29
      },
      "revId": "46c896c1e79d37dd0f5c8b756a3ed73910b0cd0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}