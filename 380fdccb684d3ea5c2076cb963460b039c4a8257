{
  "comments": [
    {
      "key": {
        "uuid": "30256054_eb259cb8",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 20
      },
      "lineNbr": 830,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2017-10-30T16:32:11Z",
      "side": 1,
      "message": "Why not just zone() :)",
      "revId": "380fdccb684d3ea5c2076cb963460b039c4a8257",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24d47474_7421c750",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 20
      },
      "lineNbr": 830,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2017-10-30T22:38:01Z",
      "side": 1,
      "message": "Ha-ha! There was no zone() before recent rebasing :)",
      "parentUuid": "30256054_eb259cb8",
      "revId": "380fdccb684d3ea5c2076cb963460b039c4a8257",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a4a84f6_40a47baa",
        "filename": "src/runtime/runtime-classes.cc",
        "patchSetId": 20
      },
      "lineNbr": 143,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2017-10-30T16:32:11Z",
      "side": 1,
      "message": "I\u0027ve seen similar code in objects.cc:\n\n  Handle\u003cName\u003e property_name \u003d\n      key-\u003eIsName()\n          ? Handle\u003cName\u003e::cast(key)\n          : Handle\u003cName\u003e::cast(isolate-\u003efactory()-\u003eNumberToString(key));\n\nThat\u0027s actually more general since it also supports HeapNumber keys for the full [0,kmaxuint32[ range. I suppose that\u0027s just untested and unsupported in this CL?\n\nShouldn\u0027t we just have a conversion method on Dictionary:: KeyToName or so that\u0027s just a cast for NameDictionary and NumberToString for NumberDictionary? Or just 2 local helper methods.",
      "revId": "380fdccb684d3ea5c2076cb963460b039c4a8257",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0d5df4c_12726e06",
        "filename": "src/runtime/runtime-classes.cc",
        "patchSetId": 20
      },
      "lineNbr": 143,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2017-10-30T22:38:01Z",
      "side": 1,
      "message": "We can get here only if the key is a computed property name, in which case the bytecode generator explicitly adds ToName bytecodes to ensure that the key is properly converted to Name. And when we \"merge\" the computed property into existing template we use Name::AsArrayIndex() to figure out in which dictionary should this key go (see line 372 below).\n\nSo indeed, we already know the kind of key depending on the kind of dictionary we are going to store this key to and additional runtime check is not necessary. Moreover we could avoid converting the Smi key back to Name if we proparate the result of ToName call here.\n \nFor now I added a TODO and 2 local helper functions: KeyToName\u003cDictionary\u003e().",
      "parentUuid": "3a4a84f6_40a47baa",
      "revId": "380fdccb684d3ea5c2076cb963460b039c4a8257",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}