{
  "comments": [
    {
      "key": {
        "uuid": "17541678_a87ed2cd",
        "filename": "src/builtins/builtins-definitions.h",
        "patchSetId": 3
      },
      "lineNbr": 1403,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "nit: Lets have this right after {WasmThrow} to keep the order of the two lists in sync somewhat.",
      "range": {
        "startLine": 1403,
        "startChar": 2,
        "endLine": 1403,
        "endChar": 16
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db22f099_f55b239a",
        "filename": "src/builtins/builtins-definitions.h",
        "patchSetId": 3
      },
      "lineNbr": 1403,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-06T12:26:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17541678_a87ed2cd",
      "range": {
        "startLine": 1403,
        "startChar": 2,
        "endLine": 1403,
        "endChar": 16
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec884c31_e72a3288",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 6090,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "Would it be possible to use the {WasmWrapperGraphBuilder} for this instead? This should also safe us from faking a {CompilationEnv} above.",
      "range": {
        "startLine": 6090,
        "startChar": 2,
        "endLine": 6090,
        "endChar": 18
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d3f55af_8ac36c02",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 6090,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-06T12:26:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec884c31_e72a3288",
      "range": {
        "startLine": 6090,
        "startChar": 2,
        "endLine": 6090,
        "endChar": 18
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1daeab48_a8a8e595",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 6127,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "nit: I think this should be called {BuildCapiCallWrapper} instead, to avoid confusion. Because the call-site itself remains a normal wasm call-site. Also, having this on {WasmWrapperGraphBuilder} would be preferable I think.",
      "range": {
        "startLine": 6127,
        "startChar": 5,
        "endLine": 6127,
        "endChar": 36
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3be04c5_0f3a0651",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 6127,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-06T12:26:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1daeab48_a8a8e595",
      "range": {
        "startLine": 6127,
        "startChar": 5,
        "endLine": 6127,
        "endChar": 36
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "903d298e_8a301073",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 6176,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "suggestion: It is totally fine to embed the call target into the wrapper. Another alternative would be to load the call target from the callable (i.e. from the {WasmCapiFunction} object), which would in turn allow us to cache and re-use wrappers for the same signature. WDYT? Would it make sense to leave a TODO in this regard?",
      "range": {
        "startLine": 6174,
        "startChar": 0,
        "endLine": 6176,
        "endChar": 0
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77ed7d03_3b6b770b",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 6176,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-06T12:26:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "903d298e_8a301073",
      "range": {
        "startLine": 6174,
        "startChar": 0,
        "endLine": 6176,
        "endChar": 0
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02b0ea83_8bb6f4b8",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 6190,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "nit: Likewise, I think using the {WasmThrowDescriptor} here is totally fine and we should just drop the {WasmReThrowDescriptor}",
      "range": {
        "startLine": 6190,
        "startChar": 2,
        "endLine": 6190,
        "endChar": 21
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "571830a4_dbe2ca36",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 6190,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-06T12:26:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02b0ea83_8bb6f4b8",
      "range": {
        "startLine": 6190,
        "startChar": 2,
        "endLine": 6190,
        "endChar": 21
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb010c52_85ddd38a",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 6213,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "nit: Lets use {GetSafeLoadOperator} here instead.",
      "range": {
        "startLine": 6213,
        "startChar": 10,
        "endLine": 6213,
        "endChar": 77
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64befeda_a502fe97",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 6213,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-06T12:26:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb010c52_85ddd38a",
      "range": {
        "startLine": 6213,
        "startChar": 10,
        "endLine": 6213,
        "endChar": 77
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c13b301e_7d17e607",
        "filename": "src/interface-descriptors.h",
        "patchSetId": 3
      },
      "lineNbr": 1204,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "suggestion: I think it would be fine to just reuse the {WasmThrowDescriptor} instead of introducing a new descriptor, since the interface for them is the same.",
      "range": {
        "startLine": 1197,
        "startChar": 0,
        "endLine": 1204,
        "endChar": 2
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7321f5b_386d7318",
        "filename": "src/interface-descriptors.h",
        "patchSetId": 3
      },
      "lineNbr": 1204,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-06T12:26:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c13b301e_7d17e607",
      "range": {
        "startLine": 1197,
        "startChar": 0,
        "endLine": 1204,
        "endChar": 2
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a35ad4a3_29494e30",
        "filename": "src/objects/shared-function-info.h",
        "patchSetId": 3
      },
      "lineNbr": 364,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "nit: Move down one line so that functions remain grouped.",
      "range": {
        "startLine": 364,
        "startChar": 0,
        "endLine": 364,
        "endChar": 46
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e241b10_e930aa6e",
        "filename": "src/objects/shared-function-info.h",
        "patchSetId": 3
      },
      "lineNbr": 364,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-06T12:26:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a35ad4a3_29494e30",
      "range": {
        "startLine": 364,
        "startChar": 0,
        "endLine": 364,
        "endChar": 46
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "852916ef_d2f816a7",
        "filename": "src/wasm/c-api.cc",
        "patchSetId": 3
      },
      "lineNbr": 1695,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2019-05-06T12:26:46Z",
      "side": 1,
      "message": "Could you wrap this code in a {WasmCapiFunction::New} function? This would make it consistent with other WebAssembly objects.",
      "range": {
        "startLine": 1677,
        "startChar": 2,
        "endLine": 1695,
        "endChar": 59
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5acba972_10d78e98",
        "filename": "src/wasm/c-api.cc",
        "patchSetId": 3
      },
      "lineNbr": 1695,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-07T17:02:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "852916ef_d2f816a7",
      "range": {
        "startLine": 1677,
        "startChar": 2,
        "endLine": 1695,
        "endChar": 59
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d82629c_98b0c51d",
        "filename": "src/wasm/module-instantiate.cc",
        "patchSetId": 3
      },
      "lineNbr": 800,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "nit: I am not sure what lock this TODO refers to. Could you elaborate? Otherwise I\u0027d vote for dropping this TODO.",
      "range": {
        "startLine": 800,
        "startChar": 6,
        "endLine": 800,
        "endChar": 74
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db75d481_d9607cd5",
        "filename": "src/wasm/module-instantiate.cc",
        "patchSetId": 3
      },
      "lineNbr": 800,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-06T12:26:09Z",
      "side": 1,
      "message": "Dropped. I had faithfully taken that over from Bill\u0027s prototype; I\u0027m not quite sure what it referred to either.",
      "parentUuid": "1d82629c_98b0c51d",
      "range": {
        "startLine": 800,
        "startChar": 6,
        "endLine": 800,
        "endChar": 74
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e7f9e26_0ccfdeca",
        "filename": "src/wasm/wasm-objects-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 315,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "nit: Lets move this down to the {WasmCapiFunctionData} section below.",
      "range": {
        "startLine": 315,
        "startChar": 0,
        "endLine": 315,
        "endChar": 54
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "156aeb41_5edb9112",
        "filename": "src/wasm/wasm-objects-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 315,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-06T12:26:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e7f9e26_0ccfdeca",
      "range": {
        "startLine": 315,
        "startChar": 0,
        "endLine": 315,
        "endChar": 54
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23a5f772_39aa50cd",
        "filename": "src/wasm/wasm-objects-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 317,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "nit: Likewise.",
      "range": {
        "startLine": 317,
        "startChar": 0,
        "endLine": 317,
        "endChar": 35
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56a8dee4_64c777a1",
        "filename": "src/wasm/wasm-objects-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 317,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-06T12:26:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "23a5f772_39aa50cd",
      "range": {
        "startLine": 317,
        "startChar": 0,
        "endLine": 317,
        "endChar": 35
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abb39680_2df248ed",
        "filename": "src/wasm/wasm-objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 898,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "nit: Comment no longer applies.",
      "range": {
        "startLine": 898,
        "startChar": 2,
        "endLine": 898,
        "endChar": 71
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "813878ec_0670607f",
        "filename": "src/wasm/wasm-objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 898,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-06T12:26:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "abb39680_2df248ed",
      "range": {
        "startLine": 898,
        "startChar": 2,
        "endLine": 898,
        "endChar": 71
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c29ca855_b0d7867f",
        "filename": "src/wasm/wasm-objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 936,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2019-05-06T12:26:46Z",
      "side": 1,
      "message": "Hmm, why don\u0027t you have to call UpdateDispatchTables here?",
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdaca931_137a09ea",
        "filename": "src/wasm/wasm-objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 936,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-07T17:02:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c29ca855_b0d7867f",
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df2b15e2_eb17efa1",
        "filename": "src/wasm/wasm-objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 959,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "The fall-thru path below assumes that there are only {Null} and {Tuple2} left. I think the host function path is not covered. Adding Andreas to double-check that I am not missing any other paths here.",
      "range": {
        "startLine": 956,
        "startChar": 0,
        "endLine": 959,
        "endChar": 3
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb6d081f_39faec4d",
        "filename": "src/wasm/wasm-objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 959,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-06T12:26:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df2b15e2_eb17efa1",
      "range": {
        "startLine": 956,
        "startChar": 0,
        "endLine": 959,
        "endChar": 3
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf53f384_adc460fc",
        "filename": "src/wasm/wasm-objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 959,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2019-05-06T12:26:46Z",
      "side": 1,
      "message": "Yes, with the anyref proposal we implemented lazy initialization of function tables, see https://docs.google.com/document/d/1gtgsd7aXzqxyeztlx3HKs1ClmSoTEE8mFDrrCa7Xgps/edit#. I.e. during instantiation, we do not initialize function tables with WasmExportedFunctions, but only with an (instance, function_index) tuple. The code below finally creates the WasmExportedFunction from this tuple.\n\nI guess you have to handle WasmCapiFunction here:\n\nif (WasmCapiFunction::IsWasmCapiFunction(*entry)) {\n  return entry;\n}",
      "parentUuid": "df2b15e2_eb17efa1",
      "range": {
        "startLine": 956,
        "startChar": 0,
        "endLine": 959,
        "endChar": 3
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3902bc9_f8d7d0ef",
        "filename": "src/wasm/wasm-objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 959,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-07T17:02:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf53f384_adc460fc",
      "range": {
        "startLine": 956,
        "startChar": 0,
        "endLine": 959,
        "endChar": 3
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6261a59b_63a2a595",
        "filename": "src/wasm/wasm-objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 1816,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2019-05-07T11:50:53Z",
      "side": 1,
      "message": "Why a DCHECK and not a \"return false\"? Can\u0027t it happen that {sig} has one more param, but one return less, and all params matched so far? In that caser, there would not be a marker here, but another param.",
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29cf10c3_2d53985d",
        "filename": "src/wasm/wasm-objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 1816,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-07T12:01:52Z",
      "side": 1,
      "message": "I initially had the same thought. But then I realized that the kWasmStmt will be part of either the parameters or returns and hence produce a mismatch in either of those sets. Nice trick. But since we both wondered the same thing, I think this deserves at least a comment. :)",
      "parentUuid": "6261a59b_63a2a595",
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d540a43_098846fc",
        "filename": "src/wasm/wasm-objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 1816,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2019-05-07T12:04:11Z",
      "side": 1,
      "message": "Ah, that\u0027s true, we would get a mismatch in the loop below. But still, this DCHECK would trigger first, so we would crash, right?\nConsider the simple case where param_count \u003d\u003d 0.",
      "parentUuid": "29cf10c3_2d53985d",
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "695bc901_f6ae5075",
        "filename": "src/wasm/wasm-objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 1816,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-07T17:02:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d540a43_098846fc",
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "107183ec_f882ac13",
        "filename": "src/wasm/wasm-objects.h",
        "patchSetId": 3
      },
      "lineNbr": 673,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "It looks like both of these fields are embedder-controlled and stored as raw pointers. What happens if they are not word-aligned? I has the suspicion the GC will trip over them.",
      "range": {
        "startLine": 672,
        "startChar": 0,
        "endLine": 673,
        "endChar": 48
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae8ca8e7_a4e4bb1d",
        "filename": "src/wasm/wasm-objects.h",
        "patchSetId": 3
      },
      "lineNbr": 673,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-06T12:26:09Z",
      "side": 1,
      "message": "Very good point. Done.",
      "parentUuid": "107183ec_f882ac13",
      "range": {
        "startLine": 672,
        "startChar": 0,
        "endLine": 673,
        "endChar": 48
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}