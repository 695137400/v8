{
  "comments": [
    {
      "key": {
        "uuid": "17541678_a87ed2cd",
        "filename": "src/builtins/builtins-definitions.h",
        "patchSetId": 3
      },
      "lineNbr": 1403,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "nit: Lets have this right after {WasmThrow} to keep the order of the two lists in sync somewhat.",
      "range": {
        "startLine": 1403,
        "startChar": 2,
        "endLine": 1403,
        "endChar": 16
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec884c31_e72a3288",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 6090,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "Would it be possible to use the {WasmWrapperGraphBuilder} for this instead? This should also safe us from faking a {CompilationEnv} above.",
      "range": {
        "startLine": 6090,
        "startChar": 2,
        "endLine": 6090,
        "endChar": 18
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1daeab48_a8a8e595",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 6127,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "nit: I think this should be called {BuildCapiCallWrapper} instead, to avoid confusion. Because the call-site itself remains a normal wasm call-site. Also, having this on {WasmWrapperGraphBuilder} would be preferable I think.",
      "range": {
        "startLine": 6127,
        "startChar": 5,
        "endLine": 6127,
        "endChar": 36
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "903d298e_8a301073",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 6176,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "suggestion: It is totally fine to embed the call target into the wrapper. Another alternative would be to load the call target from the callable (i.e. from the {WasmCapiFunction} object), which would in turn allow us to cache and re-use wrappers for the same signature. WDYT? Would it make sense to leave a TODO in this regard?",
      "range": {
        "startLine": 6174,
        "startChar": 0,
        "endLine": 6176,
        "endChar": 0
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02b0ea83_8bb6f4b8",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 6190,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "nit: Likewise, I think using the {WasmThrowDescriptor} here is totally fine and we should just drop the {WasmReThrowDescriptor}",
      "range": {
        "startLine": 6190,
        "startChar": 2,
        "endLine": 6190,
        "endChar": 21
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb010c52_85ddd38a",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 6213,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "nit: Lets use {GetSafeLoadOperator} here instead.",
      "range": {
        "startLine": 6213,
        "startChar": 10,
        "endLine": 6213,
        "endChar": 77
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c13b301e_7d17e607",
        "filename": "src/interface-descriptors.h",
        "patchSetId": 3
      },
      "lineNbr": 1204,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "suggestion: I think it would be fine to just reuse the {WasmThrowDescriptor} instead of introducing a new descriptor, since the interface for them is the same.",
      "range": {
        "startLine": 1197,
        "startChar": 0,
        "endLine": 1204,
        "endChar": 2
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a35ad4a3_29494e30",
        "filename": "src/objects/shared-function-info.h",
        "patchSetId": 3
      },
      "lineNbr": 364,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "nit: Move down one line so that functions remain grouped.",
      "range": {
        "startLine": 364,
        "startChar": 0,
        "endLine": 364,
        "endChar": 46
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d82629c_98b0c51d",
        "filename": "src/wasm/module-instantiate.cc",
        "patchSetId": 3
      },
      "lineNbr": 800,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "nit: I am not sure what lock this TODO refers to. Could you elaborate? Otherwise I\u0027d vote for dropping this TODO.",
      "range": {
        "startLine": 800,
        "startChar": 6,
        "endLine": 800,
        "endChar": 74
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e7f9e26_0ccfdeca",
        "filename": "src/wasm/wasm-objects-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 315,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "nit: Lets move this down to the {WasmCapiFunctionData} section below.",
      "range": {
        "startLine": 315,
        "startChar": 0,
        "endLine": 315,
        "endChar": 54
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23a5f772_39aa50cd",
        "filename": "src/wasm/wasm-objects-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 317,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "nit: Likewise.",
      "range": {
        "startLine": 317,
        "startChar": 0,
        "endLine": 317,
        "endChar": 35
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abb39680_2df248ed",
        "filename": "src/wasm/wasm-objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 898,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "nit: Comment no longer applies.",
      "range": {
        "startLine": 898,
        "startChar": 2,
        "endLine": 898,
        "endChar": 71
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df2b15e2_eb17efa1",
        "filename": "src/wasm/wasm-objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 959,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "The fall-thru path below assumes that there are only {Null} and {Tuple2} left. I think the host function path is not covered. Adding Andreas to double-check that I am not missing any other paths here.",
      "range": {
        "startLine": 956,
        "startChar": 0,
        "endLine": 959,
        "endChar": 3
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "107183ec_f882ac13",
        "filename": "src/wasm/wasm-objects.h",
        "patchSetId": 3
      },
      "lineNbr": 673,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-06T09:57:00Z",
      "side": 1,
      "message": "It looks like both of these fields are embedder-controlled and stored as raw pointers. What happens if they are not word-aligned? I has the suspicion the GC will trip over them.",
      "range": {
        "startLine": 672,
        "startChar": 0,
        "endLine": 673,
        "endChar": 48
      },
      "revId": "14eabdbcb76b5b80c5d800783d1bb40c88e727b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}