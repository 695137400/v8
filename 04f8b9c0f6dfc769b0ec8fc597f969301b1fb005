{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "57bd66c2_bca09fcb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2022-04-29T10:38:47Z",
      "side": 1,
      "message": "lgtm",
      "revId": "04f8b9c0f6dfc769b0ec8fc597f969301b1fb005",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36a39592_b58409b1",
        "filename": "src/base/platform/platform-win32.cc",
        "patchSetId": 1
      },
      "lineNbr": 1012,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2022-04-29T10:38:47Z",
      "side": 1,
      "message": "semi-related: I think it would be nice if we could forward them to the embedder OOM handler. \n\nWe created an abstraction for cppgc which we use there but could really move that to src/base. The annoying part is threading it through where we need it.\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:v8/src/heap/cppgc/platform.h;l\u003d18;bpv\u003d1;bpt\u003d1",
      "range": {
        "startLine": 1012,
        "startChar": 15,
        "endLine": 1012,
        "endChar": 30
      },
      "revId": "04f8b9c0f6dfc769b0ec8fc597f969301b1fb005",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "560f2dba_150136f7",
        "filename": "src/base/platform/platform-win32.cc",
        "patchSetId": 1
      },
      "lineNbr": 1012,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2022-04-29T11:27:46Z",
      "side": 1,
      "message": "You mean forward OOMs? Yeah I guess that could be hooked in here. Alternatively, the users of these APIs (e.g. `SetPagePermission`) will receive the OOM (due to `fase` being returned) and can forward to an OOM handler themselves with potentially more context.",
      "parentUuid": "36a39592_b58409b1",
      "range": {
        "startLine": 1012,
        "startChar": 15,
        "endLine": 1012,
        "endChar": 30
      },
      "revId": "04f8b9c0f6dfc769b0ec8fc597f969301b1fb005",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72bc12de_bbc33491",
        "filename": "src/base/platform/platform-win32.cc",
        "patchSetId": 1
      },
      "lineNbr": 1012,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2022-04-29T11:31:58Z",
      "side": 1,
      "message": "Ah, yeah, sure, the caller should do that.",
      "parentUuid": "560f2dba_150136f7",
      "range": {
        "startLine": 1012,
        "startChar": 15,
        "endLine": 1012,
        "endChar": 30
      },
      "revId": "04f8b9c0f6dfc769b0ec8fc597f969301b1fb005",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "04f8b9c0f6dfc769b0ec8fc597f969301b1fb005",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "04f8b9c0f6dfc769b0ec8fc597f969301b1fb005",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "04f8b9c0f6dfc769b0ec8fc597f969301b1fb005",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "04f8b9c0f6dfc769b0ec8fc597f969301b1fb005",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}