{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3bb89f17_51a3237b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2021-07-11T16:00:06Z",
      "side": 1,
      "message": "Two small fixes, plus some improved comments.\n\nPlease give this somewhat higher priority than other BigInt-related reviews: this should make it into the upcoming 9.3 branch on Thursday (otherwise we\u0027ll have to turn off FFT multiplication on that branch, which is of course also a possibility).",
      "revId": "982316fe948f95648f2ab0b154510346ea0a7698",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "505242e0_cbfb8796",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-07-12T10:17:21Z",
      "side": 1,
      "message": "LGTM, just a minor suggestion. Thanks!",
      "revId": "982316fe948f95648f2ab0b154510346ea0a7698",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "687be2a0_1c6f8d7e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2021-07-12T10:45:37Z",
      "side": 1,
      "message": "Thanks for the super quick review! Comment addressed; landing.",
      "revId": "982316fe948f95648f2ab0b154510346ea0a7698",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9dc36a5_c82ef681",
        "filename": "src/bigint/mul-fft.cc",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2021-07-11T16:00:06Z",
      "side": 1,
      "message": "Bug fix 1: we must not ignore this source digit. In rare cases, there may be a `1` in there.",
      "range": {
        "startLine": 70,
        "startChar": 26,
        "endLine": 70,
        "endChar": 36
      },
      "revId": "982316fe948f95648f2ab0b154510346ea0a7698",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "937a9a94_8b30e742",
        "filename": "src/bigint/mul-fft.cc",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-07-12T10:17:21Z",
      "side": 1,
      "message": "Minor suggestion - should we do a memset(0) here? Will it be faster?",
      "range": {
        "startLine": 211,
        "startChar": 6,
        "endLine": 211,
        "endChar": 33
      },
      "revId": "982316fe948f95648f2ab0b154510346ea0a7698",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e1221ec_6f441541",
        "filename": "src/bigint/mul-fft.cc",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2021-07-12T10:45:37Z",
      "side": 1,
      "message": "Shouldn\u0027t make a performance difference: Clang with -O3 compiles such loops to `memset(0)` calls anyway, and this notation is more readable insofar as it makes it more obvious that this is functionally the same as line 206, just without the need to read `input[i]` from memory.",
      "parentUuid": "937a9a94_8b30e742",
      "range": {
        "startLine": 211,
        "startChar": 6,
        "endLine": 211,
        "endChar": 33
      },
      "revId": "982316fe948f95648f2ab0b154510346ea0a7698",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9499bbdd_fc3b0073",
        "filename": "src/bigint/mul-fft.cc",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2021-07-11T16:00:06Z",
      "side": 1,
      "message": "Bug fix 2: this part of the ongoing iteration over all `i` values loop must happen *before* the next for-loop in lines 216-219 (it\u0027s the same code as before, just moved around).",
      "range": {
        "startLine": 209,
        "startChar": 4,
        "endLine": 212,
        "endChar": 5
      },
      "revId": "982316fe948f95648f2ab0b154510346ea0a7698",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2537fbe8_96cafaf7",
        "filename": "src/bigint/mul-fft.cc",
        "patchSetId": 1
      },
      "lineNbr": 244,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2021-07-11T16:00:06Z",
      "side": 1,
      "message": "Another instance of bug fix 2, same situation: this must happen before lines 247-252.",
      "range": {
        "startLine": 240,
        "startChar": 4,
        "endLine": 244,
        "endChar": 5
      },
      "revId": "982316fe948f95648f2ab0b154510346ea0a7698",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}