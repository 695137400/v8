{
  "comments": [
    {
      "key": {
        "uuid": "3375aad5_7c6b8dbe",
        "filename": "src/ast/scopes.cc",
        "patchSetId": 12
      },
      "lineNbr": 2241,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2019-09-30T13:03:47Z",
      "side": 1,
      "message": "Is there a reason to remove it from the list? If a variable isn\u0027t used it should be dropped automatically?\n\nIf this was a response to the \".\" (class {}) variable in case of eval; that simply needs special code because \"eval\" + no private methods simply doesn\u0027t know that it can\u0027t use \".\" in any other way.",
      "revId": "0842c08b16edd8ddf1faa275307d739b689c424a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e621a2b6_4fcc0b90",
        "filename": "src/ast/scopes.cc",
        "patchSetId": 12
      },
      "lineNbr": 2241,
      "author": {
        "id": 1288325
      },
      "writtenOn": "2019-09-30T15:13:12Z",
      "side": 1,
      "message": "Should I just special case this in Scope::MustAllocate so that the anonymous class variable don\u0027t get marked as used if it\u0027s only referenced through potential eval with static private methods?",
      "parentUuid": "3375aad5_7c6b8dbe",
      "revId": "0842c08b16edd8ddf1faa275307d739b689c424a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1416f53_153a4d92",
        "filename": "src/ast/scopes.cc",
        "patchSetId": 12
      },
      "lineNbr": 2241,
      "author": {
        "id": 1288325
      },
      "writtenOn": "2019-09-30T20:38:10Z",
      "side": 1,
      "message": "I updated Scope::MustAllocate to special case this. I am not sure about the best way to test that the class variable is for an anonymous class. var-\u003eraw_name()-\u003eIsOneByteEqualTo(\".\") seems slower than doing a comparison with ast_value_factory-\u003edot_string(), but it is now guarded by is_class_scope() \u0026\u0026 var \u003d\u003d AsClassScope()-\u003eclass_variable() so it should not be done frequently. To compare it with the dot_string we\u0027ll have to pass ast_value_factory everywhere instead.",
      "parentUuid": "e621a2b6_4fcc0b90",
      "revId": "0842c08b16edd8ddf1faa275307d739b689c424a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b043396e_0c9fb85d",
        "filename": "src/ast/scopes.cc",
        "patchSetId": 12
      },
      "lineNbr": 2241,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2019-10-01T12:20:47Z",
      "side": 1,
      "message": "What about simply setting a flag on the Variable itself? That way you can turn the 3 checks into 1. There\u0027s a uint16_t bitfield that you can extend to uint32_t; it\u0027ll be padded to word size anyway.\n\nAlternatively you could also lazily create the anonymous class_variable when needed (when a private method is referenced or eval is called). Both are less common than MustAllocate and moving the cost there actually seems like a better trade-off.",
      "parentUuid": "d1416f53_153a4d92",
      "revId": "0842c08b16edd8ddf1faa275307d739b689c424a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}