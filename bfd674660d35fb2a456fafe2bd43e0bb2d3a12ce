{
  "comments": [
    {
      "key": {
        "uuid": "b2564454_a52e3401",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 130,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-06-30T11:57:48Z",
      "side": 1,
      "message": "nit: can we name this \"feature_for_heap_type\"? And also the parameter should be named \"heap_type\" to make clear what that is.",
      "range": {
        "startLine": 130,
        "startChar": 22,
        "endLine": 130,
        "endChar": 38
      },
      "revId": "bfd674660d35fb2a456fafe2bd43e0bb2d3a12ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43bdb918_20cf8f5d",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 130,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2020-06-30T12:27:07Z",
      "side": 1,
      "message": "See my comment on value-type.h.",
      "parentUuid": "b2564454_a52e3401",
      "range": {
        "startLine": 130,
        "startChar": 22,
        "endLine": 130,
        "endChar": 38
      },
      "revId": "bfd674660d35fb2a456fafe2bd43e0bb2d3a12ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad52957d_74d3d1bb",
        "filename": "src/wasm/value-type.h",
        "patchSetId": 6
      },
      "lineNbr": 56,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-06-30T11:57:48Z",
      "side": 1,
      "message": "From the name I would have no idea what this is doing. What is the relation between HeapType, \"heap\", and \"type\"? These are all terms used in this class, but their relation is not clear to me.",
      "range": {
        "startLine": 56,
        "startChar": 18,
        "endLine": 56,
        "endChar": 32
      },
      "revId": "bfd674660d35fb2a456fafe2bd43e0bb2d3a12ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02f9a948_303db457",
        "filename": "src/wasm/value-type.h",
        "patchSetId": 6
      },
      "lineNbr": 56,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2020-06-30T12:27:07Z",
      "side": 1,
      "message": "The naming scheme used in is that heap_type: HeapType and heap: uint32_t. I would be happy if you could suggest something better.",
      "parentUuid": "ad52957d_74d3d1bb",
      "range": {
        "startLine": 56,
        "startChar": 18,
        "endLine": 56,
        "endChar": 32
      },
      "revId": "bfd674660d35fb2a456fafe2bd43e0bb2d3a12ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "682ce494_2ff4a6bd",
        "filename": "src/wasm/value-type.h",
        "patchSetId": 6
      },
      "lineNbr": 56,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-06-30T12:54:41Z",
      "side": 1,
      "message": "The HeapType class current stores a type_. This can be one of kFunc, kExtern, ..., or a value between 0 and kV8MaxWasmTypes, right?\nWhat if we introduce an enum for that, so we have a C++ type to reference to that. Something like\nenum HeapTypeCode { kFunc \u003d kV8MaxWasmTypes, kExtern, kEq, ...}.\n(note that this enum an also store all values in [0, kV8MaxWasmTypes) then).\n\nAnd then in HeapType:\n  HeapTypeCode code_;\n\nThen the {code()} method could return a HeapTypeCode. And this method here would be \"HeapTypeCode HeapCodeFromValueCode(uint8_t value_code)\".\n\nDoes that make sense?",
      "parentUuid": "02f9a948_303db457",
      "range": {
        "startLine": 56,
        "startChar": 18,
        "endLine": 56,
        "endChar": 32
      },
      "revId": "bfd674660d35fb2a456fafe2bd43e0bb2d3a12ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f496e901_16c05f37",
        "filename": "src/wasm/value-type.h",
        "patchSetId": 6
      },
      "lineNbr": 116,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-06-30T11:57:48Z",
      "side": 1,
      "message": "I don\u0027t get what this is doing, even with the comment above. Does the \"-1 \u0026\" even do anything? No matter if we sign-extend or zero-extend the kLocalFuncRef to 32 bit, it will have bits 8-31 set to zero, no?",
      "revId": "bfd674660d35fb2a456fafe2bd43e0bb2d3a12ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2794362_bb3f2cf7",
        "filename": "src/wasm/value-type.h",
        "patchSetId": 6
      },
      "lineNbr": 116,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2020-06-30T12:27:07Z",
      "side": 1,
      "message": "No, it does not do anything, I got this wrong. I guess we have no tests that cover this yet.",
      "parentUuid": "f496e901_16c05f37",
      "revId": "bfd674660d35fb2a456fafe2bd43e0bb2d3a12ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa9eac72_479d7b9b",
        "filename": "src/wasm/wasm-features.h",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-06-30T11:57:48Z",
      "side": 1,
      "message": "Please make this constexpr.",
      "revId": "bfd674660d35fb2a456fafe2bd43e0bb2d3a12ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbc7406b_918aa53a",
        "filename": "src/wasm/wasm-features.h",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2020-06-30T12:27:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa9eac72_479d7b9b",
      "revId": "bfd674660d35fb2a456fafe2bd43e0bb2d3a12ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba2e962f_fd76847c",
        "filename": "src/wasm/wasm-features.h",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-06-30T11:57:48Z",
      "side": 1,
      "message": "This needs an #undef a few lines below.",
      "revId": "bfd674660d35fb2a456fafe2bd43e0bb2d3a12ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66db747e_070f81fc",
        "filename": "src/wasm/wasm-features.h",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2020-06-30T12:27:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba2e962f_fd76847c",
      "revId": "bfd674660d35fb2a456fafe2bd43e0bb2d3a12ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}