{
  "comments": [
    {
      "key": {
        "uuid": "4a106057_c44af3d8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-07-15T15:38:39Z",
      "side": 1,
      "message": "Thanks Sathya! Just a couple more comments. ",
      "revId": "9712ef8d1ad3b7c4d5adcd758f686fc4aff9378f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a17db7a_24517626",
        "filename": "src/compiler/feedback-source.cc",
        "patchSetId": 12
      },
      "lineNbr": 38,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-07-15T15:42:10Z",
      "side": 1,
      "message": "Please add back the \u0027return\u0027.",
      "revId": "9712ef8d1ad3b7c4d5adcd758f686fc4aff9378f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f680c2e_078c03a9",
        "filename": "src/compiler/graph-assembler.cc",
        "patchSetId": 12
      },
      "lineNbr": 711,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-07-15T15:42:10Z",
      "side": 1,
      "message": "Hmm why did this one change?",
      "revId": "9712ef8d1ad3b7c4d5adcd758f686fc4aff9378f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "568ea36c_fdb005e9",
        "filename": "src/compiler/simplified-operator.cc",
        "patchSetId": 12
      },
      "lineNbr": 292,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-07-15T15:42:10Z",
      "side": 1,
      "message": "This needs to compare the state as well, or there should be a comment explaining why we can never have two such parameters that only differ in their ic_state.",
      "revId": "9712ef8d1ad3b7c4d5adcd758f686fc4aff9378f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a02b5df_f7e7f677",
        "filename": "src/compiler/simplified-operator.cc",
        "patchSetId": 12
      },
      "lineNbr": 297,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-07-15T15:42:10Z",
      "side": 1,
      "message": "See above.",
      "revId": "9712ef8d1ad3b7c4d5adcd758f686fc4aff9378f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6093f6d_e4420d13",
        "filename": "src/compiler/simplified-operator.cc",
        "patchSetId": 12
      },
      "lineNbr": 302,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-07-15T15:42:10Z",
      "side": 1,
      "message": "Please print ic_state.",
      "revId": "9712ef8d1ad3b7c4d5adcd758f686fc4aff9378f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ddbd957_d85302f7",
        "filename": "src/compiler/simplified-operator.h",
        "patchSetId": 12
      },
      "lineNbr": 436,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-07-15T15:42:10Z",
      "side": 1,
      "message": "Which extra deopt data is being emitted?",
      "revId": "9712ef8d1ad3b7c4d5adcd758f686fc4aff9378f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f012c93_68adb809",
        "filename": "src/compiler/simplified-operator.h",
        "patchSetId": 12
      },
      "lineNbr": 436,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-07-16T09:18:43Z",
      "side": 1,
      "message": "TurboFan uses a valid feedback as an indication to generate \"UpdateFeedback\" instructions: https://cs.chromium.org/chromium/src/v8/src/compiler/backend/code-generator.cc?type\u003dcs\u0026g\u003d0\u0026l\u003d1160\n\nThese are expected only for CallIC and are used to turn off speculative optimizations. https://cs.chromium.org/chromium/src/v8/src/objects/feedback-vector.cc?q\u003dfeedback-vector.cc\u0026sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d891.\n\nAFAIU, CheckMaps corresponding to CallICs have feedback set and the CheckMaps corresponding to others don\u0027t have feedback. For dynamic map checks when we always have a valid feedback. This could generate \"UpdateFeedback\" instructions which ins\u0027t expected for LoadNamedProperty. So, this isn\u0027t just extra deopt data. We shouldn\u0027t be generating these instructions. One way of fixing this is to flag if these instructions need to be generated explicitly rather than relying on valid feedback or maybe check if the feedback kind is CallIC before generating these instructions.",
      "parentUuid": "2ddbd957_d85302f7",
      "revId": "9712ef8d1ad3b7c4d5adcd758f686fc4aff9378f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae21e698_e2e5d7a2",
        "filename": "src/compiler/simplified-operator.h",
        "patchSetId": 12
      },
      "lineNbr": 436,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-07-16T09:23:57Z",
      "side": 1,
      "message": "As I wrote in https://chromium-review.googlesource.com/c/v8/v8/+/2241518/10/src/compiler/simplified-operator.h#426, since you\u0027re passing an empty FeedbackSource to DeoptimizeIf* the UpdateFeedback stuff won\u0027t happen.",
      "parentUuid": "5f012c93_68adb809",
      "revId": "9712ef8d1ad3b7c4d5adcd758f686fc4aff9378f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bea1fcb_f82375d5",
        "filename": "src/compiler/simplified-operator.h",
        "patchSetId": 12
      },
      "lineNbr": 436,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-07-16T09:55:06Z",
      "side": 1,
      "message": "I think in some phase we propagate this feedback to some other operators. I kind of remember seeing this actually happen. Let me try to find the test case.",
      "parentUuid": "ae21e698_e2e5d7a2",
      "revId": "9712ef8d1ad3b7c4d5adcd758f686fc4aff9378f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "659fb719_b748d55f",
        "filename": "src/compiler/simplified-operator.h",
        "patchSetId": 12
      },
      "lineNbr": 843,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-07-15T15:42:10Z",
      "side": 1,
      "message": "Nit: DynamicCheckMapsParameters::ICState ic_state\nThis is just an enum.",
      "revId": "9712ef8d1ad3b7c4d5adcd758f686fc4aff9378f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d75a52fb_a7a633d2",
        "filename": "src/runtime/runtime-compiler.cc",
        "patchSetId": 12
      },
      "lineNbr": 193,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-07-15T15:42:10Z",
      "side": 1,
      "message": "I thought the reason does normally not get recorded.",
      "revId": "9712ef8d1ad3b7c4d5adcd758f686fc4aff9378f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}