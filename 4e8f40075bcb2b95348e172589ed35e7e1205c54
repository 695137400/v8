{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "72fd9f31_d44e7dd0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-07-15T06:37:00Z",
      "side": 1,
      "message": "PTAL :)",
      "revId": "4e8f40075bcb2b95348e172589ed35e7e1205c54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a038b19a_7d274e24",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2024-07-16T08:45:07Z",
      "side": 1,
      "message": "LGTM",
      "revId": "4e8f40075bcb2b95348e172589ed35e7e1205c54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f4279bc_e499e647",
        "filename": "src/compiler/turboshaft/assembler.h",
        "patchSetId": 1
      },
      "lineNbr": 3159,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2024-07-16T08:45:07Z",
      "side": 1,
      "message": "Do you think it\u0027s not worth to have all those `CallBuiltin_Xyz` wrappers around the actual `CallBuiltin` with the descriptor? It makes such changes more annoying. The reason I added them was to have a bit better IDE support for argument types and such and not have to do the ugly `__ template CallBuiltin\u003c...\u003e` thing, but I don\u0027t feel strongly about it.",
      "range": {
        "startLine": 3159,
        "startChar": 12,
        "endLine": 3159,
        "endChar": 32
      },
      "revId": "4e8f40075bcb2b95348e172589ed35e7e1205c54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c25bdb0f_b35d05e7",
        "filename": "src/compiler/turboshaft/assembler.h",
        "patchSetId": 1
      },
      "lineNbr": 3159,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-07-16T08:51:15Z",
      "side": 1,
      "message": "I don\u0027t feel very strongly about it.\n\nOne good think with that is that it makes it a bit clearer what input builtins take. Otherwise, one has to look at the BuiltinCallDescriptor, and realize that kNeedsContext/kNeedsFrameState mean that it needs a context and frame_state input. And even for the \"regular\" inputs/outputs, it\u0027s probably easier for beginners to have a CallBuiltin_ToString function with explicit typed arguments rather than having to realize from the descriptor what the types of the arguments are...",
      "parentUuid": "5f4279bc_e499e647",
      "range": {
        "startLine": 3159,
        "startChar": 12,
        "endLine": 3159,
        "endChar": 32
      },
      "revId": "4e8f40075bcb2b95348e172589ed35e7e1205c54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "If the author is a V8 committer, code review is required from one other committer (see https://v8.dev/docs/become-committer). Otherwise, code review is required from two committers."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "((uploaderin:cria/project-v8-committers AND label:Code-Review\u003dMAX,user\u003dnon_uploader) OR label:Code-Review\u003dMAX,count\u003e\u003d2) AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"((uploaderin:cria/project-v8-committers AND label:Code-Review=MAX,user=non_uploader) OR label:Code-Review=MAX,count>=2) AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader","uploaderin:cria/project-v8-committers"],"failingAtoms":["label:Code-Review=MIN","label:Code-Review=MAX,count>=2"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "4e8f40075bcb2b95348e172589ed35e7e1205c54",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "4e8f40075bcb2b95348e172589ed35e7e1205c54",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4e8f40075bcb2b95348e172589ed35e7e1205c54",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}