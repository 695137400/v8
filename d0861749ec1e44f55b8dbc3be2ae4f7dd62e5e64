{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "685bf528_92b5d520",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 60
      },
      "lineNbr": 0,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2023-03-08T13:38:32Z",
      "side": 1,
      "message": "Leszek, could you +1 for src/execution/isolate.h? (this optimization can create Sliced strings that less than SlicedString::kMinLength characters; they aren\u0027t visible to the runtime, but the GC can sometimes see them, so I\u0027ve added a flag on this isolate to signal that such strings could be there and that the sliced strings that are too small aren\u0027t an issue when this flag is set)",
      "revId": "d0861749ec1e44f55b8dbc3be2ae4f7dd62e5e64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "411578e6_d0358c34",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 60
      },
      "lineNbr": 0,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2023-03-08T13:46:17Z",
      "side": 1,
      "message": "Jakob, could you +1 for src/execution/isolate.h? (this optimization can create Sliced strings that less than SlicedString::kMinLength characters; they aren\u0027t visible to the runtime, but the GC can sometimes see them, so I\u0027ve added a flag on this isolate to signal that such strings could be there and that the sliced strings that are too small aren\u0027t an issue when this flag is set)",
      "revId": "d0861749ec1e44f55b8dbc3be2ae4f7dd62e5e64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4eb72e47_f00e67ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 60
      },
      "lineNbr": 0,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2023-03-08T13:49:26Z",
      "side": 1,
      "message": "isolate lgtm with comments",
      "revId": "d0861749ec1e44f55b8dbc3be2ae4f7dd62e5e64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81e600f3_d404cb72",
        "filename": "src/execution/isolate.h",
        "patchSetId": 60
      },
      "lineNbr": 1350,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2023-03-08T13:49:26Z",
      "side": 1,
      "message": "nit: keep these lower_case as is our convention for simple accessors, and add const. Also please add an (extensive) comment or point to a place where one can find more info (no idea what this implies otherwise).",
      "revId": "d0861749ec1e44f55b8dbc3be2ae4f7dd62e5e64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d37be5f6_ab12553d",
        "filename": "src/execution/isolate.h",
        "patchSetId": 60
      },
      "lineNbr": 1350,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2023-03-08T13:56:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "81e600f3_d404cb72",
      "revId": "d0861749ec1e44f55b8dbc3be2ae4f7dd62e5e64",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}