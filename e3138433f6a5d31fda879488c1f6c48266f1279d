{
  "comments": [
    {
      "key": {
        "uuid": "adb181ea_73a355db",
        "filename": "src/s390/simulator-s390.cc",
        "patchSetId": 8
      },
      "lineNbr": 2870,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-03-11T18:53:13Z",
      "side": 1,
      "message": "use set_simd_register",
      "range": {
        "startLine": 2870,
        "startChar": 2,
        "endLine": 2870,
        "endChar": 27
      },
      "revId": "e3138433f6a5d31fda879488c1f6c48266f1279d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb5f12b6_dea792aa",
        "filename": "src/s390/simulator-s390.cc",
        "patchSetId": 8
      },
      "lineNbr": 2877,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-03-11T18:53:13Z",
      "side": 1,
      "message": "pls check alignment as specific in the ISA.",
      "range": {
        "startLine": 2877,
        "startChar": 2,
        "endLine": 2877,
        "endChar": 10
      },
      "revId": "e3138433f6a5d31fda879488c1f6c48266f1279d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10087068_09895e23",
        "filename": "src/s390/simulator-s390.cc",
        "patchSetId": 8
      },
      "lineNbr": 2880,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-03-11T18:53:13Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 2880,
        "startChar": 2,
        "endLine": 2880,
        "endChar": 27
      },
      "revId": "e3138433f6a5d31fda879488c1f6c48266f1279d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c90ce113_58d3fb80",
        "filename": "src/s390/simulator-s390.cc",
        "patchSetId": 8
      },
      "lineNbr": 2889,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-03-11T18:53:13Z",
      "side": 1,
      "message": "use set_register",
      "range": {
        "startLine": 2889,
        "startChar": 2,
        "endLine": 2889,
        "endChar": 16
      },
      "revId": "e3138433f6a5d31fda879488c1f6c48266f1279d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c241a541_ce3a4084",
        "filename": "src/s390/simulator-s390.cc",
        "patchSetId": 8
      },
      "lineNbr": 2889,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-03-11T18:53:13Z",
      "side": 1,
      "message": "use get_simd_register_by_lane",
      "range": {
        "startLine": 2889,
        "startChar": 19,
        "endLine": 2889,
        "endChar": 56
      },
      "revId": "e3138433f6a5d31fda879488c1f6c48266f1279d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61934f44_ea0e75a8",
        "filename": "src/s390/simulator-s390.cc",
        "patchSetId": 8
      },
      "lineNbr": 2899,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-03-11T18:53:13Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 2899,
        "startChar": 2,
        "endLine": 2899,
        "endChar": 46
      },
      "revId": "e3138433f6a5d31fda879488c1f6c48266f1279d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fccd985_b3df997f",
        "filename": "src/s390/simulator-s390.cc",
        "patchSetId": 8
      },
      "lineNbr": 2929,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-03-11T18:53:13Z",
      "side": 1,
      "message": "pls replace the switch statement with the following:\n\n   const int size_by_byte \u003d 1 \u003c\u003c m3;\n   int8_t* dst \u003d get_simd_register(r1).int8;\n   int8_t* src \u003d reinterpret_cast\u003cint8_t*\u003e(addr);\n   for (int i \u003d 0; i \u003c kSimd128Size; i +\u003d size_by_byte) {\n     MemCopy(dst + i, src, size_by_byte);\n   }",
      "range": {
        "startLine": 2908,
        "startChar": 2,
        "endLine": 2929,
        "endChar": 3
      },
      "revId": "e3138433f6a5d31fda879488c1f6c48266f1279d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea1ccedf_c480da2c",
        "filename": "src/s390/simulator-s390.cc",
        "patchSetId": 8
      },
      "lineNbr": 2953,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-03-11T18:53:13Z",
      "side": 1,
      "message": "same as above with minor change.",
      "range": {
        "startLine": 2936,
        "startChar": 2,
        "endLine": 2953,
        "endChar": 3
      },
      "revId": "e3138433f6a5d31fda879488c1f6c48266f1279d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c83964c1_123dfbd0",
        "filename": "src/s390/simulator-s390.cc",
        "patchSetId": 8
      },
      "lineNbr": 2966,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-03-11T18:53:13Z",
      "side": 1,
      "message": "use set_simd_register(r1, get_simd_register(r2));",
      "range": {
        "startLine": 2963,
        "startChar": 2,
        "endLine": 2966,
        "endChar": 40
      },
      "revId": "e3138433f6a5d31fda879488c1f6c48266f1279d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35945406_d173cc69",
        "filename": "src/s390/simulator-s390.cc",
        "patchSetId": 8
      },
      "lineNbr": 2974,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-03-11T18:53:13Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 2974,
        "startChar": 18,
        "endLine": 2974,
        "endChar": 51
      },
      "revId": "e3138433f6a5d31fda879488c1f6c48266f1279d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38d51594_2485e8b5",
        "filename": "src/s390/simulator-s390.cc",
        "patchSetId": 8
      },
      "lineNbr": 2984,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-03-11T18:53:13Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 2984,
        "startChar": 2,
        "endLine": 2984,
        "endChar": 42
      },
      "revId": "e3138433f6a5d31fda879488c1f6c48266f1279d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af1bdc17_9f29403e",
        "filename": "src/s390/simulator-s390.cc",
        "patchSetId": 8
      },
      "lineNbr": 3024,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-03-11T18:53:13Z",
      "side": 1,
      "message": "pls use the the following function/macro to replace all the switch statement above and below:\n\n template\u003cclass T, class Operation\u003e\n inline static void VectorBinaryOp(void* dst, void* src1, void* src2, Operation op) {\n   int8_t* src1_ptr \u003d reinterpret_cast\u003cint8_t*\u003e(src1);\n   int8_t* src2_ptr \u003d reinterpret_cast\u003cint8_t*\u003e(src2);\n   int8_t* dst_ptr \u003d reinterpret_cast\u003cint8_t*\u003e(dst);\n   for (int i \u003d 0; i \u003c kSimd128Size; i +\u003d sizeof(T)) {\n     T\u0026 dst_val \u003d *reinterpret_cast\u003cT*\u003e(dst_ptr + i);\n     T\u0026 src1_val \u003d *reinterpret_cast\u003cT*\u003e(src1_ptr + i);\n     T\u0026 src2_val \u003d *reinterpret_cast\u003cT*\u003e(src2_ptr + i);\n     dst_val \u003d op(src1_val, src2_val);\n   }\n }\n \n #define VECTOR_BINARY_OP_FOR_TYPE(type, op) \\\n   VectorBinaryOp\u003ctype\u003e(\u0026get_simd_register(r1), \\\n                         \u0026get_simd_register(r2), \\\n                         \u0026get_simd_register(r3), \\\n       [](type a, type b) { return a op b; });\n \n #define VECTOR_BINARY_OP(op)   \\\n   switch (m4) {   \\\n     case 2:   \\\n       if (m5 \u003d\u003d 8) {   \\\n         float src1 \u003d get_simd_register_by_lane\u003cfloat\u003e(r2, 0);   \\\n         float src2 \u003d get_simd_register_by_lane\u003cfloat\u003e(r3, 0);   \\\n         set_simd_register_by_lane(r1, 0, src1 op src2);   \\\n       } else {   \\\n         DCHECK_EQ(m5, 0);   \\\n         VECTOR_BINARY_OP_FOR_TYPE(float, op)   \\\n       }   \\\n       break;   \\\n     case 3:   \\\n       if (m5 \u003d\u003d 8) {   \\\n         double src1 \u003d get_simd_register_by_lane\u003cdouble\u003e(r2, 0);   \\\n         double src2 \u003d get_simd_register_by_lane\u003cdouble\u003e(r3, 0);   \\\n         set_simd_register_by_lane(r1, 0, src1 op src2);   \\\n       } else {   \\\n         DCHECK_EQ(m5, 0);   \\\n         VECTOR_BINARY_OP_FOR_TYPE(double, op)   \\\n       }   \\\n       break;   \\\n     default:   \\\n       UNREACHABLE();   \\\n       break;   \\\n   }\n\nthe switch statement can be replaced by VECTOR_BINARY_OP(+)",
      "range": {
        "startLine": 2992,
        "startChar": 0,
        "endLine": 3024,
        "endChar": 3
      },
      "revId": "e3138433f6a5d31fda879488c1f6c48266f1279d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca60ed60_55e10107",
        "filename": "src/s390/simulator-s390.cc",
        "patchSetId": 8
      },
      "lineNbr": 3758,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-03-11T18:53:13Z",
      "side": 1,
      "message": "Should not set the 2nd lane.",
      "range": {
        "startLine": 3757,
        "startChar": 2,
        "endLine": 3758,
        "endChar": 41
      },
      "revId": "e3138433f6a5d31fda879488c1f6c48266f1279d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d42c6c8f_4736a156",
        "filename": "src/s390/simulator-s390.h",
        "patchSetId": 8
      },
      "lineNbr": 122,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-03-11T18:53:13Z",
      "side": 1,
      "message": "pls use set_simd_register_by_lane\u003cdouble\u003e(dreg, 0, dbl);",
      "range": {
        "startLine": 122,
        "startChar": 4,
        "endLine": 122,
        "endChar": 60
      },
      "revId": "e3138433f6a5d31fda879488c1f6c48266f1279d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bef564c_45f8a4e9",
        "filename": "src/s390/simulator-s390.h",
        "patchSetId": 8
      },
      "lineNbr": 138,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-03-11T18:53:13Z",
      "side": 1,
      "message": "same as above",
      "range": {
        "startLine": 130,
        "startChar": 0,
        "endLine": 138,
        "endChar": 3
      },
      "revId": "e3138433f6a5d31fda879488c1f6c48266f1279d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e87c6d1_b9caa10c",
        "filename": "src/s390/simulator-s390.h",
        "patchSetId": 8
      },
      "lineNbr": 462,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-03-11T18:53:13Z",
      "side": 1,
      "message": "Pls use the following functions to replace all get/set_simd_reg_from_XXX functions.\n\n   fpr_t\u0026 get_simd_register(int reg) {                                                                   \n     return fp_registers_[reg];                                                                          \n   }                                                                                                     \n                                                                                                         \n   void set_simd_register(int reg, const fpr_t\u0026 v) {                                                     \n     get_simd_register(reg) \u003d v;                                                                         \n   }                                                                                                     \n                                                                                                         \n   template\u003cclass T\u003e                                                                                     \n   T\u0026 get_simd_register_by_lane(int reg, int lane) {                                                     \n     DCHECK_LE(index, kSimd128Size / sizeof(T));                                                         \n     DCHECK_LE(reg, kNumGPRs);                                                                           \n     DCHECK_GE(index, 0);                                                                                \n     DCHECK_GE(reg, 0);                                                                                  \n     return (reinterpret_cast\u003cT*\u003e(\u0026get_simd_register(reg)))[lane];                                       \n   }                                                                                                     \n                                                                                                         \n   template\u003cclass T\u003e                                                                                     \n   void set_simd_register_by_lane(int reg, int lane, const T\u0026 value) {                                   \n     get_simd_register_by_lane\u003cT\u003e(reg, lane) \u003d value;                                                    \n   }",
      "range": {
        "startLine": 430,
        "startChar": 0,
        "endLine": 462,
        "endChar": 0
      },
      "revId": "e3138433f6a5d31fda879488c1f6c48266f1279d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf454d68_60d6cceb",
        "filename": "src/s390/simulator-s390.h",
        "patchSetId": 8
      },
      "lineNbr": 503,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-03-11T18:53:13Z",
      "side": 1,
      "message": "pls remove all these.",
      "range": {
        "startLine": 463,
        "startChar": 2,
        "endLine": 503,
        "endChar": 3
      },
      "revId": "e3138433f6a5d31fda879488c1f6c48266f1279d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}