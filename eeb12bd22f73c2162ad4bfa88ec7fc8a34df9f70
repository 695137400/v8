{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "90d90aa5_9e386a82",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2022-07-25T13:02:16Z",
      "side": 1,
      "message": "This is required for testing the upcoming CL, https://crrev.com/c/3784986.",
      "revId": "eeb12bd22f73c2162ad4bfa88ec7fc8a34df9f70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8c2f9f7_859f02ca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2022-07-25T13:16:25Z",
      "side": 1,
      "message": "I appreciate splitting the testing infrastructure to a separate CL to make the next one simpler, but can we actually hold off on these changes until the next CL?\nThe revised mechanism in this CL feels much more complicated to me and I feel that the context of seeing it used would help me understand why we\u0027re doing it this way.",
      "revId": "eeb12bd22f73c2162ad4bfa88ec7fc8a34df9f70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b72cd69b_5523fd40",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2022-07-25T14:02:56Z",
      "side": 1,
      "message": "lgtm",
      "revId": "eeb12bd22f73c2162ad4bfa88ec7fc8a34df9f70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d785878_79183097",
        "filename": "test/unittests/heap/marking-inner-pointer-resolution-unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2022-07-25T13:16:25Z",
      "side": 1,
      "message": "Can `CreateObjectsInPage` be called from `TestAll`? Having the 2 calls here feels a bit like boilerplate.",
      "range": {
        "startLine": 239,
        "startChar": 0,
        "endLine": 239,
        "endChar": 2
      },
      "revId": "eeb12bd22f73c2162ad4bfa88ec7fc8a34df9f70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "293ef212_7a763827",
        "filename": "test/unittests/heap/marking-inner-pointer-resolution-unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2022-07-25T13:47:46Z",
      "side": 1,
      "message": "That\u0027s how it was before. I now separated them, so that both `CreateObjectsInPage` and `TestAll` just do what their name suggests. In this way, we can have objects created in more than one pages and test once in the end (see test `TwoPages` in line 467 below. We can also test multiple times, e.g., after freeing pages (see test `FreePages` in line 548 of https://crrev.com/c/3784986).",
      "parentUuid": "0d785878_79183097",
      "range": {
        "startLine": 239,
        "startChar": 0,
        "endLine": 239,
        "endChar": 2
      },
      "revId": "eeb12bd22f73c2162ad4bfa88ec7fc8a34df9f70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aad33276_e2bc9051",
        "filename": "test/unittests/heap/marking-inner-pointer-resolution-unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2022-07-25T14:02:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "293ef212_7a763827",
      "range": {
        "startLine": 239,
        "startChar": 0,
        "endLine": 239,
        "endChar": 2
      },
      "revId": "eeb12bd22f73c2162ad4bfa88ec7fc8a34df9f70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "eeb12bd22f73c2162ad4bfa88ec7fc8a34df9f70",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "eeb12bd22f73c2162ad4bfa88ec7fc8a34df9f70",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "eeb12bd22f73c2162ad4bfa88ec7fc8a34df9f70",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "eeb12bd22f73c2162ad4bfa88ec7fc8a34df9f70",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}