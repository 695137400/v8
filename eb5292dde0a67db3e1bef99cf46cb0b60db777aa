{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "761e4c95_f14b911d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2021-03-08T14:44:10Z",
      "side": 1,
      "message": "Leszek, PTAL @ baseline\nClemens, PTAL @ wasm\nJakob, PTAL @ all",
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1836c7aa_e50c1930",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2021-03-08T14:51:03Z",
      "side": 1,
      "message": "+verwaest to comment on a baseline-assembler optimisation he added",
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f752b0b3_181ec047",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-08T14:59:42Z",
      "side": 1,
      "message": "Sorry, I don\u0027t see how this can work for wasm. We should have a design doc to discuss how this can be implemented. Alternatively, we need to skip wasm for now.\n(plus a few nits)",
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2247f492_24dacadd",
        "filename": "BUILD.gn",
        "patchSetId": 11
      },
      "lineNbr": 174,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-08T14:59:42Z",
      "side": 1,
      "message": "I think this \"\" default is only needed if you want to derive the value in case it\u0027s not explicitly given.\nSince you don\u0027t do this, you can just default to `false` here.",
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20ac4f4f_2288912c",
        "filename": "BUILD.gn",
        "patchSetId": 11
      },
      "lineNbr": 174,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2021-03-08T15:38:31Z",
      "side": 1,
      "message": "The plan is to define it to true for arm64 with pointer compression in a follow-up CL.",
      "parentUuid": "2247f492_24dacadd",
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bb16790_02512f6d",
        "filename": "src/codegen/arm64/macro-assembler-arm64.cc",
        "patchSetId": 11
      },
      "lineNbr": 1933,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-08T14:59:42Z",
      "side": 1,
      "message": "Where is the start of this comment?",
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f69845a4_de11dfa0",
        "filename": "src/codegen/arm64/macro-assembler-arm64.cc",
        "patchSetId": 11
      },
      "lineNbr": 1933,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2021-03-08T15:38:31Z",
      "side": 1,
      "message": "The comment is started by the RecordCommentForOffHeapTrampoline() call above.",
      "parentUuid": "6bb16790_02512f6d",
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3214727_af986f9b",
        "filename": "src/codegen/arm64/macro-assembler-arm64.cc",
        "patchSetId": 11
      },
      "lineNbr": 1933,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-08T15:48:45Z",
      "side": 1,
      "message": "I am not an owner here, but I would prefer code comments to be stand-alone. Is there really much value in having these \"[\" .. \"]\" pairs, or can\u0027t we just emit a comment before starting a code block, and then implicitly see where it ends (e.g. before the next comment)?",
      "parentUuid": "f69845a4_de11dfa0",
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62bc380f_89f70d1b",
        "filename": "src/codegen/arm64/macro-assembler-arm64.cc",
        "patchSetId": 11
      },
      "lineNbr": 1944,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2021-03-08T14:51:03Z",
      "side": 1,
      "message": "do we also need to make `Jump(Address,...)` support tailcall CFI for the case where the Address is too far despite us trying to make it close?",
      "range": {
        "startLine": 1944,
        "startChar": 9,
        "endLine": 1944,
        "endChar": 14
      },
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7affa190_77403aee",
        "filename": "src/codegen/arm64/macro-assembler-arm64.cc",
        "patchSetId": 11
      },
      "lineNbr": 1944,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2021-03-09T12:51:09Z",
      "side": 1,
      "message": "For the current CL that\u0027s not necessary; but this is a bit problematic for a non-PC version due to evacuation. Talking to hpayer we may need to change how we evacuate pages to a version that just moves code closer towards the chrome binary to defrag memory. A problem for another CL though.",
      "parentUuid": "62bc380f_89f70d1b",
      "range": {
        "startLine": 1944,
        "startChar": 9,
        "endLine": 1944,
        "endChar": 14
      },
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a143342_b93e63c9",
        "filename": "src/codegen/arm64/macro-assembler-arm64.cc",
        "patchSetId": 11
      },
      "lineNbr": 1958,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-08T14:59:42Z",
      "side": 1,
      "message": "Same here.",
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3bf00c5_2bd28a6e",
        "filename": "src/codegen/arm64/macro-assembler-arm64.cc",
        "patchSetId": 11
      },
      "lineNbr": 1958,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2021-03-08T15:38:31Z",
      "side": 1,
      "message": "Same here, it\u0027s started in RecordCommentForOffHeapTrampoline().",
      "parentUuid": "7a143342_b93e63c9",
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "505af742_4742bb82",
        "filename": "src/codegen/arm64/macro-assembler-arm64.h",
        "patchSetId": 11
      },
      "lineNbr": 979,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-08T14:59:42Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 979,
        "startChar": 33,
        "endLine": 979,
        "endChar": 40
      },
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15457168_932e58b7",
        "filename": "src/codegen/arm64/macro-assembler-arm64.h",
        "patchSetId": 11
      },
      "lineNbr": 979,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2021-03-08T15:38:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "505af742_4742bb82",
      "range": {
        "startLine": 979,
        "startChar": 33,
        "endLine": 979,
        "endChar": 40
      },
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cf56283_f3453fa4",
        "filename": "src/codegen/arm64/macro-assembler-arm64.h",
        "patchSetId": 11
      },
      "lineNbr": 984,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-08T14:59:42Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 984,
        "startChar": 33,
        "endLine": 984,
        "endChar": 40
      },
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30cdda86_22a9b061",
        "filename": "src/codegen/arm64/macro-assembler-arm64.h",
        "patchSetId": 11
      },
      "lineNbr": 984,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2021-03-08T15:38:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9cf56283_f3453fa4",
      "range": {
        "startLine": 984,
        "startChar": 33,
        "endLine": 984,
        "endChar": 40
      },
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c7401e7_00f95251",
        "filename": "src/codegen/x64/macro-assembler-x64.h",
        "patchSetId": 11
      },
      "lineNbr": 528,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-08T14:59:42Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 528,
        "startChar": 33,
        "endLine": 528,
        "endChar": 40
      },
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5dae1b0a_ba87ba2f",
        "filename": "src/codegen/x64/macro-assembler-x64.h",
        "patchSetId": 11
      },
      "lineNbr": 528,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2021-03-08T15:38:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c7401e7_00f95251",
      "range": {
        "startLine": 528,
        "startChar": 33,
        "endLine": 528,
        "endChar": 40
      },
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f518c99_060fb986",
        "filename": "src/codegen/x64/macro-assembler-x64.h",
        "patchSetId": 11
      },
      "lineNbr": 533,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-08T14:59:42Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 533,
        "startChar": 33,
        "endLine": 533,
        "endChar": 40
      },
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbd9cbd8_7149c2ba",
        "filename": "src/codegen/x64/macro-assembler-x64.h",
        "patchSetId": 11
      },
      "lineNbr": 533,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2021-03-08T15:38:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8f518c99_060fb986",
      "range": {
        "startLine": 533,
        "startChar": 33,
        "endLine": 533,
        "endChar": 40
      },
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f777a941_e1c7f9fd",
        "filename": "src/common/globals.h",
        "patchSetId": 11
      },
      "lineNbr": 102,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-08T14:59:42Z",
      "side": 1,
      "message": "This is the wrong comment :)",
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bcf0d0d2_259b15ac",
        "filename": "src/common/globals.h",
        "patchSetId": 11
      },
      "lineNbr": 102,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2021-03-08T15:38:31Z",
      "side": 1,
      "message": "Thanks! Done.",
      "parentUuid": "f777a941_e1c7f9fd",
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8caa5d2f_0a3caaf2",
        "filename": "src/wasm/wasm-code-manager.h",
        "patchSetId": 11
      },
      "lineNbr": 751,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-08T14:59:42Z",
      "side": 1,
      "message": "A NativeModule is totally isolate-independent. The AddCodeSpace method (where you are using the stored isolate) can be called from any thread, and at that point the original isolate might already be gone.\nIf you temporarily need *any* isolate that currently uses the native module, you could get that via the WasmEngine, but then calling into the embedded blob of that isolate will only work as long as that isolate is alive.\n\nI don\u0027t see a way currently to make this work for wasm.\nWas there a design doc that I missed?",
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f060f0a_8dc2a2de",
        "filename": "src/wasm/wasm-code-manager.h",
        "patchSetId": 11
      },
      "lineNbr": 751,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2021-03-08T15:38:31Z",
      "side": 1,
      "message": "Thanks for pointing out that there is an issue here. \nThis CL came up from a hacky prototype. What I was trying to achieve is to ensure that the builtins we see on the call stack belong to the isolate \"in which\" we are currently executing the code.\nThe design doc is on the way.",
      "parentUuid": "8caa5d2f_0a3caaf2",
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff1e2d22_a8ad4e63",
        "filename": "src/wasm/wasm-code-manager.h",
        "patchSetId": 11
      },
      "lineNbr": 751,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2021-03-09T12:51:09Z",
      "side": 1,
      "message": "Note that the current approach even for JS is a stop-gap solution to fix the performance issues we have on certain HW; before we have a proper solution.",
      "parentUuid": "6f060f0a_8dc2a2de",
      "revId": "eb5292dde0a67db3e1bef99cf46cb0b60db777aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}