{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "21f081ac_9fb05323",
        "filename": "include/v8-internal.h",
        "patchSetId": 1
      },
      "lineNbr": 311,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-03-14T14:26:35Z",
      "side": 1,
      "message": "nit: use this constant in the shifts above?",
      "revId": "2db95f9c7cd2d985782c4aab12a25a9a3e9989ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf707ebf_a23edad3",
        "filename": "include/v8-internal.h",
        "patchSetId": 1
      },
      "lineNbr": 311,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2022-03-14T14:31:51Z",
      "side": 1,
      "message": "Yeah so that\u0027d push the lines above 80 chars, which would make this block longer and harder to parse :/ Is it ok to go over 8 chars in `clang-format off` blocks? Otherwise, I\u0027d just leave it as is now...",
      "parentUuid": "21f081ac_9fb05323",
      "revId": "2db95f9c7cd2d985782c4aab12a25a9a3e9989ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c6b8909_e1d04971",
        "filename": "include/v8-internal.h",
        "patchSetId": 1
      },
      "lineNbr": 311,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-03-15T08:56:56Z",
      "side": 1,
      "message": "Hmm personally I\u0027d just go with whatever clang-format does, I\u0027d prefer the explicit use of the shift constant over formatting concerns. If the q is \u0027go over 80 chars, or don\u0027t use the constant\u0027, I tend towards the constant. But up to you :)",
      "parentUuid": "bf707ebf_a23edad3",
      "revId": "2db95f9c7cd2d985782c4aab12a25a9a3e9989ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b2acf7f_069ee7ab",
        "filename": "include/v8-internal.h",
        "patchSetId": 1
      },
      "lineNbr": 311,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2022-03-15T16:16:13Z",
      "side": 1,
      "message": "Alright, so how about this solution then? It uses the constant and stays below 80 chars with a tiny bit of additional readability because I also dropped the `ULL` suffix at the cost of a macro",
      "parentUuid": "5c6b8909_e1d04971",
      "revId": "2db95f9c7cd2d985782c4aab12a25a9a3e9989ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbcacd43_5c9004bd",
        "filename": "include/v8-internal.h",
        "patchSetId": 1
      },
      "lineNbr": 311,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-03-16T06:49:11Z",
      "side": 1,
      "message": "LGTM :) Out of curiosity, what\u0027s the `clang-format off` needed for? This is pretty much how I\u0027d expect clang to format this block.",
      "parentUuid": "6b2acf7f_069ee7ab",
      "revId": "2db95f9c7cd2d985782c4aab12a25a9a3e9989ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fa3e755_be4d10de",
        "filename": "include/v8-internal.h",
        "patchSetId": 1
      },
      "lineNbr": 311,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2022-03-16T09:43:21Z",
      "side": 1,
      "message": "Without the `clang-format off` the formatting would become\n```\nenum ExternalPointerTag : uint64_t {\n  kExternalPointerNullTag \u003d MAKE_TAG(0b0000000000000000),\n  kExternalPointerFreeEntryTag \u003d MAKE_TAG(0b0111111110000000),\n  kExternalStringResourceTag \u003d MAKE_TAG(0b1000000011111111),\n  kExternalStringResourceDataTag \u003d MAKE_TAG(0b1000000101111111),\n  kForeignForeignAddressTag \u003d MAKE_TAG(0b1000000110111111),\n  kNativeContextMicrotaskQueueTag \u003d MAKE_TAG(0b1000000111011111),\n  kEmbedderDataSlotPayloadTag \u003d MAKE_TAG(0b1000000111101111),\n  kCodeEntryPointTag \u003d MAKE_TAG(0b1000000111110111),\n  kExternalObjectValueTag \u003d MAKE_TAG(0b1000000111111011),\n};\n```\n:/",
      "parentUuid": "dbcacd43_5c9004bd",
      "revId": "2db95f9c7cd2d985782c4aab12a25a9a3e9989ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d48295f6_82127368",
        "filename": "src/snapshot/deserializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 1189,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-03-14T14:26:35Z",
      "side": 1,
      "message": "nit: unneeded cast",
      "revId": "2db95f9c7cd2d985782c4aab12a25a9a3e9989ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7019f477_25b03a2f",
        "filename": "src/snapshot/deserializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 1189,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2022-03-14T14:31:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d48295f6_82127368",
      "revId": "2db95f9c7cd2d985782c4aab12a25a9a3e9989ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1656974_dedb83f2",
        "filename": "src/snapshot/serializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 1033,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2022-03-14T14:26:35Z",
      "side": 1,
      "message": "nit: we usually include the v8: prefix `TODO(v8:12700)`",
      "revId": "2db95f9c7cd2d985782c4aab12a25a9a3e9989ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b2314cb_78767d27",
        "filename": "src/snapshot/serializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 1033,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2022-03-14T14:31:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d1656974_dedb83f2",
      "revId": "2db95f9c7cd2d985782c4aab12a25a9a3e9989ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}