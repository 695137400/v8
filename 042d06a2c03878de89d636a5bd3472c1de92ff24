{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9f5736fa_04cadb6c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2024-07-22T12:45:39Z",
      "side": 1,
      "message": "Since we spoke about the rollout of call indirect inlining: Could you PTAL at enabling fuzzing? (Even though you already enabled it for the wasm-deopt fuzzer, thanks!)",
      "revId": "042d06a2c03878de89d636a5bd3472c1de92ff24",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "683e5f59_2a560167",
        "filename": "test/fuzzer/wasm-fuzzer-common.cc",
        "patchSetId": 1
      },
      "lineNbr": 300,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2024-07-22T12:53:13Z",
      "side": 1,
      "message": "I think you also should add it here: https://source.chromium.org/chromium/chromium/src/+/main:v8/tools/wasm/mjsunit-module-disassembler-impl.h;l\u003d1114 so if any bug gets flushed out, it\u0027s easier to reproduce with the generated mjsunit test case.",
      "range": {
        "startLine": 300,
        "startChar": 15,
        "endLine": 300,
        "endChar": 42
      },
      "revId": "042d06a2c03878de89d636a5bd3472c1de92ff24",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c21c4b9_cbfdf3f0",
        "filename": "test/fuzzer/wasm-fuzzer-common.cc",
        "patchSetId": 1
      },
      "lineNbr": 300,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2024-07-23T08:44:30Z",
      "side": 1,
      "message": "Ah, good point. I extended the comment/`Note:` to mention this as well.",
      "parentUuid": "683e5f59_2a560167",
      "range": {
        "startLine": 300,
        "startChar": 15,
        "endLine": 300,
        "endChar": 42
      },
      "revId": "042d06a2c03878de89d636a5bd3472c1de92ff24",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d2011e5_d9027d4d",
        "filename": "test/mjsunit/wasm/generate-random-module.js",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2024-07-22T12:45:39Z",
      "side": 1,
      "message": "Two questions that are drive-by / not directly related to my feature: \n1. According to the comment in `wasm-fuzzer-comment.cc` we shall enable the same flags here as there, but `wasm_memory64_trap_handling` is not enabled in the test, presumably because it was only supported on some architectures, right?\n2. Since two months, `--wasm-memory64-trap-handling` is enabled by default anyway, shall we hence remove the explicit setting from `wasm-fuzzer-common.cc`?",
      "revId": "042d06a2c03878de89d636a5bd3472c1de92ff24",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5386904f_08b91fd5",
        "filename": "test/mjsunit/wasm/generate-random-module.js",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2024-07-22T12:53:13Z",
      "side": 1,
      "message": "1. This is only needed if you add a new \"feature\", i.e. something that can appear in a module and is not enabled by default. Looking at the test case failures, it might also make sense to remove it here so you don\u0027t have to bother about the exact  correct flags to make all configurations pass with this extra flag.\n2. Sounds good, let\u0027s remove it.",
      "parentUuid": "0d2011e5_d9027d4d",
      "revId": "042d06a2c03878de89d636a5bd3472c1de92ff24",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac5b4f92_6eb73cd3",
        "filename": "test/mjsunit/wasm/generate-random-module.js",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2024-07-23T08:44:30Z",
      "side": 1,
      "message": "Alright, removed the flag setting here, since it\u0027s not relevant (1) and also removed the explicit setting of `wasm_memory64_trap_handling` in the fuzzer since it\u0027s default anyway (2).",
      "parentUuid": "5386904f_08b91fd5",
      "revId": "042d06a2c03878de89d636a5bd3472c1de92ff24",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}