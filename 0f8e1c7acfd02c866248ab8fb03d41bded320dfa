{
  "comments": [
    {
      "key": {
        "uuid": "39115545_f2810b1b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 18,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-11T11:12:30Z",
      "side": 1,
      "message": "Please update",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 30
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "586c60e8_8a8027c4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 18,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-08-13T09:19:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39115545_f2810b1b",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 30
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d1c591f_1b53c8cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-08-07T15:41:28Z",
      "side": 1,
      "message": "ptal again.\nI think the current version resolves the concerns raised by mlippautz@ and ulan@ last week.",
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "000dbe79_d63731dc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-08-11T09:07:07Z",
      "side": 1,
      "message": "ping ulan@ bikineev@",
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4721287c_4d1967dd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-11T11:12:30Z",
      "side": 1,
      "message": "Looking good",
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5642c99_66584614",
        "filename": "src/heap/cppgc-js/cpp-heap.cc",
        "patchSetId": 12
      },
      "lineNbr": 68,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-11T11:12:30Z",
      "side": 1,
      "message": "Nit: not needed anymore",
      "range": {
        "startLine": 68,
        "startChar": 2,
        "endLine": 68,
        "endChar": 10
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95dbe0c2_58cd065d",
        "filename": "src/heap/cppgc-js/cpp-heap.cc",
        "patchSetId": 12
      },
      "lineNbr": 68,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-08-13T09:19:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d5642c99_66584614",
      "range": {
        "startLine": 68,
        "startChar": 2,
        "endLine": 68,
        "endChar": 10
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29d1b151_0cb53c09",
        "filename": "src/heap/cppgc-js/cpp-heap.cc",
        "patchSetId": 12
      },
      "lineNbr": 75,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-11T11:12:30Z",
      "side": 1,
      "message": "Please add a comment explaining why it is empty.",
      "range": {
        "startLine": 75,
        "startChar": 62,
        "endLine": 75,
        "endChar": 64
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2228885b_ff93d05e",
        "filename": "src/heap/cppgc-js/cpp-heap.cc",
        "patchSetId": 12
      },
      "lineNbr": 75,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-08-13T09:19:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "29d1b151_0cb53c09",
      "range": {
        "startLine": 75,
        "startChar": 62,
        "endLine": 75,
        "endChar": 64
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "843abdd8_5a968ec1",
        "filename": "src/heap/cppgc-js/cpp-heap.cc",
        "patchSetId": 12
      },
      "lineNbr": 108,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-11T11:12:30Z",
      "side": 1,
      "message": "IIUC, the name is misleading because marking is not stopped. This function simply schedules a marking step task.",
      "range": {
        "startLine": 108,
        "startChar": 24,
        "endLine": 108,
        "endChar": 57
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4a2bd81_526f2b98",
        "filename": "src/heap/cppgc-js/cpp-heap.cc",
        "patchSetId": 12
      },
      "lineNbr": 108,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-08-13T09:19:42Z",
      "side": 1,
      "message": "If an incremental marking step runs out of work, it doesn\u0027t schedule further tasks. When that happens, incremental marking is stopped. This restarts it (if there isn\u0027t a scheduled task) by scheduling a new task.\nThis is similar to what we currently have in https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/platform/heap/unified_heap_controller.cc;drc\u003dfe1dd740154f5b2d1f65819c4dbb0eb56b31540e;l\u003d149",
      "parentUuid": "843abdd8_5a968ec1",
      "range": {
        "startLine": 108,
        "startChar": 24,
        "endLine": 108,
        "endChar": 57
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c63aad49_73a7af7e",
        "filename": "src/heap/cppgc-js/cpp-heap.cc",
        "patchSetId": 12
      },
      "lineNbr": 108,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-13T10:41:45Z",
      "side": 1,
      "message": "Even if incremental marking runs out of work, it is still in progress because it was not finalized yet. I still think that the name is misleading. Let\u0027s continue the discussion in the comment below.",
      "parentUuid": "e4a2bd81_526f2b98",
      "range": {
        "startLine": 108,
        "startChar": 24,
        "endLine": 108,
        "endChar": 57
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69277139_47d5a7fe",
        "filename": "src/heap/cppgc-js/cpp-heap.cc",
        "patchSetId": 12
      },
      "lineNbr": 148,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-11T11:12:30Z",
      "side": 1,
      "message": "This doesn\u0027t seem to fit here.\n\nIMO CppHeap::AdvanceTracing should just advance tracing without knowing about incremental marking.\n\nThe incremental marking task will repost itself anyways once it runs.",
      "range": {
        "startLine": 148,
        "startChar": 2,
        "endLine": 148,
        "endChar": 23
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8406d4f_38a1d7a1",
        "filename": "src/heap/cppgc-js/cpp-heap.cc",
        "patchSetId": 12
      },
      "lineNbr": 148,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-08-13T09:19:42Z",
      "side": 1,
      "message": "This is similar to the previous comment.\nIncremental marking reposts a task only if there is more work to do.\nIf incremental marking didn\u0027t post a task, and a unified heap step found that we have more work to do (i.e. because of objects marked by v8) then we need to restart incremental marking by scheduling a new task.\nIt\u0027s the same thing we\u0027re currently doing.",
      "parentUuid": "69277139_47d5a7fe",
      "range": {
        "startLine": 148,
        "startChar": 2,
        "endLine": 148,
        "endChar": 23
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be23c5ef_3b98f372",
        "filename": "src/heap/cppgc-js/cpp-heap.cc",
        "patchSetId": 12
      },
      "lineNbr": 148,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-13T10:41:45Z",
      "side": 1,
      "message": "To clarify what I meant with \"doesn\u0027t fit\": CppHeap seems to unnecessarily know the internal details of marking.  A sign that layering is off here is that we have to downcast to UnifiedHeapMarker below.\n\nAnother sign is that the function names and statements are telling a contradicting story:\n1) AdvanceMarkingWithDeadline returns an indication that marking is not done. At this point both CppHeap and the marker know that marking is in progress.\n2) Then CppHeap tells the marker to RestartIncrementalMarkingIfNeeded. Why does CppHeap have to tell the marker to restart marking if it was the marker in the first place that told CppHeap that marking is not done yet :) \n\nOne way to fix it would be to move the management of the task into a separate class (e.g. IncrementalMarkingJob). Then it could be injected into Marker at construction time so that AdvanceMarkingWithDeadline can call a virtual incremental_marking_job_-\u003eScheduleTask().\n\nThis would also fix an issue that RestartIncrementalMarkingIfNeeded is defined only for the unified marker, but not for the standalone marker.",
      "parentUuid": "e8406d4f_38a1d7a1",
      "range": {
        "startLine": 148,
        "startChar": 2,
        "endLine": 148,
        "endChar": 23
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b81cb8f_12905b33",
        "filename": "src/heap/cppgc/heap.cc",
        "patchSetId": 12
      },
      "lineNbr": 121,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-11T11:12:30Z",
      "side": 1,
      "message": "DCHECK(!in_no_gc_scope());",
      "range": {
        "startLine": 121,
        "startChar": 2,
        "endLine": 121,
        "endChar": 3
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3ade74e_be3749bc",
        "filename": "src/heap/cppgc/heap.cc",
        "patchSetId": 12
      },
      "lineNbr": 121,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-08-13T09:19:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b81cb8f_12905b33",
      "range": {
        "startLine": 121,
        "startChar": 2,
        "endLine": 121,
        "endChar": 3
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e43ac4d2_a88909ac",
        "filename": "src/heap/cppgc/heap.cc",
        "patchSetId": 12
      },
      "lineNbr": 129,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-11T11:12:30Z",
      "side": 1,
      "message": "DCHECK(!in_no_gc_scope());",
      "range": {
        "startLine": 129,
        "startChar": 2,
        "endLine": 129,
        "endChar": 3
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ad8a857_38d4277f",
        "filename": "src/heap/cppgc/heap.cc",
        "patchSetId": 12
      },
      "lineNbr": 129,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-08-13T09:19:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e43ac4d2_a88909ac",
      "range": {
        "startLine": 129,
        "startChar": 2,
        "endLine": 129,
        "endChar": 3
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0acd30ad_daab73d1",
        "filename": "src/heap/cppgc/heap.cc",
        "patchSetId": 12
      },
      "lineNbr": 147,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-11T11:12:30Z",
      "side": 1,
      "message": "DCHECK(!in_no_gc_scope());",
      "range": {
        "startLine": 147,
        "startChar": 2,
        "endLine": 147,
        "endChar": 26
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a874b7b3_847fef47",
        "filename": "src/heap/cppgc/heap.cc",
        "patchSetId": 12
      },
      "lineNbr": 147,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-08-13T09:19:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0acd30ad_daab73d1",
      "range": {
        "startLine": 147,
        "startChar": 2,
        "endLine": 147,
        "endChar": 26
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d17bb899_a75df5bd",
        "filename": "src/heap/cppgc/heap.cc",
        "patchSetId": 12
      },
      "lineNbr": 149,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-11T11:12:30Z",
      "side": 1,
      "message": "Can we DCHECK(marker_) here instead?",
      "range": {
        "startLine": 149,
        "startChar": 16,
        "endLine": 149,
        "endChar": 22
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecf1671f_28d4aac0",
        "filename": "src/heap/cppgc/heap.cc",
        "patchSetId": 12
      },
      "lineNbr": 149,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-08-13T09:19:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d17bb899_a75df5bd",
      "range": {
        "startLine": 149,
        "startChar": 16,
        "endLine": 149,
        "endChar": 22
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd208fc9_4677768e",
        "filename": "src/heap/cppgc/heap.h",
        "patchSetId": 12
      },
      "lineNbr": 38,
      "author": {
        "id": 1344750
      },
      "writtenOn": "2020-08-13T09:32:44Z",
      "side": 1,
      "message": "nit: GarbageCollection",
      "range": {
        "startLine": 38,
        "startChar": 23,
        "endLine": 38,
        "endChar": 42
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fd663b2_b0102279",
        "filename": "src/heap/cppgc/heap.h",
        "patchSetId": 12
      },
      "lineNbr": 38,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-08-13T09:37:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd208fc9_4677768e",
      "range": {
        "startLine": 38,
        "startChar": 23,
        "endLine": 38,
        "endChar": 42
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61f0ca3a_07709f25",
        "filename": "src/heap/cppgc/heap.h",
        "patchSetId": 12
      },
      "lineNbr": 39,
      "author": {
        "id": 1344750
      },
      "writtenOn": "2020-08-13T09:32:44Z",
      "side": 1,
      "message": "nit: GarbageCollection",
      "range": {
        "startLine": 39,
        "startChar": 26,
        "endLine": 39,
        "endChar": 45
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b506897b_e3801445",
        "filename": "src/heap/cppgc/heap.h",
        "patchSetId": 12
      },
      "lineNbr": 39,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-08-13T09:37:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "61f0ca3a_07709f25",
      "range": {
        "startLine": 39,
        "startChar": 26,
        "endLine": 39,
        "endChar": 45
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04787b84_07e79ace",
        "filename": "src/heap/cppgc/heap.h",
        "patchSetId": 12
      },
      "lineNbr": 63,
      "author": {
        "id": 1344750
      },
      "writtenOn": "2020-08-13T09:32:44Z",
      "side": 1,
      "message": "nit: GarbageCollection",
      "range": {
        "startLine": 63,
        "startChar": 15,
        "endLine": 63,
        "endChar": 34
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee9782e1_f6f09309",
        "filename": "src/heap/cppgc/heap.h",
        "patchSetId": 12
      },
      "lineNbr": 63,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-08-13T09:37:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04787b84_07e79ace",
      "range": {
        "startLine": 63,
        "startChar": 15,
        "endLine": 63,
        "endChar": 34
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74681b67_445f562c",
        "filename": "src/heap/cppgc/marker.cc",
        "patchSetId": 12
      },
      "lineNbr": 139,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-11T11:12:30Z",
      "side": 1,
      "message": "Can we finalize directly here instead of posting the task?\n(By the time the task runs more objects may appear in the write-barrier worklist)",
      "range": {
        "startLine": 139,
        "startChar": 4,
        "endLine": 139,
        "endChar": 62
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a211014c_976b9bd9",
        "filename": "src/heap/cppgc/marker.cc",
        "patchSetId": 12
      },
      "lineNbr": 139,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-08-13T09:19:42Z",
      "side": 1,
      "message": "We can.\nI based this on what oilpan used to have for standalone GCs (https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/platform/heap/thread_state.cc;drc\u003d23f61cb65a94208dc2c4728e895e87d47f64a8b6;bpv\u003d1;bpt\u003d1;l\u003d1220) and what I thought v8 was doing as well (https://source.chromium.org/chromium/chromium/src/+/master:v8/src/heap/incremental-marking-job.cc;drc\u003d23f61cb65a94208dc2c4728e895e87d47f64a8b6;l\u003d50).\nThe downside of finalizing immediately is that we could get overall a longer pause time than finalizing in a task.\nwdyt?",
      "parentUuid": "74681b67_445f562c",
      "range": {
        "startLine": 139,
        "startChar": 4,
        "endLine": 139,
        "endChar": 62
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce6a6af5_492b72a9",
        "filename": "src/heap/cppgc/marker.cc",
        "patchSetId": 12
      },
      "lineNbr": 139,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-13T10:41:45Z",
      "side": 1,
      "message": "V8 finalizes immediately after a step: https://source.chromium.org/chromium/chromium/src/+/master:v8/src/heap/incremental-marking-job.cc;l\u003d83;drc\u003d23f61cb65a94208dc2c4728e895e87d47f64a8b6\n\nI would prefer that because it is more robust even though the atomic pause time may increase. If we don\u0027t finalize immediately, then a mutator that allocates an object between the steps can arbitrarily delay the finalization (until we hit the hard limit). Also keep in mind that while incremental marking is running, the mutator is pay the cost of the marking write-barrier. So finishing earlier is better.",
      "parentUuid": "a211014c_976b9bd9",
      "range": {
        "startLine": 139,
        "startChar": 4,
        "endLine": 139,
        "endChar": 62
      },
      "revId": "0f8e1c7acfd02c866248ab8fb03d41bded320dfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}