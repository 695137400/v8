{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f238e3ac_71950237",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1345975
      },
      "writtenOn": "2024-09-26T08:54:29Z",
      "side": 1,
      "message": "Thanks for taking this, Francis.\nCan you please add a test in the `TestInvalidWrappers()` subtest, in `test/mjsunit/wasm/stack-switching.js`?",
      "revId": "bcf0142bde76ac28c230bc9d9b825c6533bf3ec0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "764577ea_c5c46ec3",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 1
      },
      "lineNbr": 2324,
      "author": {
        "id": 1345975
      },
      "writtenOn": "2024-09-26T08:54:29Z",
      "side": 1,
      "message": "This would only cover actual wasm exported functions. Should we also reject `WebAssembly.Function`-wrapped JS functions?\nThe type for that is `WasmJSFunction`.",
      "revId": "bcf0142bde76ac28c230bc9d9b825c6533bf3ec0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "748b6a22_7e632282",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 1
      },
      "lineNbr": 2324,
      "author": {
        "id": 1313031
      },
      "writtenOn": "2024-09-26T17:27:40Z",
      "side": 1,
      "message": "Ack. Have added the tests.\nAnd, yes, I think we should also exclude WebAssembly.Functions",
      "parentUuid": "764577ea_c5c46ec3",
      "revId": "bcf0142bde76ac28c230bc9d9b825c6533bf3ec0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}