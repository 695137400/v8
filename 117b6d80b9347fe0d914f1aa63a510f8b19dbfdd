{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6f66adcd_a22f968b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-11-12T15:42:37Z",
      "side": 1,
      "message": "Please see my comment below. I will write a CL description when we have decided which way to go.",
      "revId": "117b6d80b9347fe0d914f1aa63a510f8b19dbfdd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "968b7bfa_f3efe841",
        "filename": "src/compiler/js-native-context-specialization.cc",
        "patchSetId": 2
      },
      "lineNbr": 949,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-11-12T15:42:37Z",
      "side": 1,
      "message": "An alternative would be to compare the new value\u0027s map with the then-current value\u0027s map rather than with the now-current value\u0027s map. I think this would correspond to the CSA code and would perhaps be less surprising. In the case where the map is stable we could possibly take the dependency in order to avoid loading the then-current value and its map.",
      "revId": "117b6d80b9347fe0d914f1aa63a510f8b19dbfdd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}