{
  "comments": [
    {
      "key": {
        "uuid": "637b6adc_015e0cf6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-09-28T08:37:11Z",
      "side": 1,
      "message": "A few more comments, and resolving old ones that remained open but are no longer relevant",
      "revId": "815a985d0643b2f707eee212f6be88ce95815e27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41c3c839_a9452c22",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1118564
      },
      "writtenOn": "2020-09-28T09:54:04Z",
      "side": 1,
      "message": "Thanks Santiago! Comments below.",
      "revId": "815a985d0643b2f707eee212f6be88ce95815e27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1a49c71_1e130294",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1118564
      },
      "writtenOn": "2020-09-29T12:28:54Z",
      "side": 1,
      "message": "Hi Georg, you wanted to take a quick look?",
      "revId": "815a985d0643b2f707eee212f6be88ce95815e27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d257c0c_f7d25ad9",
        "filename": "src/compiler/js-heap-broker.h",
        "patchSetId": 22
      },
      "lineNbr": 118,
      "author": {
        "id": 1118564
      },
      "writtenOn": "2020-09-27T16:26:51Z",
      "side": 1,
      "message": "Hi guys, one more note on this. I am thinking that the NexusConfig returned should match the thread the broker is running on. At the moment, all of the FeedbackNexus instantiations are on the main thread, therefore the isolate\u0027s (mainthread) config should be used.\n\nI imagine we\u0027ll eventually be in a state where some work is still done on the main thread and other work on the background thread. This method should recognize where the broker is running and return the correct NexusConfig. Does that make sense to y\u0027all?",
      "revId": "815a985d0643b2f707eee212f6be88ce95815e27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec18eda0_47ece69d",
        "filename": "src/compiler/js-heap-broker.h",
        "patchSetId": 22
      },
      "lineNbr": 118,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-09-28T08:37:11Z",
      "side": 1,
      "message": "I thought that was the idea behind the TODO comment above, that we said it would be addressed in a follow-up CL. What would be the change?",
      "parentUuid": "6d257c0c_f7d25ad9",
      "revId": "815a985d0643b2f707eee212f6be88ce95815e27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92134862_0f49083e",
        "filename": "src/compiler/js-heap-broker.h",
        "patchSetId": 22
      },
      "lineNbr": 118,
      "author": {
        "id": 1118564
      },
      "writtenOn": "2020-09-28T09:54:04Z",
      "side": 1,
      "message": "Yeah, that is still correct! I am just saying that I have an idea about the *nature* of that change to come.\n\nYou see, at the moment, we look at the vector through the FeedbackNexus as we build those ProcessedFeedback objects. And at this moment, that is done during serialization. This process still occurs on the main thread. So it would be necessary to keep using the main thread NexusConfig. But we are gradually serializing less. At some point, I hope that we\u0027ll be constructing the ProcessedFeedback objects during native context specialization (again, as we used to).\n\nNow, that takes place on the background thread when concurrent inlining is on. My hope is that it remains there, and we build those objects from the background thread with direct reads. When FeedbackNexus objects are created in this context, they need a NexusConfig which is passed a LocalHeap and follows background thread semantics.\n\nI\u0027m not proposing any change to this CL, I\u0027m just talking about what comes next.",
      "parentUuid": "ec18eda0_47ece69d",
      "revId": "815a985d0643b2f707eee212f6be88ce95815e27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05364a42_3c52abb4",
        "filename": "src/compiler/js-heap-broker.h",
        "patchSetId": 22
      },
      "lineNbr": 118,
      "author": {
        "id": 1118564
      },
      "writtenOn": "2020-09-28T11:22:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "92134862_0f49083e",
      "revId": "815a985d0643b2f707eee212f6be88ce95815e27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91e8f851_60bea151",
        "filename": "src/objects/feedback-vector-inl.h",
        "patchSetId": 22
      },
      "lineNbr": 410,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2020-09-29T13:38:57Z",
      "side": 1,
      "message": "Looks like it could be simplified by having the cache_ itself being a std::pair, wdyt?",
      "range": {
        "startLine": 404,
        "startChar": 0,
        "endLine": 410,
        "endChar": 44
      },
      "revId": "815a985d0643b2f707eee212f6be88ce95815e27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00889b3b_d6c7e06b",
        "filename": "src/objects/feedback-vector-inl.h",
        "patchSetId": 22
      },
      "lineNbr": 410,
      "author": {
        "id": 1118564
      },
      "writtenOn": "2020-09-29T20:14:24Z",
      "side": 1,
      "message": "Thanks for the suggestion, I made the cache_ a bit better.",
      "parentUuid": "91e8f851_60bea151",
      "range": {
        "startLine": 404,
        "startChar": 0,
        "endLine": 410,
        "endChar": 44
      },
      "revId": "815a985d0643b2f707eee212f6be88ce95815e27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d93a719b_a269d830",
        "filename": "src/objects/feedback-vector-inl.h",
        "patchSetId": 22
      },
      "lineNbr": 419,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2020-09-29T13:38:57Z",
      "side": 1,
      "message": "Could it be worth attaching those to MaybeObject directly? E.g. 3 overloads for a MaybeObject::Create()?",
      "range": {
        "startLine": 415,
        "startChar": 0,
        "endLine": 419,
        "endChar": 1
      },
      "revId": "815a985d0643b2f707eee212f6be88ce95815e27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87ec1f95_eb173821",
        "filename": "src/objects/feedback-vector-inl.h",
        "patchSetId": 22
      },
      "lineNbr": 419,
      "author": {
        "id": 1118564
      },
      "writtenOn": "2020-09-29T20:14:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d93a719b_a269d830",
      "range": {
        "startLine": 415,
        "startChar": 0,
        "endLine": 419,
        "endChar": 1
      },
      "revId": "815a985d0643b2f707eee212f6be88ce95815e27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89e1fdf3_bdd22a19",
        "filename": "src/objects/feedback-vector-inl.h",
        "patchSetId": 22
      },
      "lineNbr": 442,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2020-09-29T13:38:57Z",
      "side": 1,
      "message": "I think we should extract the assert\u0027s condition into a reusable trait, i.e.\n\n  template\u003ctypename T\u003e\n  struct IsValidFeedbackType\n    : public std::integral_constant\u003cbool, \n      std::is_base_of\u003cMaybeObject, T\u003e::value \n        || std::is_same\u003cT, Smi\u003e::value\n        || std::is_base_of\u003cObject, T\u003e::value\u003e \n  {};",
      "range": {
        "startLine": 422,
        "startChar": 0,
        "endLine": 442,
        "endChar": 67
      },
      "revId": "815a985d0643b2f707eee212f6be88ce95815e27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be2c6d61_053c3b1e",
        "filename": "src/objects/feedback-vector-inl.h",
        "patchSetId": 22
      },
      "lineNbr": 442,
      "author": {
        "id": 1118564
      },
      "writtenOn": "2020-09-29T20:14:24Z",
      "side": 1,
      "message": "Great idea!",
      "parentUuid": "89e1fdf3_bdd22a19",
      "range": {
        "startLine": 422,
        "startChar": 0,
        "endLine": 442,
        "endChar": 67
      },
      "revId": "815a985d0643b2f707eee212f6be88ce95815e27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e849a4b7_6c3e5622",
        "filename": "src/objects/feedback-vector.h",
        "patchSetId": 22
      },
      "lineNbr": 610,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2020-09-29T13:38:57Z",
      "side": 1,
      "message": "like that!",
      "range": {
        "startLine": 605,
        "startChar": 0,
        "endLine": 610,
        "endChar": 31
      },
      "revId": "815a985d0643b2f707eee212f6be88ce95815e27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78d8562f_bab63a09",
        "filename": "src/objects/feedback-vector.h",
        "patchSetId": 22
      },
      "lineNbr": 817,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2020-09-29T13:38:57Z",
      "side": 1,
      "message": "Have you considered my comment about using a base::Optional\u003cMabyeObjectHandle\u003e here to avoid the additional bool flags? If so, please share why this is preferable. 😊",
      "range": {
        "startLine": 814,
        "startChar": 0,
        "endLine": 817,
        "endChar": 29
      },
      "revId": "815a985d0643b2f707eee212f6be88ce95815e27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92db2fdc_72559ce0",
        "filename": "src/objects/feedback-vector.h",
        "patchSetId": 22
      },
      "lineNbr": 817,
      "author": {
        "id": 1118564
      },
      "writtenOn": "2020-09-29T20:14:24Z",
      "side": 1,
      "message": "Indeed (I am sorry that I apparently missed that comment).\nI think you\u0027ll find the new version to your liking!",
      "parentUuid": "78d8562f_bab63a09",
      "range": {
        "startLine": 814,
        "startChar": 0,
        "endLine": 817,
        "endChar": 29
      },
      "revId": "815a985d0643b2f707eee212f6be88ce95815e27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}