{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9705a572_5d262cfe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1472029
      },
      "writtenOn": "2021-07-12T23:41:34Z",
      "side": 1,
      "message": "Added a new API HasCustomIterator(Local\u003cArray\u003e array) which is implemented using Object::IterationHasObservableEffects().\nThere is a Torque macro that seems to do what we want here: \n\nmacro IsFastJSArrayForReadWithNoCustomIteration(context: Context, o: Object): bool {...}\n\nand it is implemented by trying to cast the object to a FastJSArrayWithNoCustomIteration.\nThis cast checks that:\n1. the ArrayIteratorProtector is not invalid,\n2. the array can be cast to a FastJSArray, which in turns checks that:\n2a. the array has fast element kinds\n2b. the prototype is the initial array prototype\n2c. the NoElementsProtectorCell is valid\n\nFunction Object::IterationHasObservableEffects() seems to do exactly the same work that Torque macro does so it should work.",
      "revId": "86b616a04c5898858d888115afd55d9bc6b17b74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1aa72312_e31d83d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-07-13T07:44:03Z",
      "side": 1,
      "message": "LGTM % comment and suggestion about the test, thanks!\n@Camillo could you PTAL at the API changes? Thanks!",
      "revId": "86b616a04c5898858d888115afd55d9bc6b17b74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c914ba9_d7e5fcd2",
        "filename": "include/v8-fast-api-calls.h",
        "patchSetId": 1
      },
      "lineNbr": 781,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-07-13T07:44:03Z",
      "side": 1,
      "message": "nit: I think this function was requested to be part of the general V8 API, not only to be used in fast calls. Should we move it to v8.h?",
      "range": {
        "startLine": 781,
        "startChar": 5,
        "endLine": 781,
        "endChar": 22
      },
      "revId": "86b616a04c5898858d888115afd55d9bc6b17b74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc39fb51_fa0a6d33",
        "filename": "include/v8-fast-api-calls.h",
        "patchSetId": 1
      },
      "lineNbr": 781,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-07-13T08:26:55Z",
      "side": 1,
      "message": "+1\nI guess in general, anything that\u0027s part of the fast-api-calls API that also applies to general JS objects should be move to v8.h",
      "parentUuid": "8c914ba9_d7e5fcd2",
      "range": {
        "startLine": 781,
        "startChar": 5,
        "endLine": 781,
        "endChar": 22
      },
      "revId": "86b616a04c5898858d888115afd55d9bc6b17b74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c4f93f4_39f9463b",
        "filename": "include/v8-fast-api-calls.h",
        "patchSetId": 1
      },
      "lineNbr": 781,
      "author": {
        "id": 1472029
      },
      "writtenOn": "2021-07-13T14:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fc39fb51_fa0a6d33",
      "range": {
        "startLine": 781,
        "startChar": 5,
        "endLine": 781,
        "endChar": 22
      },
      "revId": "86b616a04c5898858d888115afd55d9bc6b17b74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f574fd51_31e67bd9",
        "filename": "include/v8-fast-api-calls.h",
        "patchSetId": 1
      },
      "lineNbr": 781,
      "author": {
        "id": 1472029
      },
      "writtenOn": "2021-07-13T14:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fc39fb51_fa0a6d33",
      "range": {
        "startLine": 781,
        "startChar": 5,
        "endLine": 781,
        "endChar": 22
      },
      "revId": "86b616a04c5898858d888115afd55d9bc6b17b74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48bf1ff2_f6f19dbd",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 1
      },
      "lineNbr": 29273,
      "author": {
        "id": 1472029
      },
      "writtenOn": "2021-07-12T23:41:34Z",
      "side": 1,
      "message": "This doesn\u0027t link because cctest does not include objects/objects.cc in its sources. What to do?",
      "range": {
        "startLine": 29273,
        "startChar": 5,
        "endLine": 29273,
        "endChar": 35
      },
      "revId": "86b616a04c5898858d888115afd55d9bc6b17b74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66873eb5_92dac8da",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 1
      },
      "lineNbr": 29273,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-07-13T07:44:03Z",
      "side": 1,
      "message": "I\u0027m not sure this is the issue, cctest should include everything. What *might* be the issue is that IterationHasObservableEffects was not used before in another compilation unit, so it\u0027s missing the `V8_EXPORT_PRIVATE` marker. Could you try adding that?",
      "parentUuid": "48bf1ff2_f6f19dbd",
      "range": {
        "startLine": 29273,
        "startChar": 5,
        "endLine": 29273,
        "endChar": 35
      },
      "revId": "86b616a04c5898858d888115afd55d9bc6b17b74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae176fc4_b601cc93",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 1
      },
      "lineNbr": 29273,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-07-13T08:26:55Z",
      "side": 1,
      "message": "I think this will work out of the box if you move HasCustomIterator to v8::Array::HasCustomIterator",
      "parentUuid": "66873eb5_92dac8da",
      "range": {
        "startLine": 29273,
        "startChar": 5,
        "endLine": 29273,
        "endChar": 35
      },
      "revId": "86b616a04c5898858d888115afd55d9bc6b17b74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb9138aa_d546dba7",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 1
      },
      "lineNbr": 29273,
      "author": {
        "id": 1472029
      },
      "writtenOn": "2021-07-13T14:51:47Z",
      "side": 1,
      "message": "Thanks! It was probably a missing V8_EXPORT_PRIVATE. But moving the function to v8::Array fixed the issue.",
      "parentUuid": "ae176fc4_b601cc93",
      "range": {
        "startLine": 29273,
        "startChar": 5,
        "endLine": 29273,
        "endChar": 35
      },
      "revId": "86b616a04c5898858d888115afd55d9bc6b17b74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69030262_a9a0e0a6",
        "filename": "test/cctest/test-api.cc",
        "patchSetId": 1
      },
      "lineNbr": 29273,
      "author": {
        "id": 1472029
      },
      "writtenOn": "2021-07-13T14:51:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae176fc4_b601cc93",
      "range": {
        "startLine": 29273,
        "startChar": 5,
        "endLine": 29273,
        "endChar": 35
      },
      "revId": "86b616a04c5898858d888115afd55d9bc6b17b74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}