{
  "comments": [
    {
      "key": {
        "uuid": "f060703e_9b463e26",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1249724
      },
      "writtenOn": "2020-08-05T20:52:30Z",
      "side": 1,
      "message": "I was seeing a strange behavior when I used `vceq(dst, dst, dst)` to set `dst` to all ones. The regress-1112124.js test case would fail, because the output would alternate between -1 and 0.\nI took a look at godbolt to see what is the correct way to set a NEON register to all ones, and it looked like vmov (imm) was the right way. Since the assembler did not yet support vmov (imm), I had to implement it.\n\nBill for everything, Jakob for simulator (OWNERS), and v8-arm-ports to help review the arm simulator, assembler, diasm. Ptal, thanks!",
      "revId": "b132fb825a5fc5102bee64c34a6705fa69854ca8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d9f1b02_ff30ccd7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001213
      },
      "writtenOn": "2020-08-05T21:00:25Z",
      "side": 1,
      "message": "It seems like a pretty serious hardware bug if comparing something to itself gives 0. Wouldn\u0027t this mean that our equality operator has a bug too?",
      "parentUuid": "f060703e_9b463e26",
      "revId": "b132fb825a5fc5102bee64c34a6705fa69854ca8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63609844_4872a638",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1249724
      },
      "writtenOn": "2020-08-05T21:15:25Z",
      "side": 1,
      "message": "Oh you know what, this *could* be a simulator bug, I have only ran it on my workstation, I should try this on a phone and see, thanks for raising this up. Will get back to you.",
      "parentUuid": "7d9f1b02_ff30ccd7",
      "revId": "b132fb825a5fc5102bee64c34a6705fa69854ca8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80394fbb_87c5198f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1187744
      },
      "writtenOn": "2020-08-05T21:28:58Z",
      "side": 1,
      "message": "I don\u0027t know if the simulator has a bug but there are two vceq instructions in arm: one for integer and one for FP. AllOnes was using the FP one so for +/- zero or Nan you won\u0027t get the correct result. The integer one is available in the assembler as \u0027vceq(Neon32, dst, dst, dst)\u0027.\n\nvmov is the better way though.",
      "parentUuid": "63609844_4872a638",
      "revId": "b132fb825a5fc5102bee64c34a6705fa69854ca8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4faccd7_d36ec7b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1187744
      },
      "writtenOn": "2020-08-05T21:28:58Z",
      "side": 1,
      "message": "just dbc",
      "revId": "b132fb825a5fc5102bee64c34a6705fa69854ca8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5af71dda_f660b46a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1249724
      },
      "writtenOn": "2020-08-05T21:31:47Z",
      "side": 1,
      "message": "Argh yea that must be it! Forgot about the zeros and NaNs. Thanks!",
      "parentUuid": "80394fbb_87c5198f",
      "revId": "b132fb825a5fc5102bee64c34a6705fa69854ca8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b0af698_0b0cb37d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-08-06T15:03:03Z",
      "side": 1,
      "message": "Simulator LGTM.\n\nFavorite way to implement a NaN-check in JS: function isNaN(x) { return x !\u003d\u003d x; }",
      "revId": "b132fb825a5fc5102bee64c34a6705fa69854ca8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c84d36e_ce7d93cf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1249724
      },
      "writtenOn": "2020-08-10T16:27:12Z",
      "side": 1,
      "message": "Hi Bill, ptal, thanks!",
      "revId": "b132fb825a5fc5102bee64c34a6705fa69854ca8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd855b88_95f79951",
        "filename": "src/codegen/arm/assembler-arm.cc",
        "patchSetId": 1
      },
      "lineNbr": 2635,
      "author": {
        "id": 1001213
      },
      "writtenOn": "2020-08-10T17:00:17Z",
      "side": 1,
      "message": "\u0027op\u0027 is always zeroed, so maybe just set it in ::vmov.",
      "range": {
        "startLine": 2635,
        "startChar": 0,
        "endLine": 2635,
        "endChar": 41
      },
      "revId": "b132fb825a5fc5102bee64c34a6705fa69854ca8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a89dc27_9eeef59a",
        "filename": "test/mjsunit/wasm/wasm-module-builder.js",
        "patchSetId": 1
      },
      "lineNbr": 481,
      "author": {
        "id": 1001213
      },
      "writtenOn": "2020-08-10T17:00:17Z",
      "side": 1,
      "message": "nit: these seem to be in increasing order, so should go 1 line above.",
      "range": {
        "startLine": 481,
        "startChar": 0,
        "endLine": 481,
        "endChar": 34
      },
      "revId": "b132fb825a5fc5102bee64c34a6705fa69854ca8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}