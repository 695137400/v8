{
  "comments": [
    {
      "key": {
        "uuid": "59c2ce36_b261d073",
        "filename": "src/base/template-utils.h",
        "patchSetId": 7
      },
      "lineNbr": 82,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2018-02-28T14:49:13Z",
      "side": 1,
      "message": "Neat! :)",
      "revId": "33e30b1ab8e356f71216b505ca145db86b4f9a2c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3a5177c_c36de461",
        "filename": "test/unittests/base/template-utils-unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 96,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2018-02-28T14:49:13Z",
      "side": 1,
      "message": "It seems that the changed definition of has_output_operator does not treat this as an output operator any more without the \"const\". Can you explain why?\nWould it still work if we would receive TestClass2 by value (I hope so)? If yes, please add a test for that.",
      "revId": "33e30b1ab8e356f71216b505ca145db86b4f9a2c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f73b2e8_5c1f91e3",
        "filename": "test/unittests/base/template-utils-unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 96,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2018-02-28T15:02:32Z",
      "side": 1,
      "message": "The expression SFINAE constructs a temporary object passed to operator\u003c\u003c. Temporaries can\u0027t bind to non-const references:\n\nthakis@thakis:~/src/chrome/src$ cat test.cc\nclass C {};\nvoid f(C\u0026);\nvoid g(const C\u0026);\nvoid h(C);\n\nvoid r() {\n  f(C());\n  g(C());  // Ok\n  h(C());  // Ok\n}\nthakis@thakis:~/src/chrome/src$ third_party/llvm-build/Release+Asserts/bin/clang -c test.cc\ntest.cc:7:3: error: no matching function for call to \u0027f\u0027\n  f(C());\n  ^\ntest.cc:2:6: note: candidate function not viable: expects an l-value for 1st argument\nvoid f(C\u0026);\n     ^\n1 error generated.\n\n\nhttps://herbsutter.com/2008/01/01/gotw-88-a-candidate-for-the-most-important-const/ has some more words about a topic in that vicinity.\n\nAdded a test for a by-value op\u003c\u003c.",
      "parentUuid": "b3a5177c_c36de461",
      "revId": "33e30b1ab8e356f71216b505ca145db86b4f9a2c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}