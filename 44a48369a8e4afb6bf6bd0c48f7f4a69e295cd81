{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "760a89a6_4f97c084",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2020-11-23T18:46:05Z",
      "side": 1,
      "message": "Thank you! The node failure looks like it\u0027s caused by this CL as the node bot doesn\u0027t generally fail at the moment.",
      "revId": "44a48369a8e4afb6bf6bd0c48f7f4a69e295cd81",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "975d1301_0c002a8e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2020-11-23T23:01:09Z",
      "side": 1,
      "message": "working now ðŸ˜Š",
      "parentUuid": "760a89a6_4f97c084",
      "revId": "44a48369a8e4afb6bf6bd0c48f7f4a69e295cd81",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe690c30_574665c7",
        "filename": "src/builtins/string-trim.tq",
        "patchSetId": 7
      },
      "lineNbr": 98,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2020-11-23T18:46:05Z",
      "side": 1,
      "message": "This RawPtr is also used to point into the heap, which makes this type non-GC safe and a very dangerous thing to add to Torque. I would really prefer if we found a way to construct a slice in a way that on-heap string data uses normal on-heap slices.",
      "range": {
        "startLine": 98,
        "startChar": 2,
        "endLine": 98,
        "endChar": 15
      },
      "revId": "44a48369a8e4afb6bf6bd0c48f7f4a69e295cd81",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a05e3b5_65cb5398",
        "filename": "src/builtins/string-trim.tq",
        "patchSetId": 7
      },
      "lineNbr": 98,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2020-11-23T23:01:09Z",
      "side": 1,
      "message": "Should we check IsExternalString for off-heap string data and then select on-heap/off-heap slice?",
      "parentUuid": "fe690c30_574665c7",
      "range": {
        "startLine": 98,
        "startChar": 2,
        "endLine": 98,
        "endChar": 15
      },
      "revId": "44a48369a8e4afb6bf6bd0c48f7f4a69e295cd81",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b43a336a_9547266b",
        "filename": "src/builtins/string-trim.tq",
        "patchSetId": 7
      },
      "lineNbr": 106,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2020-11-23T18:46:05Z",
      "side": 1,
      "message": "There is a type-alias for Slice in the global namespace, so you can drop the torque_internal.",
      "range": {
        "startLine": 106,
        "startChar": 31,
        "endLine": 106,
        "endChar": 48
      },
      "revId": "44a48369a8e4afb6bf6bd0c48f7f4a69e295cd81",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eef23379_3d14f320",
        "filename": "src/builtins/string-trim.tq",
        "patchSetId": 7
      },
      "lineNbr": 106,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2020-11-23T19:26:56Z",
      "side": 1,
      "message": "Hmm, I can\u0027t find it ðŸ˜ž",
      "parentUuid": "b43a336a_9547266b",
      "range": {
        "startLine": 106,
        "startChar": 31,
        "endLine": 106,
        "endChar": 48
      },
      "revId": "44a48369a8e4afb6bf6bd0c48f7f4a69e295cd81",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76a02351_5f331352",
        "filename": "src/builtins/string-trim.tq",
        "patchSetId": 7
      },
      "lineNbr": 106,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2020-11-23T20:42:30Z",
      "side": 1,
      "message": "You are right, I\u0027m sorry, it doesn\u0027t exist. In this case, it\u0027s fine.",
      "parentUuid": "eef23379_3d14f320",
      "range": {
        "startLine": 106,
        "startChar": 31,
        "endLine": 106,
        "endChar": 48
      },
      "revId": "44a48369a8e4afb6bf6bd0c48f7f4a69e295cd81",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a3cf5f4_beb7af10",
        "filename": "src/builtins/string-trim.tq",
        "patchSetId": 7
      },
      "lineNbr": 106,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2020-11-23T20:56:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "76a02351_5f331352",
      "range": {
        "startLine": 106,
        "startChar": 31,
        "endLine": 106,
        "endChar": 48
      },
      "revId": "44a48369a8e4afb6bf6bd0c48f7f4a69e295cd81",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "824320d9_4978151f",
        "filename": "src/builtins/string-trim.tq",
        "patchSetId": 7
      },
      "lineNbr": 110,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2020-11-23T19:26:56Z",
      "side": 1,
      "message": "Sorry I forgot to highlight this. Do you have any concern since we need to adjust slice with stringDataOffset and I did this \"hack\" by set the length to stringLength*stringDataOffset",
      "revId": "44a48369a8e4afb6bf6bd0c48f7f4a69e295cd81",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbf2dae5_7d38119c",
        "filename": "src/builtins/string-trim.tq",
        "patchSetId": 7
      },
      "lineNbr": 110,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2020-11-23T20:42:30Z",
      "side": 1,
      "message": "I actually don\u0027t understand this hack. Could you explain?",
      "parentUuid": "824320d9_4978151f",
      "revId": "44a48369a8e4afb6bf6bd0c48f7f4a69e295cd81",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "449d5c85_a54a9663",
        "filename": "src/builtins/string-trim.tq",
        "patchSetId": 7
      },
      "lineNbr": 110,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2020-11-23T20:56:17Z",
      "side": 1,
      "message": "In the case where stringDataOffset !\u003d 0, the slice does not really work since you need to get data at start_pointer + offset + (stringDataOffset + index)*%sizeOf\u003cT\u003e instead of start_pointer + offset + index*sizeOf\u003cT\u003e",
      "parentUuid": "bbf2dae5_7d38119c",
      "revId": "44a48369a8e4afb6bf6bd0c48f7f4a69e295cd81",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67bb2cbd_c6ba7bf7",
        "filename": "src/builtins/string-trim.tq",
        "patchSetId": 7
      },
      "lineNbr": 110,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2020-11-23T21:02:52Z",
      "side": 1,
      "message": "Hmm, but couldn\u0027t you add stringDataOffset*%sizeOf\u003cT\u003e to the slice offset? And how does stringLength*stringDataOffset work? How does it make sense to multiply a length with an offset?",
      "parentUuid": "449d5c85_a54a9663",
      "revId": "44a48369a8e4afb6bf6bd0c48f7f4a69e295cd81",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "061d82b9_5aba4999",
        "filename": "src/builtins/string-trim.tq",
        "patchSetId": 7
      },
      "lineNbr": 110,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2020-11-23T21:20:56Z",
      "side": 1,
      "message": "right! my bad, I wasn\u0027t thinking about changing NewOffHeapSlice. Thanks Tobias!",
      "parentUuid": "67bb2cbd_c6ba7bf7",
      "revId": "44a48369a8e4afb6bf6bd0c48f7f4a69e295cd81",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c1998ef_9087da85",
        "filename": "src/builtins/string-trim.tq",
        "patchSetId": 7
      },
      "lineNbr": 110,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2020-11-23T23:01:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "061d82b9_5aba4999",
      "revId": "44a48369a8e4afb6bf6bd0c48f7f4a69e295cd81",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4226e084_ccef0703",
        "filename": "src/builtins/string-trim.tq",
        "patchSetId": 7
      },
      "lineNbr": 113,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2020-11-23T18:46:05Z",
      "side": 1,
      "message": "I think it\u0027s better to avoid not mentioning a template parameter in the arguments. How about letting this macro take a Slice as argument and perform the conversion elsewhere? We could have a type-safe macro to get the string data, for example something like this:\nmacro StringData(s: String): never labels OneByte(Slice\u003cchar8\u003e), TwoByte(Slice\u003cchar16\u003e)",
      "range": {
        "startLine": 113,
        "startChar": 34,
        "endLine": 113,
        "endChar": 43
      },
      "revId": "44a48369a8e4afb6bf6bd0c48f7f4a69e295cd81",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2092a75e_6a759b4c",
        "filename": "src/builtins/string-trim.tq",
        "patchSetId": 7
      },
      "lineNbr": 113,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2020-11-23T23:01:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4226e084_ccef0703",
      "range": {
        "startLine": 113,
        "startChar": 34,
        "endLine": 113,
        "endChar": 43
      },
      "revId": "44a48369a8e4afb6bf6bd0c48f7f4a69e295cd81",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}