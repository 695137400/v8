{
  "comments": [
    {
      "key": {
        "uuid": "8fef141e_81b5b759",
        "filename": "src/heap/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 1923,
      "author": {
        "id": 1119605
      },
      "writtenOn": "2017-10-23T12:30:20Z",
      "side": 1,
      "message": "Please also explain here why we are doing this.",
      "range": {
        "startLine": 1923,
        "startChar": 29,
        "endLine": 1923,
        "endChar": 33
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c6e58d7_51c6dae6",
        "filename": "src/heap/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 1923,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2017-10-23T12:55:23Z",
      "side": 1,
      "message": "This one is gone. It was preserving sweeping order but removed for simplicity.",
      "parentUuid": "8fef141e_81b5b759",
      "range": {
        "startLine": 1923,
        "startChar": 29,
        "endLine": 1923,
        "endChar": 33
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06438537_45f7cb53",
        "filename": "src/heap/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 1925,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2017-10-20T16:11:07Z",
      "side": 1,
      "message": "How about filtering only the old space? Other spaces should be safe.",
      "range": {
        "startLine": 1925,
        "startChar": 35,
        "endLine": 1925,
        "endChar": 59
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb739338_d9769510",
        "filename": "src/heap/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 1925,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2017-10-23T08:54:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "06438537_45f7cb53",
      "range": {
        "startLine": 1925,
        "startChar": 35,
        "endLine": 1925,
        "endChar": 59
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85840cfa_42ba4012",
        "filename": "src/heap/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 1927,
      "author": {
        "id": 1119605
      },
      "writtenOn": "2017-10-23T12:30:20Z",
      "side": 1,
      "message": "Overall: Why don\u0027t we just remove pages from the sweeping list here and let 1936 iterate over all old to new chunks? That should be safe because you removed everything that may still require sweeping and simpler.",
      "range": {
        "startLine": 1927,
        "startChar": 17,
        "endLine": 1927,
        "endChar": 36
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d60f46b4_45c29a2a",
        "filename": "src/heap/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 1927,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2017-10-23T12:55:23Z",
      "side": 1,
      "message": "Done. That\u0027s what we do for now. I can construct a case where this is not optimal but lets go for the simpler solution first.",
      "parentUuid": "85840cfa_42ba4012",
      "range": {
        "startLine": 1927,
        "startChar": 17,
        "endLine": 1927,
        "endChar": 36
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e55e6b5_9f3d3a89",
        "filename": "src/heap/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 1930,
      "author": {
        "id": 1119605
      },
      "writtenOn": "2017-10-23T12:30:20Z",
      "side": 1,
      "message": "The Scavenger will not iterate invalidated slots. I think you can remove that condition.",
      "range": {
        "startLine": 1930,
        "startChar": 16,
        "endLine": 1930,
        "endChar": 33
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f895619_1dabe1cf",
        "filename": "src/heap/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 1930,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2017-10-23T12:55:23Z",
      "side": 1,
      "message": "It is hidden behind the general abstraction which we shared across the whole GC codebase. Should not be any noticeable overhead so I\u0027d like to keep it uniform.",
      "parentUuid": "8e55e6b5_9f3d3a89",
      "range": {
        "startLine": 1930,
        "startChar": 16,
        "endLine": 1930,
        "endChar": 33
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a55a8eb_a1055e98",
        "filename": "src/heap/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 1931,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2017-10-20T16:11:07Z",
      "side": 1,
      "message": "If this predicate would be pure and would return only true/false without adding items, then we could unconditionally add items in line 1941.\n\nI guess this is needed to ensure that the PageScavengingItems come in the sweeping order?\nCould you please add a comment?",
      "range": {
        "startLine": 1931,
        "startChar": 8,
        "endLine": 1931,
        "endChar": 50
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bf5f4ab_690b187c",
        "filename": "src/heap/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 1931,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2017-10-23T08:54:29Z",
      "side": 1,
      "message": "As discussed offline: I will remove the logic that keeps the order of pages for simplicity. Lets only re-add if necessary.",
      "parentUuid": "3a55a8eb_a1055e98",
      "range": {
        "startLine": 1931,
        "startChar": 8,
        "endLine": 1931,
        "endChar": 50
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0357a63_c9fea830",
        "filename": "src/heap/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 1940,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2017-10-20T16:11:07Z",
      "side": 1,
      "message": "This is fragile as it relies on the invariant the the sweeping list does not contain pages with SweepingDone(). If I understand correctly the destructor of FilterSweepingPagesScope can break that invariant (see my comment there). Other places might also break this invariant (they just need to sweep a page without extracting it from the list).\n\nHow about maintaining \"was added to job\" local state explicitly in this function? Or giving up the sweeping order?",
      "range": {
        "startLine": 1940,
        "startChar": 21,
        "endLine": 1940,
        "endChar": 33
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63ef3c2e_84e8d777",
        "filename": "src/heap/heap.cc",
        "patchSetId": 5
      },
      "lineNbr": 1940,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2017-10-23T08:54:29Z",
      "side": 1,
      "message": "Done. Giving up sweeping order for now.",
      "parentUuid": "c0357a63_c9fea830",
      "range": {
        "startLine": 1940,
        "startChar": 21,
        "endLine": 1940,
        "endChar": 33
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efc2a446_7992fa60",
        "filename": "src/heap/mark-compact.cc",
        "patchSetId": 5
      },
      "lineNbr": 651,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2017-10-20T16:11:07Z",
      "side": 1,
      "message": "Some of the pages in the list will be swept at this point. Is it ok?",
      "range": {
        "startLine": 651,
        "startChar": 44,
        "endLine": 651,
        "endChar": 62
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16544e79_3571a1a9",
        "filename": "src/heap/mark-compact.cc",
        "patchSetId": 5
      },
      "lineNbr": 651,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2017-10-23T08:54:29Z",
      "side": 1,
      "message": "Yes, they will be immediately filter out when the concurrent or lazy sweeper gets to them.\n\nWe already have to deal with such cases, as the debugger and other infra might eagerly sweep a page that is still in the working set.",
      "parentUuid": "efc2a446_7992fa60",
      "range": {
        "startLine": 651,
        "startChar": 44,
        "endLine": 651,
        "endChar": 62
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37dc351b_8ea43e3f",
        "filename": "src/heap/mark-compact.cc",
        "patchSetId": 5
      },
      "lineNbr": 4484,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2017-10-20T16:11:07Z",
      "side": 1,
      "message": "Why is this needed?",
      "range": {
        "startLine": 4484,
        "startChar": 6,
        "endLine": 4484,
        "endChar": 70
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "565b2a5e_bc3b0943",
        "filename": "src/heap/mark-compact.cc",
        "patchSetId": 5
      },
      "lineNbr": 4484,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2017-10-23T08:54:29Z",
      "side": 1,
      "message": "We re-add pages after scavenging them. Such pages have already gone through the prepare process which means their counters have been incorporated into their corresponding spaces. We have to omit them here to keep the counters in sync.\n\nAdded a comment.",
      "parentUuid": "37dc351b_8ea43e3f",
      "range": {
        "startLine": 4484,
        "startChar": 6,
        "endLine": 4484,
        "endChar": 70
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23be26e7_b21acefd",
        "filename": "src/heap/scavenger.cc",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2017-10-20T16:11:07Z",
      "side": 1,
      "message": "Why are we allowing NEW_SPACE pages?",
      "range": {
        "startLine": 91,
        "startChar": 26,
        "endLine": 91,
        "endChar": 47
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8fa7af0_4a4c2a80",
        "filename": "src/heap/scavenger.cc",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2017-10-23T08:54:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "23be26e7_b21acefd",
      "range": {
        "startLine": 91,
        "startChar": 26,
        "endLine": 91,
        "endChar": 47
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "197b9a45_f42a5cbc",
        "filename": "src/heap/scavenger.cc",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 1119605
      },
      "writtenOn": "2017-10-23T12:30:20Z",
      "side": 1,
      "message": "Given the introduced complexity of this function, I am not sure if it is worth it keeping it. WDYT? It helps only in the case where there is nothing else available for sweeping and kind of bypass the mechanism you are introducing here.\n\nAnd if you wanna keep it, please rename it :-)",
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f5b0c31_022e513a",
        "filename": "src/heap/scavenger.cc",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2017-10-23T12:55:23Z",
      "side": 1,
      "message": "Renamed to PreferredSweepingPage.",
      "parentUuid": "197b9a45_f42a5cbc",
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac4ef0e1_bfc97216",
        "filename": "src/heap/scavenger.cc",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 1119605
      },
      "writtenOn": "2017-10-23T12:30:20Z",
      "side": 1,
      "message": "This seems to be a hybrid between two solutions: Push back to the sweeper list and using the old_sweeping_list which will be copied back. Why don\u0027t we get rid of old_sweeping_list and push scavenged pages that need sweeping back to the sweeping list? That would be simpler.",
      "range": {
        "startLine": 113,
        "startChar": 2,
        "endLine": 113,
        "endChar": 29
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1d33e93_21265c5b",
        "filename": "src/heap/scavenger.cc",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2017-10-23T12:55:23Z",
      "side": 1,
      "message": "Nothing will be copied when merging back the saved list. I would like to merge back the saved list as this one is properly sorted. Concurrent or lazy sweeping actions will immediately bailing out on pages that are already swept.",
      "parentUuid": "ac4ef0e1_bfc97216",
      "range": {
        "startLine": 113,
        "startChar": 2,
        "endLine": 113,
        "endChar": 29
      },
      "revId": "2742487771bd0da36bcbfd040156e3a7fa5fd734",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}