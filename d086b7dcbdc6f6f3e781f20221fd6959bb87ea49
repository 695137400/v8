{
  "comments": [
    {
      "key": {
        "uuid": "79759a49_8c94314a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-07-23T06:35:37Z",
      "side": 1,
      "message": "Adding mlippautz since I\u0027m not a base owner.\n\nNico, ptal at the comment on your initial CL - I think we should change our approach and remove the DCHECK. It was initially introduced in https://chromium-review.googlesource.com/c/v8/v8/+/1701127 for the iPhone. I\u0027d suggest reverting your initial fix and replacing the section by something like:\n\n #if V8_TARGET_OS_IOS \u0026\u0026 V8_TARGET_ARCH_ARM64\n  raw_addr \u003d RoundDown(raw_addr, 1 \u003c\u003c 14);  // iOS uses 16 KiB memory pages.\n\nmlippautz wdyt? This will still apply the wrong raw_addr transformation in GetRandomMmapAddr during mksnapshot in cross-builds, but tbh I don\u0027t think we care much.",
      "revId": "d086b7dcbdc6f6f3e781f20221fd6959bb87ea49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87c53836_33873f99",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2020-07-23T10:06:02Z",
      "side": 1,
      "message": "I am currently wondering why we alway use V8_TARGET_ARCH_* for something that is only executed on the host :) \n\nIf we do host arch detection we can assume page sizes, fix GetRandomMmapAddr and even have DCHECKs asserting our assumptions.\n\n(All of this code is a mess and before we had OWNERS in place it was a dumping ground for quickfixes.)",
      "parentUuid": "79759a49_8c94314a",
      "revId": "d086b7dcbdc6f6f3e781f20221fd6959bb87ea49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e37442c_bea413c0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-09-18T19:30:31Z",
      "side": 1,
      "message": "Would be nice to get some traction here... I think the original patch that this is a follow-up to is what caused crbug.com/1128932; I\u0027m suggesting a fix below.",
      "revId": "d086b7dcbdc6f6f3e781f20221fd6959bb87ea49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a534db20_45d3c38c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2020-09-18T20:10:42Z",
      "side": 1,
      "message": "It sounds like y\u0027all know way better what to do here than me -- maybe you want to just send a CL?\n\n",
      "revId": "d086b7dcbdc6f6f3e781f20221fd6959bb87ea49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc9b940d_c710e41f",
        "filename": "src/base/platform/platform-posix.cc",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-09-18T19:30:31Z",
      "side": 1,
      "message": "I believe this (as well as the same conditions in line 236 and 265 below) should be V8_HOST_ARCH_ARM64.\n\nV8_HOST_ARCH_* is where the compiled binary will run.\nV8_TARGET_ARCH_* is what V8\u0027s JIT compilers will target.\n(The names may be misleading but at least they\u0027ve been consistently used that way for 10 years... arguably we should rename them.)\n\nSo in particular, when cross-compiling for arm64 on x64, then V8_HOST_ARCH_ARM64 will be set (see base/build_config.h). When compiling an arm64 simulator build on (and for) an x64 host, then V8_HOST_ARCH_X64 and V8_TARGET_ARCH_ARM64 will be set -- and then we\u0027ll get failing DCHECKs because V8 believes the OS uses 16KB pages but the OS actually does use 4KB pages: crbug.com/1128932.\nThe same V8_HOST_ARCH_X64 / V8_TARGET_ARCH_ARM64 combination will be set for the mksnapshot binary during a cross-compile. As jgruber@ explained elsewhere, the snapshot itself should not be page size specific, so it should be fine that this is not distinguishable from a simulator build meant for running tests.\n\nI\u0027ve verified locally that switching all these conditions from TARGET to HOST fixes the test failures reported in crbug.com/1128932 without re-introducing the cross-compiling mksnapshot failure addressed in crbug.com/1107945.\n\nSince V8_TARGET_ARCH_* describes the CPU architecture that V8\u0027s JIT compilers are targeting, not the hardware or OS it is running on, it generally doesn\u0027t make sense to let it be the decision-maker for platform things like page size.\n\n(Looks like the confusion was originally introduced in https://chromium-review.googlesource.com/c/v8/v8/+/1701127, which also should have used V8_HOST_ARCH_ARM64.)",
      "range": {
        "startLine": 114,
        "startChar": 36,
        "endLine": 114,
        "endChar": 56
      },
      "revId": "d086b7dcbdc6f6f3e781f20221fd6959bb87ea49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}