{
  "comments": [
    {
      "key": {
        "uuid": "c3c75084_408981c0",
        "filename": "src/builtins/proxy-constructor.tq",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-04-09T13:07:57Z",
      "side": 1,
      "message": "Bit confused here. This seems to define a normal argument called \u0027newTarget\u0027 while what we need later on is the actual new target (defined implicitly in builtins-descriptors.h for TFJ builtins).\n\nIf that\u0027s correct, it\u0027s a bit scary that no tests fail :) Could you verify \u0026 fix/add tests if necessary?\n\nOr am I missing something?",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe8ea4ce_6cf48a7b",
        "filename": "src/builtins/proxy-constructor.tq",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-04-09T20:08:06Z",
      "side": 1,
      "message": "I followed https://cs.chromium.org/chromium/src/v8/src/builtins/typed-array-createtypedarray.tq?rcl\u003db4c008bb49b5c37a8b0c446957695d6bbc75e394\u0026l\u003d280 where newTarget arguments is passed as normal argument as well and it works.\n\nI added a test for this (which is missing). Please let me know.",
      "parentUuid": "c3c75084_408981c0",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cb45031_5b3112af",
        "filename": "src/builtins/proxy-constructor.tq",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-04-10T08:46:30Z",
      "side": 1,
      "message": "The difference is that CreateTypedArray is an internal TFS builtin. There, newTarget is just a standard argument.\n\nProxyConstructor OTOH is a JS-linkage builtin (TFJ). And the new target is not a normal argument but passed according to JS calling conventions.\n\nThe easiest way to reference it right now will be to wrap CSA\u0027s `Parameter(Descriptor::kJSNewTarget)` in a function and call it from torque.\n\nI\u0027m still surprised that this CL doesn\u0027t fail any tests. We should understand why..",
      "parentUuid": "fe8ea4ce_6cf48a7b",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88dc7d59_b2a80461",
        "filename": "src/builtins/proxy-constructor.tq",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-04-10T23:00:35Z",
      "side": 1,
      "message": "You are right. I want to understand why it work as well, hmm ..",
      "parentUuid": "8cb45031_5b3112af",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1abbde57_11f51a17",
        "filename": "src/builtins/proxy-constructor.tq",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-04-11T00:37:46Z",
      "side": 1,
      "message": "I tried to wrap `Parameter(Descriptor::kJSNewTarget) but it need to be defined within TF_BUILTIN(). Is there a way to hack around it?\n\nI looked at https://cs.chromium.org/chromium/src/v8/src/builtins/builtins.cc?rcl\u003d790137c150aceab523179662ca3534b5050ef81b\u0026l\u003d154 and saw that it use JSTrampolineDescriptor for TFJ. Is this the reason for not failing before?",
      "parentUuid": "88dc7d59_b2a80461",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc5edf04_a4170c9b",
        "filename": "src/builtins/proxy-constructor.tq",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-04-11T07:37:05Z",
      "side": 1,
      "message": "The ProxyConstructor was TFJ before and after your CL, this did not change. A Torque \u0027javascript builtin\u0027 means \u0027TFJ\u0027 in CSA-land.\n\nThis is getting a bit ugly, but you could use Builtin_ProxyConstructor_InterfaceDescriptor::kJSNewTarget explicitly. I\u0027d also open a bug at crbug.com/v8 for torque to add support for new target accesses from JS builtins.",
      "parentUuid": "1abbde57_11f51a17",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a1d0c43_ecddc106",
        "filename": "src/builtins/proxy-constructor.tq",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-04-11T08:23:37Z",
      "side": 1,
      "message": "JSTrampolineDescriptor does define kNewTarget https://cs.chromium.org/chromium/src/v8/src/interface-descriptors.h?rcl\u003d3304bd02ab699042e4cf0492489814b6cb4ea5cb\u0026l\u003d457 \n\nAnyway, might be not the reason. Hmm ..",
      "parentUuid": "cc5edf04_a4170c9b",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e82d1cee_91b53218",
        "filename": "src/builtins/proxy-constructor.tq",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-04-11T09:02:32Z",
      "side": 1,
      "message": "Use JSNewTarget per your suggestions :)",
      "parentUuid": "4a1d0c43_ecddc106",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1eae984_8f74858e",
        "filename": "src/builtins/proxy-constructor.tq",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-04-09T13:07:57Z",
      "side": 1,
      "message": "nit: I\u0027d inline single-use throw blocks.",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2de345c_39f0e825",
        "filename": "src/builtins/proxy-constructor.tq",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-04-09T20:08:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1eae984_8f74858e",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fe59fd6_15be9d35",
        "filename": "src/builtins/proxy-constructor.tq",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-04-09T13:07:57Z",
      "side": 1,
      "message": "This doesn\u0027t take a string arg, does it? Same below.",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d1b47bf_1b69e64e",
        "filename": "src/builtins/proxy-constructor.tq",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-04-09T20:08:06Z",
      "side": 1,
      "message": "It can take a string arg but I will remove it.",
      "parentUuid": "1fe59fd6_15be9d35",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a9b03ce_81be2a27",
        "filename": "src/builtins/proxy-constructor.tq",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-04-10T08:46:30Z",
      "side": 1,
      "message": "I meant, the kProxyNonObject message template does not take a string argument so it does not make sense to pass one. That is why the different overrides of ThrowTypeError (with different arg counts) exist.\n\nSee https://cs.chromium.org/chromium/src/v8/src/message-template.h?l\u003d224\u0026rcl\u003db68b2c11c89f00af36793f365e03427f5cc13621",
      "parentUuid": "5d1b47bf_1b69e64e",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44327bcb_93031864",
        "filename": "src/builtins/proxy-constructor.tq",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-04-10T23:00:35Z",
      "side": 1,
      "message": "Got you. Thanks for clarification :)",
      "parentUuid": "8a9b03ce_81be2a27",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "717e1961_adfa27e4",
        "filename": "src/builtins/proxy.tq",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-04-09T13:07:57Z",
      "side": 1,
      "message": "I got hung up on this for a bit due to the behavior change if o is a JSProxy. The old code in proxy-revocable then returned the exact opposite of what happens here, right? Was that a bug?\n\nI\u0027d suggest a slight simplification:\n\n const proxy: JSProxy \u003d Cast\u003cJSProxy\u003e(o) otherwise return false;\n return !IsJSReceiver(proxy.handler);",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2256ff9_b89cd3d0",
        "filename": "src/builtins/proxy.tq",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-04-09T20:08:06Z",
      "side": 1,
      "message": "What we do here is mimic GotoIfRevokedProxy in builtins-proxy-gen.h. The code in proxy-revocable also returned the same thing. \n\nI added a test (which was missing IMO) for proxy-revocable to cover this macro. IsJSReceiver only accepts HeapObject argument while proxy.handler is Object so I still keep the Cast\u003cJSReceiver\u003e",
      "parentUuid": "717e1961_adfa27e4",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4efcdf4f_2db4dea1",
        "filename": "src/builtins/proxy.tq",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-04-10T08:46:30Z",
      "side": 1,
      "message": "About behavioral change:\n\nThe old version of IsRevokedProxy in proxy-revocable.tq that you removed in this CL (https://crrev.com/c/1553007/2/src/builtins/proxy-revocable.tq#b26) did the reverse of the current behavior, right?\n\nOld version:\n      const handler: JSReceiver \u003d\n          Cast\u003cJSReceiver\u003e(proxy.handler) otherwise ReturnFalse;\n\nNew version:\n      const handler: JSReceiver \u003d\n          Cast\u003cJSReceiver\u003e(proxy.handler) otherwise ReturnTrue;\n\nSo a test that covers this path should fail before this CL and pass now.",
      "parentUuid": "e2256ff9_b89cd3d0",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f814382_71a10f06",
        "filename": "src/builtins/proxy.tq",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2019-04-10T13:44:05Z",
      "side": 1,
      "message": "AFAIK the \"revoked proxy\" means one for which the handler is not a JSReceriver, so we should  stick to the new version, which corresponds to the name - it says \"true\" (proxy is revoked) if the cast was unsuccessful. But indeed we need a test that fails with the old version.",
      "parentUuid": "4efcdf4f_2db4dea1",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33228853_f160dd78",
        "filename": "src/builtins/proxy.tq",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-04-10T23:00:35Z",
      "side": 1,
      "message": "@Jakob: Sorry, I forgot to mention that the old version is wrong and we were missing a test to fail it but I did add it in the CL :)",
      "parentUuid": "7f814382_71a10f06",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6f37dd0_d8241203",
        "filename": "src/builtins/proxy.tq",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-04-09T13:07:57Z",
      "side": 1,
      "message": "Suggestion: otherwise ThrowTypeError(...)",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffde017e_f961e77a",
        "filename": "src/builtins/proxy.tq",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-04-09T20:08:06Z",
      "side": 1,
      "message": "The marco is not used yet so removed for now.",
      "parentUuid": "b6f37dd0_d8241203",
      "revId": "e33958e46843334bf0793507407f4da16abff398",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}