{
  "comments": [
    {
      "key": {
        "uuid": "f44cc5f1_22559380",
        "filename": "src/objects.cc",
        "patchSetId": 5
      },
      "lineNbr": 18865,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-11T08:30:57Z",
      "side": 1,
      "message": "Out of curiosity, why is this disallowed? And what does it mean if AsArrayIndex returns false? Maybe you could add a short comment :)",
      "revId": "0aff53831ddfd42ac60d7c01397786b437d597c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ec2b082_176748ba",
        "filename": "src/objects.cc",
        "patchSetId": 5
      },
      "lineNbr": 18865,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2018-06-11T17:20:45Z",
      "side": 1,
      "message": "The spec only does GetOption on names, not on indices but it doesn\u0027t explicitly disallow it. Using GetPropertyOrElement seemed excessive here but I guess it\u0027s fine to pay for an extra If check here, especially if this check is confusing.. Don\u0027t feel too strongly -- changed to GetPropertyOrElement.",
      "parentUuid": "f44cc5f1_22559380",
      "revId": "0aff53831ddfd42ac60d7c01397786b437d597c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67b78c99_0efd5d8d",
        "filename": "src/objects.cc",
        "patchSetId": 5
      },
      "lineNbr": 18865,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-12T06:52:54Z",
      "side": 1,
      "message": "I see, thanks. I would\u0027ve been totally fine with disallowing indices with a brief explanation as well.",
      "parentUuid": "9ec2b082_176748ba",
      "revId": "0aff53831ddfd42ac60d7c01397786b437d597c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "704a67a1_c7e39534",
        "filename": "src/objects.cc",
        "patchSetId": 5
      },
      "lineNbr": 18883,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-11T08:30:57Z",
      "side": 1,
      "message": "Nit: if/else or switch? That\u0027d clarify that type is always either boolean or string.",
      "revId": "0aff53831ddfd42ac60d7c01397786b437d597c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97a3d82a_db4b5ee0",
        "filename": "src/objects.cc",
        "patchSetId": 5
      },
      "lineNbr": 18883,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2018-06-11T17:20:45Z",
      "side": 1,
      "message": "I\u0027m just following the spec text. Leaving as such. The enum can only be boolean or string so not sure it gives us much",
      "parentUuid": "704a67a1_c7e39534",
      "revId": "0aff53831ddfd42ac60d7c01397786b437d597c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8800565c_17b7157c",
        "filename": "src/objects.cc",
        "patchSetId": 5
      },
      "lineNbr": 18890,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-11T08:30:57Z",
      "side": 1,
      "message": "Nit: I\u0027d just skip this, it\u0027s implicit in the for loop below anyways.\n\nOh I see, does an empty fixed array imply \u0027values \u003d\u003d undefined\u0027? If so, please add a comment. See also below. Is the distinction between an empty `values` and `values \u003d\u003d undefined` ever important?",
      "revId": "0aff53831ddfd42ac60d7c01397786b437d597c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f80bcb86_90fbae27",
        "filename": "src/objects.cc",
        "patchSetId": 5
      },
      "lineNbr": 18890,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2018-06-11T17:20:45Z",
      "side": 1,
      "message": "Added comment. I think it\u0027s better to pass in an empty fixed array as it\u0027s easy to type check.",
      "parentUuid": "8800565c_17b7157c",
      "revId": "0aff53831ddfd42ac60d7c01397786b437d597c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04fe6a35_3185d588",
        "filename": "src/objects.cc",
        "patchSetId": 5
      },
      "lineNbr": 18890,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-12T06:52:54Z",
      "side": 1,
      "message": "Just double-checking again: \u0027Is the distinction between an empty `values` and `values \u003d\u003d undefined` ever important?\u0027 \n\nFor an empty values, according to the spec we\u0027d always throw. For `values \u003d\u003d undefined`, we\u0027d always return `value`. I don\u0027t know whether this is relevant in practice.",
      "parentUuid": "f80bcb86_90fbae27",
      "revId": "0aff53831ddfd42ac60d7c01397786b437d597c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "848cae9c_bb5a4e5b",
        "filename": "src/objects.cc",
        "patchSetId": 5
      },
      "lineNbr": 18907,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-11T08:30:57Z",
      "side": 1,
      "message": "Isn\u0027t this the \u0027If values does not contain an element equal to value\u0027 case and should also throw a RangeError?",
      "revId": "0aff53831ddfd42ac60d7c01397786b437d597c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6ec3930_ab9bf42d",
        "filename": "src/objects.cc",
        "patchSetId": 5
      },
      "lineNbr": 18907,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2018-06-11T17:20:45Z",
      "side": 1,
      "message": "No. I re-ordered the code to make this clearer.",
      "parentUuid": "848cae9c_bb5a4e5b",
      "revId": "0aff53831ddfd42ac60d7c01397786b437d597c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27a8d3df_b0273bcd",
        "filename": "src/objects.h",
        "patchSetId": 5
      },
      "lineNbr": 1545,
      "author": {
        "id": 1115880
      },
      "writtenOn": "2018-06-11T16:11:42Z",
      "side": 1,
      "message": "This is Intl related - do you want to make it #ifdef INTL_V8 conditionally compiled?",
      "range": {
        "startLine": 1545,
        "startChar": 5,
        "endLine": 1545,
        "endChar": 19
      },
      "revId": "0aff53831ddfd42ac60d7c01397786b437d597c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c04ce2a0_71f135c5",
        "filename": "src/objects.h",
        "patchSetId": 5
      },
      "lineNbr": 1545,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2018-06-11T17:20:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "27a8d3df_b0273bcd",
      "range": {
        "startLine": 1545,
        "startChar": 5,
        "endLine": 1545,
        "endChar": 19
      },
      "revId": "0aff53831ddfd42ac60d7c01397786b437d597c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee2d1abe_0fd6eae6",
        "filename": "src/objects/js-locale.cc",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-11T08:30:57Z",
      "side": 1,
      "message": "Would it make sense to replace this string conversion sequence with String::ToCString instead? AFAICT we neither need a UnicodeString nor a std::string.",
      "revId": "0aff53831ddfd42ac60d7c01397786b437d597c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d3d9f37_dc1633c9",
        "filename": "src/objects/js-locale.cc",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2018-06-11T17:20:45Z",
      "side": 1,
      "message": "not sure; this is a question for cira. I don\u0027t know enough about the different strings to be able to tell if this also does sort of normalization/formatting that would get skipped",
      "parentUuid": "ee2d1abe_0fd6eae6",
      "revId": "0aff53831ddfd42ac60d7c01397786b437d597c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "323ca1fe_0853e9f5",
        "filename": "src/objects/js-locale.cc",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1115880
      },
      "writtenOn": "2018-06-11T21:25:42Z",
      "side": 1,
      "message": "At this point plain c_str would work, we don\u0027t have utf-8 expectation here. I just think we didn\u0027t know about ToCString method and did this expensive conversion dance.",
      "parentUuid": "9d3d9f37_dc1633c9",
      "revId": "0aff53831ddfd42ac60d7c01397786b437d597c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c35c23c_404c1a4e",
        "filename": "src/objects/js-locale.cc",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2018-06-11T21:35:08Z",
      "side": 1,
      "message": "Thanks! Updated.",
      "parentUuid": "323ca1fe_0853e9f5",
      "revId": "0aff53831ddfd42ac60d7c01397786b437d597c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbacb237_0e9e0b39",
        "filename": "test/cctest/test-intl.cc",
        "patchSetId": 5
      },
      "lineNbr": 165,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-06-11T08:30:57Z",
      "side": 1,
      "message": "We should clear_pending_exception() after this.",
      "revId": "0aff53831ddfd42ac60d7c01397786b437d597c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42aa61d6_76f59fe5",
        "filename": "test/cctest/test-intl.cc",
        "patchSetId": 5
      },
      "lineNbr": 165,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2018-06-11T17:20:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dbacb237_0e9e0b39",
      "revId": "0aff53831ddfd42ac60d7c01397786b437d597c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}