{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5e80661d_8d067662",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2023-03-22T14:54:08Z",
      "side": 1,
      "message": "nit: `an`",
      "range": {
        "startLine": 13,
        "startChar": 46,
        "endLine": 13,
        "endChar": 49
      },
      "revId": "a9993c857205b6d2bd8adecb8cc734bac079edf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff0f2c5e_740c1e78",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2023-03-23T09:55:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e80661d_8d067662",
      "range": {
        "startLine": 13,
        "startChar": 46,
        "endLine": 13,
        "endChar": 49
      },
      "revId": "a9993c857205b6d2bd8adecb8cc734bac079edf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7023120e_6b47fcc1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2023-03-22T13:12:50Z",
      "side": 1,
      "message": "Jakob K.: PTAL overall.\nJakob L.: Please approve src/debug.\nThibaud: PTAL at src/builtins and src/execution.",
      "revId": "a9993c857205b6d2bd8adecb8cc734bac079edf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90c86661_eb694852",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2023-03-22T13:20:40Z",
      "side": 1,
      "message": "debug/ lg",
      "revId": "a9993c857205b6d2bd8adecb8cc734bac079edf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42887ddd_1725b8c9",
        "filename": "src/execution/frame-constants.h",
        "patchSetId": 9
      },
      "lineNbr": 221,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2023-03-22T14:54:08Z",
      "side": 1,
      "message": "Those should probably all be defined here... that\u0027s a separate cleanup though.",
      "range": {
        "startLine": 221,
        "startChar": 5,
        "endLine": 221,
        "endChar": 72
      },
      "revId": "a9993c857205b6d2bd8adecb8cc734bac079edf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d68c16e_bf346dcf",
        "filename": "src/execution/frame-constants.h",
        "patchSetId": 9
      },
      "lineNbr": 221,
      "author": {
        "id": 1345975
      },
      "writtenOn": "2023-03-22T16:08:53Z",
      "side": 1,
      "message": "For context, the constants defined here are the one that are referenced from different builtins (generic js-to-wasm wrapper and wasm resume). The other ones are only used inside the js-to-wasm wrapper, so it\u0027s less important for them to be defined globally.",
      "parentUuid": "42887ddd_1725b8c9",
      "range": {
        "startLine": 221,
        "startChar": 5,
        "endLine": 221,
        "endChar": 72
      },
      "revId": "a9993c857205b6d2bd8adecb8cc734bac079edf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28d5dc2f_ed631d6d",
        "filename": "src/execution/frame-constants.h",
        "patchSetId": 9
      },
      "lineNbr": 221,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2023-03-22T16:21:24Z",
      "side": 1,
      "message": "I understand, but when each platform\u0027s wrapper needs to define them, that is IMHO enough of a reason to just define them here instead -- in particular in the patch set that mentioned them here anyway; I feel slightly less opinionated about it now that they\u0027re only appended to the offsets defined here.",
      "parentUuid": "5d68c16e_bf346dcf",
      "range": {
        "startLine": 221,
        "startChar": 5,
        "endLine": 221,
        "endChar": 72
      },
      "revId": "a9993c857205b6d2bd8adecb8cc734bac079edf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7611a13_eceb990d",
        "filename": "src/runtime/runtime-wasm.cc",
        "patchSetId": 9
      },
      "lineNbr": 312,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2023-03-22T14:54:08Z",
      "side": 1,
      "message": "nit: I think you could relax this type to `JSFunction` and drop the cast in the next line.\n\nAlternative: change the return type of `GetOrCreateExternal` to return a `Handle\u003cWasmExternalFunction\u003e` (which shouldn\u0027t break any existing code because that\u0027s a subclass of JSFunction).",
      "range": {
        "startLine": 312,
        "startChar": 9,
        "endLine": 312,
        "endChar": 29
      },
      "revId": "a9993c857205b6d2bd8adecb8cc734bac079edf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f15dc72e_f7d8ccc5",
        "filename": "src/runtime/runtime-wasm.cc",
        "patchSetId": 9
      },
      "lineNbr": 312,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2023-03-23T09:55:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7611a13_eceb990d",
      "range": {
        "startLine": 312,
        "startChar": 9,
        "endLine": 312,
        "endChar": 29
      },
      "revId": "a9993c857205b6d2bd8adecb8cc734bac079edf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdc18c15_17feaeaa",
        "filename": "src/wasm/module-compiler.cc",
        "patchSetId": 9
      },
      "lineNbr": 1279,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2023-03-22T14:54:08Z",
      "side": 1,
      "message": "This is subsumed by the `!\u003d instance_` check below, right?",
      "range": {
        "startLine": 1276,
        "startChar": 4,
        "endLine": 1279,
        "endChar": 5
      },
      "revId": "a9993c857205b6d2bd8adecb8cc734bac079edf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "913c33d1_70852763",
        "filename": "src/wasm/module-compiler.cc",
        "patchSetId": 9
      },
      "lineNbr": 1279,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2023-03-23T09:55:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fdc18c15_17feaeaa",
      "range": {
        "startLine": 1276,
        "startChar": 4,
        "endLine": 1279,
        "endChar": 5
      },
      "revId": "a9993c857205b6d2bd8adecb8cc734bac079edf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5003628a_1b155b7a",
        "filename": "src/wasm/module-instantiate.cc",
        "patchSetId": 9
      },
      "lineNbr": 2153,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2023-03-22T14:54:08Z",
      "side": 1,
      "message": "I think you can simplify this to:\n```\n  Handle\u003cJSFunction\u003e external_function \u003d internal-\u003eGetOrCreateExternal();\n```",
      "range": {
        "startLine": 2152,
        "startChar": 8,
        "endLine": 2153,
        "endChar": 80
      },
      "revId": "a9993c857205b6d2bd8adecb8cc734bac079edf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63355746_5d3a5da9",
        "filename": "src/wasm/module-instantiate.cc",
        "patchSetId": 9
      },
      "lineNbr": 2153,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2023-03-23T09:55:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5003628a_1b155b7a",
      "range": {
        "startLine": 2152,
        "startChar": 8,
        "endLine": 2153,
        "endChar": 80
      },
      "revId": "a9993c857205b6d2bd8adecb8cc734bac079edf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f44ddfd_3e844c61",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 9
      },
      "lineNbr": 2107,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2023-03-22T14:54:08Z",
      "side": 1,
      "message": "Can\u0027t/shouldn\u0027t this use `WasmInstanceObject::GetOrCreateInternalFunction`? That function also caches the created WasmInternalFunction on the instance, but I think that\u0027d be good to do here anyway? Or is there a reason why we can\u0027t?",
      "range": {
        "startLine": 2107,
        "startChar": 4,
        "endLine": 2107,
        "endChar": 5
      },
      "revId": "a9993c857205b6d2bd8adecb8cc734bac079edf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abbb8acc_be56163e",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 9
      },
      "lineNbr": 2107,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2023-03-23T09:55:41Z",
      "side": 1,
      "message": "This is not the same internal/external pair that is stored in the instance. The external function has the special `WasmReturnPromiseOnSuspend` wrapper. We cannot reuse the same internal function either as it would break the internal/external function bijection.",
      "parentUuid": "1f44ddfd_3e844c61",
      "range": {
        "startLine": 2107,
        "startChar": 4,
        "endLine": 2107,
        "endChar": 5
      },
      "revId": "a9993c857205b6d2bd8adecb8cc734bac079edf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46cd2899_3cf32c31",
        "filename": "src/wasm/wasm-objects.cc",
        "patchSetId": 9
      },
      "lineNbr": 1447,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2023-03-22T14:54:08Z",
      "side": 1,
      "message": "`this-\u003eptr_` is an invalid/stale pointer here if the previous allocation caused a GC. (The fact that GCMole isn\u0027t complaining is a known limitation: crbug.com/v8/11202.)\nThe proper fix is to make this entire function static, and pass a `Handle\u003cWasmInternalFunction\u003e` as a parameter to it, replacing `this`. (If you look around, you\u0027ll see a _lot_ of existing functions in `src/objects/*` following that pattern. `WasmInstanceObject::GetOrCreateWasmInternalFunction` right above is another example.)",
      "range": {
        "startLine": 1447,
        "startChar": 2,
        "endLine": 1447,
        "endChar": 6
      },
      "revId": "a9993c857205b6d2bd8adecb8cc734bac079edf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da00d70b_fc6ff201",
        "filename": "src/wasm/wasm-objects.cc",
        "patchSetId": 9
      },
      "lineNbr": 1447,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2023-03-23T09:55:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46cd2899_3cf32c31",
      "range": {
        "startLine": 1447,
        "startChar": 2,
        "endLine": 1447,
        "endChar": 6
      },
      "revId": "a9993c857205b6d2bd8adecb8cc734bac079edf5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}