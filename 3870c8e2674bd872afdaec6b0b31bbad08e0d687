{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a25be7b1_a5ec219e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2020-11-30T08:43:09Z",
      "side": 1,
      "message": "The CL looks good from my side, but please run the trybots and add at least one of the original reviewers (jkummerow@ or clemensb@ from https://chromium-review.googlesource.com/c/v8/v8/+/663898/), who have more context on why this was implemented in the way it was originally.",
      "revId": "3870c8e2674bd872afdaec6b0b31bbad08e0d687",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "080218ae_f99ed663",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2020-11-30T08:52:47Z",
      "side": 1,
      "message": "Just saw CQ\u0027s sad status, triggering trybots for you.",
      "revId": "3870c8e2674bd872afdaec6b0b31bbad08e0d687",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2cc287e6_05c85b01",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1254946
      },
      "writtenOn": "2020-11-30T09:04:40Z",
      "side": 1,
      "message": "Thanks!",
      "parentUuid": "080218ae_f99ed663",
      "revId": "3870c8e2674bd872afdaec6b0b31bbad08e0d687",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5bf8b0e_7e928e41",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2020-11-30T13:40:06Z",
      "side": 1,
      "message": "LGTM, thanks. Let\u0027s see if the other reviewers have any further comments.",
      "revId": "3870c8e2674bd872afdaec6b0b31bbad08e0d687",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71f04ade_e2d8fbbc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2020-11-30T14:00:53Z",
      "side": 1,
      "message": "It says in the bug it fails if you compile Chromium for ARM, but obviously we do compile chromium for ARM, so is there a more specific repro?",
      "revId": "3870c8e2674bd872afdaec6b0b31bbad08e0d687",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "409b5c35_1ee7f00a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2020-11-30T14:14:26Z",
      "side": 1,
      "message": "Good point, didn\u0027t check the related bug. Just triggered a tryjob that compiles V8 on arm64. That should point if there\u0027s a problem with this CL.",
      "parentUuid": "71f04ade_e2d8fbbc",
      "revId": "3870c8e2674bd872afdaec6b0b31bbad08e0d687",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e959747c_9d1ba64c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1254946
      },
      "writtenOn": "2020-11-30T14:18:08Z",
      "side": 1,
      "message": "Sorry, I should have been more specific. Not sure if the problem can be reproduced in Chromium, I\u0027m having issue with jumbo build (and the original patch was also jumbo-only).",
      "parentUuid": "409b5c35_1ee7f00a",
      "revId": "3870c8e2674bd872afdaec6b0b31bbad08e0d687",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "778b789c_fd5e2451",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2020-11-30T14:29:49Z",
      "side": 1,
      "message": "Can anyone provide more info on the following:\n1) Do we have a bot that tests (compilation of) the jumbo configuration of V8? If so, let\u0027s trigger it here.\n2) What happened to the \"use_jumbo_build\" GN arg? I can\u0027t find it in any of our BUILD.gn files anymore.",
      "parentUuid": "e959747c_9d1ba64c",
      "revId": "3870c8e2674bd872afdaec6b0b31bbad08e0d687",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81c711aa_999acd1e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2020-11-30T14:46:29Z",
      "side": 1,
      "message": "Jumbo builds were removed. See https://groups.google.com/a/chromium.org/g/chromium-dev/c/DP9TQszzQLI\n\nWhy does the original fail to compile with jumbo builds?",
      "parentUuid": "778b789c_fd5e2451",
      "revId": "3870c8e2674bd872afdaec6b0b31bbad08e0d687",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bf1d3ae_b42d0b72",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1254946
      },
      "writtenOn": "2020-11-30T14:54:43Z",
      "side": 1,
      "message": "There is some linker magic going on (see the bug: \"instructions-arm64-constants.cc defines integer constants. instructions-arm64.h declares them as float.\"), I think the real question is rather: why does compile at all?\nI *think* that the cause might be: if the declaration and definition both land in the same translation unit, the compilation fails.\n\nNote: the file instructions-arm64-constants.cc does not include instructions-arm64.h where the constants are declared.",
      "parentUuid": "81c711aa_999acd1e",
      "revId": "3870c8e2674bd872afdaec6b0b31bbad08e0d687",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a7e7dee_e066c421",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2020-11-30T15:15:30Z",
      "side": 1,
      "message": "Right. Jumbo aside, the original looks horrible and I think your solution is much nicer.",
      "parentUuid": "7bf1d3ae_b42d0b72",
      "revId": "3870c8e2674bd872afdaec6b0b31bbad08e0d687",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2f6a936_29fca7e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2020-11-30T15:18:17Z",
      "side": 1,
      "message": "So the reason the original compiles, is the object files generated by compiling these files don\u0027t specify the type. So you effectively get the value reinterpret_casted to the right type, but then you get a type mismatch when compiled in the same compilation unit (as you stated) since then the compiler actually sees both definitions simultaneously.",
      "parentUuid": "2a7e7dee_e066c421",
      "revId": "3870c8e2674bd872afdaec6b0b31bbad08e0d687",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}