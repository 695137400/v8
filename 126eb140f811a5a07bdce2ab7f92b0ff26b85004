{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "11eea34d_6ce37fdc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-07-20T09:30:15Z",
      "side": 1,
      "message": "first round of comments",
      "revId": "126eb140f811a5a07bdce2ab7f92b0ff26b85004",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5890dc1_7ad98d1b",
        "filename": "src/web-snapshot/web-snapshot.cc",
        "patchSetId": 16
      },
      "lineNbr": 64,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-07-20T09:30:15Z",
      "side": 1,
      "message": "nit: actually this should probably be | instead of +",
      "range": {
        "startLine": 64,
        "startChar": 68,
        "endLine": 64,
        "endChar": 69
      },
      "revId": "126eb140f811a5a07bdce2ab7f92b0ff26b85004",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c3b015a_5da0e7fc",
        "filename": "src/web-snapshot/web-snapshot.cc",
        "patchSetId": 16
      },
      "lineNbr": 66,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-07-20T09:30:15Z",
      "side": 1,
      "message": "Let\u0027s use slightly more descriptive names here (so you\u0027ll get some code-search hits if you look for the prefix)\n\nConstructorBitField \u003d\u003e ClassConstructorBitField",
      "range": {
        "startLine": 66,
        "startChar": 15,
        "endLine": 66,
        "endChar": 34
      },
      "revId": "126eb140f811a5a07bdce2ab7f92b0ff26b85004",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dad56ff_82b6eff5",
        "filename": "src/web-snapshot/web-snapshot.cc",
        "patchSetId": 16
      },
      "lineNbr": 67,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-07-20T09:30:15Z",
      "side": 1,
      "message": "DefaultBitField \u003d\u003e DefaultConstructorBitField",
      "range": {
        "startLine": 67,
        "startChar": 15,
        "endLine": 67,
        "endChar": 30
      },
      "revId": "126eb140f811a5a07bdce2ab7f92b0ff26b85004",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "469e45dc_6d6c8c8c",
        "filename": "src/web-snapshot/web-snapshot.cc",
        "patchSetId": 16
      },
      "lineNbr": 68,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-07-20T09:30:15Z",
      "side": 1,
      "message": "DerivedBitField \u003d\u003e DerivedConstructorBitField",
      "range": {
        "startLine": 68,
        "startChar": 15,
        "endLine": 68,
        "endChar": 30
      },
      "revId": "126eb140f811a5a07bdce2ab7f92b0ff26b85004",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6f347f3_1d1fbd2d",
        "filename": "src/web-snapshot/web-snapshot.cc",
        "patchSetId": 16
      },
      "lineNbr": 145,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-07-20T09:30:15Z",
      "side": 1,
      "message": "this should be enough on its own (and maybe you can drop the helper)",
      "range": {
        "startLine": 145,
        "startChar": 8,
        "endLine": 145,
        "endChar": 42
      },
      "revId": "126eb140f811a5a07bdce2ab7f92b0ff26b85004",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44dd32a7_2a018e68",
        "filename": "src/web-snapshot/web-snapshot.cc",
        "patchSetId": 16
      },
      "lineNbr": 150,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-07-20T09:30:15Z",
      "side": 1,
      "message": "nit: | just to make it a bit more obvious we\u0027re doing bit manipulations",
      "range": {
        "startLine": 150,
        "startChar": 62,
        "endLine": 150,
        "endChar": 63
      },
      "revId": "126eb140f811a5a07bdce2ab7f92b0ff26b85004",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "293d05c2_8829db69",
        "filename": "src/web-snapshot/web-snapshot.cc",
        "patchSetId": 16
      },
      "lineNbr": 357,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-07-20T09:30:15Z",
      "side": 1,
      "message": "You can break the loop directly when setting `has_attributes \u003d true;`",
      "range": {
        "startLine": 355,
        "startChar": 0,
        "endLine": 357,
        "endChar": 5
      },
      "revId": "126eb140f811a5a07bdce2ab7f92b0ff26b85004",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55e8e7a7_aa946d4a",
        "filename": "src/web-snapshot/web-snapshot.cc",
        "patchSetId": 16
      },
      "lineNbr": 387,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-07-20T09:30:15Z",
      "side": 1,
      "message": "you could also just use attributes.size() to check whether there are custom property details (and avoid the pre-check loop above)",
      "range": {
        "startLine": 385,
        "startChar": 2,
        "endLine": 387,
        "endChar": 5
      },
      "revId": "126eb140f811a5a07bdce2ab7f92b0ff26b85004",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c162210_81067c4f",
        "filename": "test/mjsunit/web-snapshot/web-snapshot.js",
        "patchSetId": 16
      },
      "lineNbr": 7,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-07-20T09:30:15Z",
      "side": 1,
      "message": "see comment below: I think we can drop this and just get by with async-await",
      "range": {
        "startLine": 7,
        "startChar": 9,
        "endLine": 7,
        "endChar": 26
      },
      "revId": "126eb140f811a5a07bdce2ab7f92b0ff26b85004",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2232de97_b1f85a74",
        "filename": "test/mjsunit/web-snapshot/web-snapshot.js",
        "patchSetId": 16
      },
      "lineNbr": 327,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-07-20T09:30:15Z",
      "side": 1,
      "message": "nit: single-assignment variables can be marked const (here and below)",
      "range": {
        "startLine": 327,
        "startChar": 2,
        "endLine": 327,
        "endChar": 5
      },
      "revId": "126eb140f811a5a07bdce2ab7f92b0ff26b85004",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fcd5e59_4214097b",
        "filename": "test/mjsunit/web-snapshot/web-snapshot.js",
        "patchSetId": 16
      },
      "lineNbr": 347,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-07-20T09:30:15Z",
      "side": 1,
      "message": "Could you maybe add a separate test for serialising an async function on its own?",
      "range": {
        "startLine": 347,
        "startChar": 0,
        "endLine": 347,
        "endChar": 30
      },
      "revId": "126eb140f811a5a07bdce2ab7f92b0ff26b85004",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}