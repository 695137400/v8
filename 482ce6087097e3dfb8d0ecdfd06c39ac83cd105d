{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c0da7860_f79760f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 33
      },
      "lineNbr": 0,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2023-08-01T12:53:26Z",
      "side": 1,
      "message": "ptal.\nThis CL is currently performance neutral on JetStream2 (Linux).\nOther benchmarks are still running, but I don\u0027t expect results to differ.",
      "revId": "482ce6087097e3dfb8d0ecdfd06c39ac83cd105d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee3d0b5a_16f3976d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 33
      },
      "lineNbr": 0,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2023-08-01T15:17:21Z",
      "side": 1,
      "message": "The other benchmarks are done.\nJetstream and speedometer on both Linux and M1 are on par ðŸ˜Š",
      "parentUuid": "c0da7860_f79760f3",
      "revId": "482ce6087097e3dfb8d0ecdfd06c39ac83cd105d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5e877c3_4c2d5a70",
        "filename": "src/heap/concurrent-marking.cc",
        "patchSetId": 33
      },
      "lineNbr": 405,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2023-08-02T11:59:58Z",
      "side": 1,
      "message": "`InstructionStream` objects cannot exist in the young generation.",
      "range": {
        "startLine": 405,
        "startChar": 19,
        "endLine": 405,
        "endChar": 36
      },
      "revId": "482ce6087097e3dfb8d0ecdfd06c39ac83cd105d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d134b637_45421d4d",
        "filename": "src/heap/concurrent-marking.cc",
        "patchSetId": 33
      },
      "lineNbr": 405,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2023-08-03T09:29:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e5e877c3_4c2d5a70",
      "range": {
        "startLine": 405,
        "startChar": 19,
        "endLine": 405,
        "endChar": 36
      },
      "revId": "482ce6087097e3dfb8d0ecdfd06c39ac83cd105d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4785bbc3_e05c061b",
        "filename": "src/heap/concurrent-marking.cc",
        "patchSetId": 33
      },
      "lineNbr": 410,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2023-08-02T11:59:58Z",
      "side": 1,
      "message": "Are all of the `kConcurrent` branches actually necessary? Once this is used, it will be hard to see why we need it if no benchmarks regresses. That should also guide us here.",
      "range": {
        "startLine": 410,
        "startChar": 62,
        "endLine": 410,
        "endChar": 73
      },
      "revId": "482ce6087097e3dfb8d0ecdfd06c39ac83cd105d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9de6c35_ef8fb266",
        "filename": "src/heap/concurrent-marking.cc",
        "patchSetId": 33
      },
      "lineNbr": 410,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2023-08-03T09:29:18Z",
      "side": 1,
      "message": "I need to evaluate dropping each of them individually.\nThis will take some time.\nI will update once I have the results.",
      "parentUuid": "4785bbc3_e05c061b",
      "range": {
        "startLine": 410,
        "startChar": 62,
        "endLine": 410,
        "endChar": 73
      },
      "revId": "482ce6087097e3dfb8d0ecdfd06c39ac83cd105d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3933557a_f6ae512f",
        "filename": "src/heap/concurrent-marking.cc",
        "patchSetId": 33
      },
      "lineNbr": 410,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2023-08-03T12:45:23Z",
      "side": 1,
      "message": "According to the latest pinpoint runs, the lab checks (line 411) and `ShouldYield` checks (line 425) are both ~0.3% on Jetstream2 (Linux), so I think we need to keep those disabled for parallel marking.\nThe atomic map load (line 379) is only 0.1%, so practically noise. We could drop that one, but on the other hand keeping it is aligned with what the visitor also does so I\u0027m in favor of keeping it.\nThe DCHECK in line 402 and the check in line 405 we could drop since they should not affect parallel marking at all. wdyt?",
      "parentUuid": "a9de6c35_ef8fb266",
      "range": {
        "startLine": 410,
        "startChar": 62,
        "endLine": 410,
        "endChar": 73
      },
      "revId": "482ce6087097e3dfb8d0ecdfd06c39ac83cd105d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23a333c2_384805c0",
        "filename": "src/heap/concurrent-marking.cc",
        "patchSetId": 33
      },
      "lineNbr": 410,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2023-08-03T15:14:26Z",
      "side": 1,
      "message": "Both are .3% and would add up to .6%? I find all of this hard to believe to make an actual difference.",
      "parentUuid": "3933557a_f6ae512f",
      "range": {
        "startLine": 410,
        "startChar": 62,
        "endLine": 410,
        "endChar": 73
      },
      "revId": "482ce6087097e3dfb8d0ecdfd06c39ac83cd105d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cce56909_cff94a07",
        "filename": "src/heap/concurrent-marking.cc",
        "patchSetId": 33
      },
      "lineNbr": 410,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2023-08-03T15:21:19Z",
      "side": 1,
      "message": "Individually each was 0.3% on pinpoint.\nI did check both together. I can run that on Pinpoint and I\u0027ll let you know what it says.",
      "parentUuid": "23a333c2_384805c0",
      "range": {
        "startLine": 410,
        "startChar": 62,
        "endLine": 410,
        "endChar": 73
      },
      "revId": "482ce6087097e3dfb8d0ecdfd06c39ac83cd105d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0163bc01_92bb5775",
        "filename": "src/heap/concurrent-marking.cc",
        "patchSetId": 33
      },
      "lineNbr": 410,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2023-08-03T20:45:01Z",
      "side": 1,
      "message": "It appears it\u0027s all noise.\nI ran a few more jobs and results vary between improvement and regression.",
      "parentUuid": "cce56909_cff94a07",
      "range": {
        "startLine": 410,
        "startChar": 62,
        "endLine": 410,
        "endChar": 73
      },
      "revId": "482ce6087097e3dfb8d0ecdfd06c39ac83cd105d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32e69f79_d47b4147",
        "filename": "src/heap/concurrent-marking.cc",
        "patchSetId": 33
      },
      "lineNbr": 410,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2023-08-04T07:38:33Z",
      "side": 1,
      "message": "Would you be ok with landing with all the branches and then incrementally remove them in followup CLs?\nWe could also do the same for some of the branches in the visitor.\nWe could add relevant TODOs in this CL in the meantime.\nI have concerns about the reliability of some of the pinpoint jobs and I would rather look for the regressions on the graphs where we can track trends rather than just a single datapoint.",
      "parentUuid": "0163bc01_92bb5775",
      "range": {
        "startLine": 410,
        "startChar": 62,
        "endLine": 410,
        "endChar": 73
      },
      "revId": "482ce6087097e3dfb8d0ecdfd06c39ac83cd105d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b664f063_7a17b27c",
        "filename": "src/heap/concurrent-marking.cc",
        "patchSetId": 33
      },
      "lineNbr": 410,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2023-08-04T09:00:54Z",
      "side": 1,
      "message": "We should not land branches when we don\u0027t have data to back up the specializations. This is the wrong direction.\n\nBranches should be motivated by performance cases (pinpoint, flamegraph) and not the other way round.\n\nIf anything, we should land a minimal version, observe a regression, then fix that up with adding a specialization.",
      "parentUuid": "32e69f79_d47b4147",
      "range": {
        "startLine": 410,
        "startChar": 62,
        "endLine": 410,
        "endChar": 73
      },
      "revId": "482ce6087097e3dfb8d0ecdfd06c39ac83cd105d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2cdac43c_b5d1d7d1",
        "filename": "src/heap/gc-tracer.h",
        "patchSetId": 33
      },
      "lineNbr": 303,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2023-08-02T11:59:58Z",
      "side": 1,
      "message": "I don\u0027t think we should use GCTracer state in conditionals that branch actual code. (Other than statistics). Can we move the atomic state to e.g. MinorMS? (It\u0027s probably even equivalent to `incremental_marking()-\u003eIsStopped()` during MinorMS marking (which again is non-atomic).",
      "range": {
        "startLine": 303,
        "startChar": 7,
        "endLine": 303,
        "endChar": 22
      },
      "revId": "482ce6087097e3dfb8d0ecdfd06c39ac83cd105d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67bbd3aa_601121b4",
        "filename": "src/heap/gc-tracer.h",
        "patchSetId": 33
      },
      "lineNbr": 303,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2023-08-03T09:29:18Z",
      "side": 1,
      "message": "Done\n(atomics are still needed imo since the concurrent marker is reading it and we don\u0027t know when it will run)",
      "parentUuid": "2cdac43c_b5d1d7d1",
      "range": {
        "startLine": 303,
        "startChar": 7,
        "endLine": 303,
        "endChar": 22
      },
      "revId": "482ce6087097e3dfb8d0ecdfd06c39ac83cd105d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}