{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ff151560_170274fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-06-09T19:03:01Z",
      "side": 1,
      "message": "dinfuehr@ PTAL src/heap/*\nmythria@ PTRA src/interpreter/*\nahaas@ PTAL src/wasm/*",
      "revId": "216729a44586f613c78b45988c26ca29d684654b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01f396fd_618ddf40",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2021-06-09T19:45:20Z",
      "side": 1,
      "message": "src/heap LGTM",
      "revId": "216729a44586f613c78b45988c26ca29d684654b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b47caee_f75137c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2021-06-10T05:20:25Z",
      "side": 1,
      "message": "src/wasm/* LGTM",
      "revId": "216729a44586f613c78b45988c26ca29d684654b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "833f040d_628adf61",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-06-10T05:35:58Z",
      "side": 1,
      "message": "Looked mostly at builtins.h",
      "revId": "216729a44586f613c78b45988c26ca29d684654b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb3a6eda_909e5f9f",
        "filename": "src/builtins/builtins.cc",
        "patchSetId": 5
      },
      "lineNbr": 236,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-06-10T05:35:58Z",
      "side": 1,
      "message": "Why change all these to the more uncommon \u003c\u003d loop style? Also, weren\u0027t range-based for loops also discussed at some point? (IMO these new loops are not an improvement over the int-based originals.)",
      "revId": "216729a44586f613c78b45988c26ca29d684654b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c310c47_6a423ba9",
        "filename": "src/builtins/builtins.cc",
        "patchSetId": 5
      },
      "lineNbr": 236,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-06-10T09:38:33Z",
      "side": 1,
      "message": "Yeah I agree, they\u0027re not really an upgrade, mostly cargo culting on top of the RootIndex approach.\n\nI started to prefer \u003c\u003d since you can refer to the last enum (and not the non-existent last+1). If I read correctly, using invalid values for enum casts is UB.",
      "parentUuid": "eb3a6eda_909e5f9f",
      "revId": "216729a44586f613c78b45988c26ca29d684654b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7815d5e_cf61b31b",
        "filename": "src/builtins/builtins.cc",
        "patchSetId": 5
      },
      "lineNbr": 236,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2021-06-10T10:48:38Z",
      "side": 1,
      "message": "+1 for giving a range-based loops a try in a follow-up CL.",
      "parentUuid": "3c310c47_6a423ba9",
      "revId": "216729a44586f613c78b45988c26ca29d684654b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fc5c5c7_17943957",
        "filename": "src/builtins/builtins.cc",
        "patchSetId": 5
      },
      "lineNbr": 236,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-06-10T15:15:38Z",
      "side": 1,
      "message": "ok, let me do that for Builtin and RootIndex, so we will have the same pattern there.",
      "parentUuid": "b7815d5e_cf61b31b",
      "revId": "216729a44586f613c78b45988c26ca29d684654b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49006c3b_6c27d363",
        "filename": "src/builtins/builtins.h",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-06-10T05:35:58Z",
      "side": 1,
      "message": "qq would defining operator+ instead fix both ++ and the \u0027+\u0027 case in L83?",
      "revId": "216729a44586f613c78b45988c26ca29d684654b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0868f7a_cfdc0c08",
        "filename": "src/builtins/builtins.h",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-06-10T09:38:33Z",
      "side": 1,
      "message": "ah right, let me try this.",
      "parentUuid": "49006c3b_6c27d363",
      "revId": "216729a44586f613c78b45988c26ca29d684654b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5621b246_7b3d8117",
        "filename": "src/builtins/builtins.h",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-06-10T15:15:38Z",
      "side": 1,
      "message": "ah no, l83 is Builtin + int, that still won\u0027t work cleanly.\n\nI will try to clean this up a bit further and remove some more int uses.",
      "parentUuid": "b0868f7a_cfdc0c08",
      "revId": "216729a44586f613c78b45988c26ca29d684654b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cce627d_234c42b7",
        "filename": "src/builtins/builtins.h",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2021-06-10T16:32:21Z",
      "side": 1,
      "message": "You could have defined global operator+(Builtin,int) and operator+(int,Builtin).",
      "parentUuid": "5621b246_7b3d8117",
      "revId": "216729a44586f613c78b45988c26ca29d684654b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}