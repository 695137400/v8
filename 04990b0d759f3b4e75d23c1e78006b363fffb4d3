{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "42dfdcc5_2015ac6d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-01T16:50:57Z",
      "side": 1,
      "message": "Benedikt, PTAL as main reviewer.\nMichael for BUILD.gn changes, Jakob for src/compiler.",
      "revId": "04990b0d759f3b4e75d23c1e78006b363fffb4d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "625a2fc6_9c5c4f43",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2021-03-02T09:03:22Z",
      "side": 1,
      "message": "gn/gcmole +1",
      "revId": "04990b0d759f3b4e75d23c1e78006b363fffb4d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45939854_6fb252fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-02T09:20:03Z",
      "side": 1,
      "message": "Did you mean to click CR+1 instead of CQ+1?",
      "revId": "04990b0d759f3b4e75d23c1e78006b363fffb4d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2727bbb8_ced80cf1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2021-03-02T09:21:16Z",
      "side": 1,
      "message": "\u003e Did you mean to click CR+1 instead of CQ+1?\n\nUps, of course! ðŸ˜„",
      "parentUuid": "45939854_6fb252fb",
      "revId": "04990b0d759f3b4e75d23c1e78006b363fffb4d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00b5ed92_1f4c7ddd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2021-03-02T16:52:23Z",
      "side": 1,
      "message": "LGTM.\n\nLooking forward to introducing `#if V8_ENABLE_JAVASCRIPT` one day for wee8 :-)",
      "revId": "04990b0d759f3b4e75d23c1e78006b363fffb4d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75b5ebaa_4b228eb0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-02T17:14:52Z",
      "side": 1,
      "message": "Thanks, all. Landing.",
      "revId": "04990b0d759f3b4e75d23c1e78006b363fffb4d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f47f35d3_d15bf96b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-02T17:26:34Z",
      "side": 1,
      "message": "Huh, I thought Jakob is compiler owner. Maya, can you take a quick look please?",
      "revId": "04990b0d759f3b4e75d23c1e78006b363fffb4d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "333ed754_64532d64",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2021-03-02T17:52:21Z",
      "side": 1,
      "message": "LGTM, thanks!",
      "revId": "04990b0d759f3b4e75d23c1e78006b363fffb4d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bc5f4e7_34daf4d0",
        "filename": "src/compiler/types.cc",
        "patchSetId": 4
      },
      "lineNbr": 258,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2021-03-02T08:24:31Z",
      "side": 1,
      "message": "For my understanding: The plan is to eventually also guard these WASM_*_TYPEs as well?",
      "revId": "04990b0d759f3b4e75d23c1e78006b363fffb4d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3fc0a85_7525e20a",
        "filename": "src/compiler/types.cc",
        "patchSetId": 4
      },
      "lineNbr": 258,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-02T09:11:13Z",
      "side": 1,
      "message": "Exactly. I have the complete change locally, but it\u0027s a lot of stuff so I thought it\u0027s easier to review if I break it up in a few CLs. Next one if probably removing wasm frame types.",
      "parentUuid": "4bc5f4e7_34daf4d0",
      "revId": "04990b0d759f3b4e75d23c1e78006b363fffb4d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7176fcca_f9841491",
        "filename": "src/compiler/types.cc",
        "patchSetId": 4
      },
      "lineNbr": 258,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-02T17:14:52Z",
      "side": 1,
      "message": "Marking resolved.",
      "parentUuid": "d3fc0a85_7525e20a",
      "revId": "04990b0d759f3b4e75d23c1e78006b363fffb4d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea186b20_087ed13f",
        "filename": "src/debug/debug-wasm-objects.h",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2021-03-02T08:24:31Z",
      "side": 1,
      "message": "How about not adding this #if guards around every #include of this header, but instead just guarding everything inside this file with #if V8_ENABLE_WEBASSEMBLY instead? like this\n\n```\n#ifndef V8_DEBUG_DEBUG_WASM_OBJECTS_H_\n#define V8_DEBUG_DEBUG_WASM_OBJECTS_H_\n\n#include \u003cmemory\u003e\n\n#include \"src/objects/js-objects.h\"\n\n#if V8_ENABLE_WEBASSEMBLY\n\n/// ACTUAL CONTENT HERE\n\n#endif  // V8_ENABLE_WEBASSEMBLY\n\n#endif  // V8_DEBUG_DEBUG_WASM_OBJECTS_H_\n```",
      "revId": "04990b0d759f3b4e75d23c1e78006b363fffb4d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "950ebc9a_982637b5",
        "filename": "src/debug/debug-wasm-objects.h",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-02T09:11:13Z",
      "side": 1,
      "message": "I considered it cleaner to avoid the includes completely. We could certainly also do it the other way around.\nJakob, do you have any preference?",
      "parentUuid": "ea186b20_087ed13f",
      "revId": "04990b0d759f3b4e75d23c1e78006b363fffb4d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ecad26e_6127f148",
        "filename": "src/debug/debug-wasm-objects.h",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2021-03-02T09:15:49Z",
      "side": 1,
      "message": "My personal preference would be to not guard the includes. I think that\u0027s more consistent with what we do in other places. But I\u0027ll leave this to you and Jakob.",
      "parentUuid": "950ebc9a_982637b5",
      "revId": "04990b0d759f3b4e75d23c1e78006b363fffb4d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97ffbabe_3083f949",
        "filename": "src/debug/debug-wasm-objects.h",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2021-03-02T16:52:23Z",
      "side": 1,
      "message": "No preference.\n\n*If* it made a measurable difference for compile times, then I\u0027d be strongly in favor of the current approach to not include the headers in the first place. But having the preprocessor skip over thousands of lines that are #ifdef\u0027ed out is probably so fast that it doesn\u0027t matter.\n\nAside from that, unconditional includes are less verbose, but explicit conditional includes make it more obvious what\u0027s going on. Between those two arguments I can\u0027t decide which is better; so feel free to keep what you have. (We can also change it later fairly easily if we discover a reason to do so.)",
      "parentUuid": "5ecad26e_6127f148",
      "revId": "04990b0d759f3b4e75d23c1e78006b363fffb4d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1421104_c99e21a2",
        "filename": "src/debug/debug-wasm-objects.h",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-03-02T17:14:52Z",
      "side": 1,
      "message": "I don\u0027t think it makes a measurable difference for compile time, so it\u0027s really just a matter of coding style.\nI found exactly one header where we #ifdef out the whole content: src/zone/type-stats.h. So it doesn\u0027t seem to be a common idiom either.\n\nWith this CL we could only do it for the debug-wasm-objects.h header, and not the headers in src/wasm yet, so we wouldn\u0027t see if we accidentally still use a wasm type somewhere in src/debug. So I am leaving this as-is for now, and as Jakob said, it\u0027s fairly easy to switch to the other style once this project is completed.",
      "parentUuid": "97ffbabe_3083f949",
      "revId": "04990b0d759f3b4e75d23c1e78006b363fffb4d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}