{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f671101b_6d34dc30",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2021-11-04T10:54:03Z",
      "side": 1,
      "message": "looks good modulo concerns regarding using std::allocator\u003cT\u003e.",
      "revId": "aa90a5b4f2cd8d0c952dc1473e70f1b9f155173c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0df78968_6109c4f6",
        "filename": "src/base/small-vector.h",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2021-11-04T10:54:03Z",
      "side": 1,
      "message": "This doesn\u0027t seem like an equivalent change since allocations will no longer be routed via base::Malloc() which is defined differently for V8_OS_STARBOARD (Cobalt). I\u0027m not sure what does it do with other usages of malloc/free though.\n\nAnyway, there\u0027s an alternative non-STL AllocationPolicy approach used in src/base/hashmap.h. See DefaultAllocationPolicy, it routes allocations via base::Malloc/Free.",
      "range": {
        "startLine": 20,
        "startChar": 57,
        "endLine": 20,
        "endChar": 74
      },
      "revId": "aa90a5b4f2cd8d0c952dc1473e70f1b9f155173c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fad24b99_483611b7",
        "filename": "src/base/small-vector.h",
        "patchSetId": 6
      },
      "lineNbr": 146,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2021-11-04T10:54:03Z",
      "side": 1,
      "message": "Suggestion: it\u0027d be nice if you could utilize empty base optimization to let the compiler optimize away this field if the class is stateless.",
      "revId": "aa90a5b4f2cd8d0c952dc1473e70f1b9f155173c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}