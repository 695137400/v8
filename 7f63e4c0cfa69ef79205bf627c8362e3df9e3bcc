{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6ec78cc7_625c1e2d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2023-10-06T12:05:27Z",
      "side": 1,
      "message": "looks good, just some suggestions for further optimizations",
      "revId": "7f63e4c0cfa69ef79205bf627c8362e3df9e3bcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8d435f1_c140c202",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2023-10-06T12:56:52Z",
      "side": 1,
      "message": "Thanks Igor! Main question remaining: Refactor as part of this CL or as a follow-up?",
      "revId": "7f63e4c0cfa69ef79205bf627c8362e3df9e3bcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc0e11e6_df1cbc17",
        "filename": "src/json/json-stringifier.cc",
        "patchSetId": 5
      },
      "lineNbr": 1018,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2023-10-06T12:05:27Z",
      "side": 1,
      "message": "Not sure how hot this code is but note that you are adding an unnecessary dynamic `is_holey` variable check for packed case. Maybe it\u0027s worth splitting holey and packed cases and make `is_holey` a compile-time parameter of `SerializeFixedArrayFast()`.\nDo we have a benchmark for this?",
      "revId": "7f63e4c0cfa69ef79205bf627c8362e3df9e3bcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "905aa2f9_6a04576d",
        "filename": "src/json/json-stringifier.cc",
        "patchSetId": 5
      },
      "lineNbr": 1018,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2023-10-06T12:56:52Z",
      "side": 1,
      "message": "I don\u0027t think we have a benchmark checked-in (JS-perf-tests only use `JSON.stringify` to verify results, but non measures performance of stringify).\nI ran pinpoint for Speedometer2 und JetStream2 to make sure there is no regression.\nBut I agree it would be better to split them up. This mostly ties in with my other comment (about refactoring this method), as it would be easier/nicer to separate packed/holey after this is done.",
      "parentUuid": "bc0e11e6_df1cbc17",
      "revId": "7f63e4c0cfa69ef79205bf627c8362e3df9e3bcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07cad0dc_4ede2854",
        "filename": "src/json/json-stringifier.cc",
        "patchSetId": 5
      },
      "lineNbr": 1029,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2023-10-06T12:05:27Z",
      "side": 1,
      "message": "Note that this block is the same as the one for double elements modulo `serialize_element` and `elements` type. You might want to unify them too by moving the while loop inside `SerializeFixedArrayFast`.",
      "revId": "7f63e4c0cfa69ef79205bf627c8362e3df9e3bcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94f07357_fdca1d7c",
        "filename": "src/json/json-stringifier.cc",
        "patchSetId": 5
      },
      "lineNbr": 1029,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2023-10-06T12:56:52Z",
      "side": 1,
      "message": "Yeah I agree this all is a bit of a mess. The mix of breaks/returns etc makes this hard to navigate/change.\nI think it is best to refactor most of this method.\nCan do either as part of this CL or as a follow-up, whatever you prefer.",
      "parentUuid": "07cad0dc_4ede2854",
      "revId": "7f63e4c0cfa69ef79205bf627c8362e3df9e3bcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}