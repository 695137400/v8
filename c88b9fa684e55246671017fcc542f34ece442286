{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "af1f7d25_b479369f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2023-06-06T12:46:45Z",
      "side": 1,
      "message": "@manoskouk@chromium.org: PTAL.\n@tebbi@chromium.org: Please component-review `src/compiler` and perform full review for the turboshaft changes. ðŸ˜Š",
      "revId": "c88b9fa684e55246671017fcc542f34ece442286",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1efab6d7_b0890d70",
        "filename": "src/compiler/turboshaft/wasm-js-lowering-reducer.h",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2023-06-06T12:46:45Z",
      "side": 1,
      "message": "This is surprisingly much code for basically only changing an integer (the bailout id)...",
      "range": {
        "startLine": 61,
        "startChar": 10,
        "endLine": 61,
        "endChar": 46
      },
      "revId": "c88b9fa684e55246671017fcc542f34ece442286",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92636baa_e2bfac6b",
        "filename": "src/compiler/turboshaft/wasm-js-lowering-reducer.h",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2023-06-06T12:46:45Z",
      "side": 1,
      "message": "@tebbi@chromium.org: So right now the TS `SourcePositionTable` will always be created if the JS function contains wasm function calls with inlineable wrappers because it seems to be always created if the TF `SourcePositionTable` is enabled.\n\nHow do you feel? Would this be fine? Do we have any estimates on how much memory the `SourcePositionTable` needs compared to the max memory usage of the compilation?",
      "range": {
        "startLine": 71,
        "startChar": 17,
        "endLine": 71,
        "endChar": 52
      },
      "revId": "c88b9fa684e55246671017fcc542f34ece442286",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0cd2846_df95dc45",
        "filename": "src/compiler/turboshaft/wasm-js-lowering-reducer.h",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2023-06-14T12:14:24Z",
      "side": 1,
      "message": "It does consume some memory (8 bytes per Turboshaft operation), but given that Wasm inlining is a rare case, I think the overall overhead is fine. But I guess you could empty the source position table after the phase with `WasmJSLoweringReducer` with reasonable effort.",
      "parentUuid": "92636baa_e2bfac6b",
      "range": {
        "startLine": 71,
        "startChar": 17,
        "endLine": 71,
        "endChar": 52
      },
      "revId": "c88b9fa684e55246671017fcc542f34ece442286",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ecc8da4d_46fcbdf8",
        "filename": "src/compiler/turboshaft/wasm-js-lowering-reducer.h",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2023-06-14T13:22:54Z",
      "side": 1,
      "message": "With \"reasonable\" effort, yes. Although the effort would be to also store the information somewhere whether the `SourcePositionTable` exists because of the wasm inlining or because it is needed anyways (due to `--trace-turbo`, profiling, ...)\nAlso, there aren\u0027t really many turbsohaft phases left after the `WasmJSLoweringReducer`, so I\u0027m not sure if it would actually save us much?",
      "parentUuid": "e0cd2846_df95dc45",
      "range": {
        "startLine": 71,
        "startChar": 17,
        "endLine": 71,
        "endChar": 52
      },
      "revId": "c88b9fa684e55246671017fcc542f34ece442286",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4e3022e_c4d9a9ff",
        "filename": "src/compiler/turboshaft/wasm-js-lowering-reducer.h",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1180419
      },
      "writtenOn": "2023-06-14T13:34:50Z",
      "side": 1,
      "message": "True, in any case, I\u0027m fine with how it is right now.",
      "parentUuid": "ecc8da4d_46fcbdf8",
      "range": {
        "startLine": 71,
        "startChar": 17,
        "endLine": 71,
        "endChar": 52
      },
      "revId": "c88b9fa684e55246671017fcc542f34ece442286",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97b7db5d_21f28b22",
        "filename": "src/execution/frames.cc",
        "patchSetId": 1
      },
      "lineNbr": 2360,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2023-06-06T12:46:45Z",
      "side": 1,
      "message": "Outside of removing code and reduced indentation, this is the only part that changed here.\nInstead of using the runtime `SourcePositionTable` (which will not be created thanks to the change in `isolate.cc` below) we access the position based on the translation / deopt data (which is filled based on the `FrameStateInfo` in the compiler).",
      "range": {
        "startLine": 2360,
        "startChar": 43,
        "endLine": 2360,
        "endChar": 72
      },
      "revId": "c88b9fa684e55246671017fcc542f34ece442286",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac0ea68a_29d30684",
        "filename": "src/execution/frames.cc",
        "patchSetId": 1
      },
      "lineNbr": 2360,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2023-06-07T12:29:53Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "97b7db5d_21f28b22",
      "range": {
        "startLine": 2360,
        "startChar": 43,
        "endLine": 2360,
        "endChar": 72
      },
      "revId": "c88b9fa684e55246671017fcc542f34ece442286",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}