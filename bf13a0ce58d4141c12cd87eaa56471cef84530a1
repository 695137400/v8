{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0f5fb5e7_643dc260",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1118571
      },
      "writtenOn": "2024-05-03T13:39:30Z",
      "side": 1,
      "message": "This is a large and horrible patch but which is mostly mechanical, as discussed on https://issues.chromium.org/issues/337580006.",
      "revId": "bf13a0ce58d4141c12cd87eaa56471cef84530a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2af4449c_b904e009",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-05-03T14:24:21Z",
      "side": 1,
      "message": "Wohoo!",
      "revId": "bf13a0ce58d4141c12cd87eaa56471cef84530a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e22d05a_f7b0a790",
        "filename": "src/execution/isolate-utils-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-05-03T14:24:21Z",
      "side": 1,
      "message": "Should this be `GetIsolateForPointerCompression`?",
      "range": {
        "startLine": 61,
        "startChar": 43,
        "endLine": 61,
        "endChar": 63
      },
      "revId": "bf13a0ce58d4141c12cd87eaa56471cef84530a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e0b9f62_d63b242a",
        "filename": "src/execution/isolate-utils-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1118571
      },
      "writtenOn": "2024-05-10T11:27:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e22d05a_f7b0a790",
      "range": {
        "startLine": 61,
        "startChar": 43,
        "endLine": 61,
        "endChar": 63
      },
      "revId": "bf13a0ce58d4141c12cd87eaa56471cef84530a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3eae5343_46eb3ca9",
        "filename": "src/objects/js-array-buffer-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 120,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-05-03T14:24:21Z",
      "side": 1,
      "message": "Can we do this now? I.e. use `WriteInitializedExternalPointerField` here and `SetupLazilyInitializedExternalPointerField` in `init_extension`? If it doesn\u0027t work for some reason, feel free to just leave the TODO though",
      "range": {
        "startLine": 118,
        "startChar": 0,
        "endLine": 120,
        "endChar": 67
      },
      "revId": "bf13a0ce58d4141c12cd87eaa56471cef84530a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8641ccec_fd7cf3a9",
        "filename": "src/objects/js-array-buffer-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 120,
      "author": {
        "id": 1118571
      },
      "writtenOn": "2024-05-10T11:27:58Z",
      "side": 1,
      "message": "It seems that we can\u0027t do it for the moment because of the need for acquire/release memory ordering; annoying.  I will update the comments (and cheekily keep you on the TODO :).  (Heretical thought: maybe we should just use acq/rel ordering for all external pointer accesses...)",
      "parentUuid": "3eae5343_46eb3ca9",
      "range": {
        "startLine": 118,
        "startChar": 0,
        "endLine": 120,
        "endChar": 67
      },
      "revId": "bf13a0ce58d4141c12cd87eaa56471cef84530a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f298c63_d7b92d33",
        "filename": "src/snapshot/read-only-deserializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 196,
      "author": {
        "id": 1118571
      },
      "writtenOn": "2024-05-03T13:46:25Z",
      "side": 1,
      "message": "This dcheck fails on multi-cage mode.  Have to figure out a solution.",
      "revId": "bf13a0ce58d4141c12cd87eaa56471cef84530a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f19c0d1_3f5a2c14",
        "filename": "src/snapshot/read-only-deserializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 196,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-05-03T14:24:21Z",
      "side": 1,
      "message": "Ah hmm not sure how exactly this works, but I guess the problem is the this code currently assumes a shared RO space and a shared EPT RO space. If this isn\u0027t the case, we probably need one EPT RO space per heap or something like that?\nMaybe worth checking if we even have any external pointers in the RO snapshot in that case though.",
      "parentUuid": "0f298c63_d7b92d33",
      "revId": "bf13a0ce58d4141c12cd87eaa56471cef84530a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b871aee1_6ff98817",
        "filename": "src/snapshot/read-only-deserializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 196,
      "author": {
        "id": 1118571
      },
      "writtenOn": "2024-05-10T11:27:58Z",
      "side": 1,
      "message": "Still puzzling over this one; I don\u0027t have a good understanding yet about how the RO heap works.  Each snapshot has its own RO spaces?  And deserializing an isolate might put those RO spaces into some sort of shared part of the pointer cage?  If there are any design docs on read-only spaces I would be happy to peruse them :)",
      "parentUuid": "9f19c0d1_3f5a2c14",
      "revId": "bf13a0ce58d4141c12cd87eaa56471cef84530a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b111d63_345a7cb9",
        "filename": "src/snapshot/read-only-deserializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 196,
      "author": {
        "id": 1118571
      },
      "writtenOn": "2024-05-31T13:08:11Z",
      "side": 1,
      "message": "OK.  Before this patch, the RO heap snapshot in non-sandbox configurations would not have EPT entries, and now it will.  For a monocage configuration this is fine; closer to the sandbox configuration.  But for a multi-cage configuration we need to refactor to make one read-only heap per isolate group, in a multi-cage configuration.  That will require another patch or two.",
      "parentUuid": "b871aee1_6ff98817",
      "revId": "bf13a0ce58d4141c12cd87eaa56471cef84530a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}