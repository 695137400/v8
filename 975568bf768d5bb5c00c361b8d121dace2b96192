{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5bf52bc3_07e4ed4e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2023-11-27T13:36:12Z",
      "side": 1,
      "message": "LGTM!",
      "revId": "975568bf768d5bb5c00c361b8d121dace2b96192",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14ec8ce7_cd4beb40",
        "filename": "BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 850,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2023-11-27T13:51:42Z",
      "side": 1,
      "message": "Is this set of flags here particularly interesting?\n\nLooking at the list below, I guess it\u0027s much more that Node is interested?\n\n(I wonder if we need that comment here. It feels like we must generally keep `v8_generate_features_json` in sync and this place here is not special.)",
      "range": {
        "startLine": 850,
        "startChar": 2,
        "endLine": 850,
        "endChar": 6
      },
      "revId": "975568bf768d5bb5c00c361b8d121dace2b96192",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65430299_e4201219",
        "filename": "BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 850,
      "author": {
        "id": 1255853
      },
      "writtenOn": "2023-11-28T00:23:50Z",
      "side": 1,
      "message": "When building native modules, node-gyp must set the same V8 defines with the Node/Electron version targeted, otherwise the declarations in V8 headers will be different between native modules and Node/Electron, and crash will happen.\n\nThe defines in `external_v8_defines` are particularly important because these are the defines used in V8 headers and any mismatch of these defines will almost certainly lead to crashes. So any feature flag that affects `external_v8_defines` must be listed in `v8_generate_features_json`.\n\nIn the meanwhile `v8_generate_features_json` does not list every V8 feature flag, there are just too many of them and most of them are not related to native modules. We don\u0027t need V8 to add every new feature flag to `v8_generate_features_json`, for most times we only care about the flags related to `external_v8_defines`.",
      "parentUuid": "14ec8ce7_cd4beb40",
      "range": {
        "startLine": 850,
        "startChar": 2,
        "endLine": 850,
        "endChar": 6
      },
      "revId": "975568bf768d5bb5c00c361b8d121dace2b96192",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "612d7f87_37bb896b",
        "filename": "BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 850,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2023-11-28T07:21:49Z",
      "side": 1,
      "message": "Sg, it looked as a superset of `external_v8_defines` + some more. It\u0027s still unclear which additional ones we need but at least it\u0027s clear to add `external_v8_defines`.",
      "parentUuid": "65430299_e4201219",
      "range": {
        "startLine": 850,
        "startChar": 2,
        "endLine": 850,
        "endChar": 6
      },
      "revId": "975568bf768d5bb5c00c361b8d121dace2b96192",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "975568bf768d5bb5c00c361b8d121dace2b96192",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "975568bf768d5bb5c00c361b8d121dace2b96192",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "975568bf768d5bb5c00c361b8d121dace2b96192",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "975568bf768d5bb5c00c361b8d121dace2b96192",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}