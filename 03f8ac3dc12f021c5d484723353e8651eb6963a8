{
  "comments": [
    {
      "key": {
        "uuid": "5e53de8e_568f9c03",
        "filename": "src/runtime/runtime-wasm.cc",
        "patchSetId": 1
      },
      "lineNbr": 635,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-03-20T14:00:35Z",
      "side": 1,
      "message": "Another scenario (that we don\u0027t need to support yet) is that another isolate has set the breakpoint.",
      "revId": "03f8ac3dc12f021c5d484723353e8651eb6963a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d55750f_94aa2637",
        "filename": "src/runtime/runtime-wasm.cc",
        "patchSetId": 1
      },
      "lineNbr": 635,
      "author": {
        "id": 1345975
      },
      "writtenOn": "2020-03-20T15:33:01Z",
      "side": 1,
      "message": "Ack. Will add a comment about it so that we don\u0027t forget.",
      "parentUuid": "5e53de8e_568f9c03",
      "revId": "03f8ac3dc12f021c5d484723353e8651eb6963a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5024d886_d02fdfe7",
        "filename": "src/runtime/runtime-wasm.cc",
        "patchSetId": 1
      },
      "lineNbr": 638,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-03-20T14:00:35Z",
      "side": 1,
      "message": "In this case (case 3), wouldn\u0027t we effectively unflood the function?",
      "revId": "03f8ac3dc12f021c5d484723353e8651eb6963a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0caa63e0_819091ea",
        "filename": "src/runtime/runtime-wasm.cc",
        "patchSetId": 1
      },
      "lineNbr": 638,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-03-20T14:44:26Z",
      "side": 1,
      "message": "Thanks for explaining offline, didn\u0027t see the little trick in the OSR.",
      "parentUuid": "5024d886_d02fdfe7",
      "revId": "03f8ac3dc12f021c5d484723353e8651eb6963a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55598197_9b9cdaa7",
        "filename": "src/wasm/wasm-debug.cc",
        "patchSetId": 1
      },
      "lineNbr": 809,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-03-20T14:44:26Z",
      "side": 1,
      "message": "This is neat! We could actually do something similar when initially flooding a function. We only need to rewrite the return address into the stepping frame, other could stay untouched.\n\nBut I am wondering: Wouldn\u0027t we need to skip the frame, if it\u0027s the one *called from* the stepping frame, i.e. one before the stepping frame in the iterator? Because what we patch here is the *return address* of that frame, i.e. where in the caller to continue.",
      "revId": "03f8ac3dc12f021c5d484723353e8651eb6963a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bd5ee58_01bfe2fc",
        "filename": "src/wasm/wasm-debug.cc",
        "patchSetId": 1
      },
      "lineNbr": 809,
      "author": {
        "id": 1345975
      },
      "writtenOn": "2020-03-20T15:33:01Z",
      "side": 1,
      "message": "That makes sense, somehow I thought the pc referred to the callee\u0027s pc. I will change it but unfortunately I can\u0027t test it yet, because we are still missing the source pos, so no frame is updated at all.",
      "parentUuid": "55598197_9b9cdaa7",
      "revId": "03f8ac3dc12f021c5d484723353e8651eb6963a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8d3c88b_15d7169d",
        "filename": "src/wasm/wasm-debug.cc",
        "patchSetId": 1
      },
      "lineNbr": 809,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-03-20T15:37:48Z",
      "side": 1,
      "message": "Yeah, that missing source position is definitely what we should fix next.",
      "parentUuid": "5bd5ee58_01bfe2fc",
      "revId": "03f8ac3dc12f021c5d484723353e8651eb6963a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b4ae630_99500ec1",
        "filename": "src/wasm/wasm-debug.cc",
        "patchSetId": 1
      },
      "lineNbr": 809,
      "author": {
        "id": 1345975
      },
      "writtenOn": "2020-03-20T15:57:41Z",
      "side": 1,
      "message": "BTW this off by one error would also apply to the rest of the loop, wouldn\u0027t it? It is kind of surprising that the tests work then.",
      "parentUuid": "e8d3c88b_15d7169d",
      "revId": "03f8ac3dc12f021c5d484723353e8651eb6963a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}