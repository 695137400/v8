{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9f25a977_2ac87f29",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-10-13T13:22:08Z",
      "side": 1,
      "message": "Thanks, I addressed your comments. PTAL.\n\nThanks,\nMythri",
      "revId": "601535c165baf88bfc6d0d84db98f96ed23cfb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65936c70_41596fbd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-10-14T05:25:59Z",
      "side": 1,
      "message": "lgtm with final comments, thanks!",
      "revId": "601535c165baf88bfc6d0d84db98f96ed23cfb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15c070cd_f3ceff18",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2020-10-14T09:06:38Z",
      "side": 1,
      "message": "LGTM with same comments as Jakob.",
      "revId": "601535c165baf88bfc6d0d84db98f96ed23cfb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "671eb3a5_0c05fb13",
        "filename": "src/codegen/compiler.cc",
        "patchSetId": 15
      },
      "lineNbr": 3000,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-10-14T05:25:59Z",
      "side": 1,
      "message": "Still not sure I understand this change; why not reset ticks for midtier? The intent is that we keep running for a while in midtier code, before the function is *again* considered hot and we re-optimize, right?\n\nWouldn\u0027t keeping profiler ticks mean that the next profiler interrupt will immediately request optimization?",
      "revId": "601535c165baf88bfc6d0d84db98f96ed23cfb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28e57aba_bb0910f9",
        "filename": "src/codegen/compiler.cc",
        "patchSetId": 15
      },
      "lineNbr": 3000,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-10-14T10:10:51Z",
      "side": 1,
      "message": "My mistake. We don\u0027t need this. With interrupt budget we needed to adjust, but now we don\u0027t.",
      "parentUuid": "671eb3a5_0c05fb13",
      "revId": "601535c165baf88bfc6d0d84db98f96ed23cfb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc60691d_d663ed56",
        "filename": "src/compiler/bytecode-graph-builder.cc",
        "patchSetId": 15
      },
      "lineNbr": 4059,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2020-10-14T09:06:38Z",
      "side": 1,
      "message": "nit - newline after",
      "revId": "601535c165baf88bfc6d0d84db98f96ed23cfb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76d8021d_e60a8925",
        "filename": "src/compiler/bytecode-graph-builder.cc",
        "patchSetId": 15
      },
      "lineNbr": 4059,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-10-14T10:10:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc60691d_d663ed56",
      "revId": "601535c165baf88bfc6d0d84db98f96ed23cfb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2cd2d9ff_62e1c797",
        "filename": "src/execution/runtime-profiler.cc",
        "patchSetId": 15
      },
      "lineNbr": 95,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2020-10-14T09:06:38Z",
      "side": 1,
      "message": "Can we add a TODO for Jakob to remove this and roll the tracing into --trace-opt once it doesn\u0027t need to be seperate.",
      "revId": "601535c165baf88bfc6d0d84db98f96ed23cfb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0a660a7_70fb4cff",
        "filename": "src/execution/runtime-profiler.cc",
        "patchSetId": 15
      },
      "lineNbr": 95,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-10-14T10:10:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2cd2d9ff_62e1c797",
      "revId": "601535c165baf88bfc6d0d84db98f96ed23cfb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85fddd58_308cf770",
        "filename": "src/execution/runtime-profiler.cc",
        "patchSetId": 15
      },
      "lineNbr": 303,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-10-14T05:25:59Z",
      "side": 1,
      "message": "Looking at this again, I\u0027m curious what this is intended to achieve.. The top frame is guaranteed to be the expected type, right? \n\nIf so, this logic is only for cases where FLAG_frame_count \u003e 1 and we actually want to look at other frames as well. In that case the function (and the other one above) should be able to handle both Code and Bytecode.\n\nNot for this CL, just noticed it now.",
      "revId": "601535c165baf88bfc6d0d84db98f96ed23cfb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8d41f12_68218a4b",
        "filename": "src/execution/runtime-profiler.cc",
        "patchSetId": 15
      },
      "lineNbr": 303,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-10-14T10:10:51Z",
      "side": 1,
      "message": "I wasn\u0027t quite sure too. Just retained the existing check.In a follow up cl I will just change it to a DCHECK for the first frame and merge both MarkCandidatesForOptimizationFromCode/Bytecode.",
      "parentUuid": "85fddd58_308cf770",
      "revId": "601535c165baf88bfc6d0d84db98f96ed23cfb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ffe0502_cef381a7",
        "filename": "src/execution/runtime-profiler.cc",
        "patchSetId": 15
      },
      "lineNbr": 303,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-10-14T11:22:48Z",
      "side": 1,
      "message": "For the followup, I\u0027d also consider removing FLAG_frame_count, wdyt? It really obfuscates the logic here.",
      "parentUuid": "e8d41f12_68218a4b",
      "revId": "601535c165baf88bfc6d0d84db98f96ed23cfb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2607cc77_ede92dc3",
        "filename": "src/objects/code-kind.h",
        "patchSetId": 15
      },
      "lineNbr": 81,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-10-14T05:25:59Z",
      "side": 1,
      "message": "nit: INTERPRETED_FUNCTION || CodeKindIsOptimizedAndCanTierUp",
      "revId": "601535c165baf88bfc6d0d84db98f96ed23cfb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5df0b20f_4475cc14",
        "filename": "src/objects/code-kind.h",
        "patchSetId": 15
      },
      "lineNbr": 81,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-10-14T10:10:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2607cc77_ede92dc3",
      "revId": "601535c165baf88bfc6d0d84db98f96ed23cfb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db0053ca_3d125316",
        "filename": "src/objects/js-function.cc",
        "patchSetId": 15
      },
      "lineNbr": 146,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-10-14T05:25:59Z",
      "side": 1,
      "message": "Wdyt of also adding ActiveTierIsIgnition() here? May avoid confusion in the future, in case we start combining TP/NCI configs.",
      "revId": "601535c165baf88bfc6d0d84db98f96ed23cfb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a1e2c07_51132ebd",
        "filename": "src/objects/js-function.cc",
        "patchSetId": 15
      },
      "lineNbr": 146,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-10-14T10:10:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db0053ca_3d125316",
      "revId": "601535c165baf88bfc6d0d84db98f96ed23cfb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "029d9134_ea4d1963",
        "filename": "test/mjsunit/mjsunit.status",
        "patchSetId": 15
      },
      "lineNbr": 1208,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-10-14T05:25:59Z",
      "side": 1,
      "message": "Still valid?",
      "revId": "601535c165baf88bfc6d0d84db98f96ed23cfb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77b29188_87b4a058",
        "filename": "test/mjsunit/mjsunit.status",
        "patchSetId": 15
      },
      "lineNbr": 1208,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-10-14T10:10:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "029d9134_ea4d1963",
      "revId": "601535c165baf88bfc6d0d84db98f96ed23cfb8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}