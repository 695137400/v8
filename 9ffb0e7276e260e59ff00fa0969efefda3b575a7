{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "00ac4635_82af87ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 47
      },
      "lineNbr": 0,
      "author": {
        "id": 1531727
      },
      "writtenOn": "2022-07-26T05:29:20Z",
      "side": 1,
      "message": "Thanks for all your comments, I fix nits and test this patch on a machine with PKU support, it passed all tests.",
      "revId": "9ffb0e7276e260e59ff00fa0969efefda3b575a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a835011_28668987",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 47
      },
      "lineNbr": 0,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2022-07-28T08:54:54Z",
      "side": 1,
      "message": "It\u0027s consistently failing for `cctest/test-jump-table-assembler/JumpTablePatchingStress` on my PKU-enabled machine, in both Debug and Optdebug modes. Did you perhaps test with a Release build without DCHECKs?",
      "parentUuid": "00ac4635_82af87ac",
      "revId": "9ffb0e7276e260e59ff00fa0969efefda3b575a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc850bc8_69945a25",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 47
      },
      "lineNbr": 0,
      "author": {
        "id": 1531727
      },
      "writtenOn": "2022-07-28T09:31:41Z",
      "side": 1,
      "message": "I did the test with `is_debug\u003dtrue` build configure, then I did test with `tool/run-test.py --outdir\u003dout/x64.debug`, but it was not error when I tested. Is my test way wrong? I didn\u0027t have access to the device now, I will try to double check and try to reproduce this issue tomorrow.",
      "parentUuid": "7a835011_28668987",
      "revId": "9ffb0e7276e260e59ff00fa0969efefda3b575a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed0a82f5_8d1c697d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 47
      },
      "lineNbr": 0,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-07-28T09:36:30Z",
      "side": 1,
      "message": "`is_debug\u003dtrue` should be enough. Note that the fix is about to land: https://crrev.com/c/3790960\nSo if you try to reproduce, make sure to use a revision before that fix.",
      "parentUuid": "cc850bc8_69945a25",
      "revId": "9ffb0e7276e260e59ff00fa0969efefda3b575a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ed707ff_7b1cc5f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 47
      },
      "lineNbr": 0,
      "author": {
        "id": 1531727
      },
      "writtenOn": "2022-07-28T09:43:09Z",
      "side": 1,
      "message": "Thanks for your reminder, I will survey this tomorrow.",
      "parentUuid": "ed0a82f5_8d1c697d",
      "revId": "9ffb0e7276e260e59ff00fa0969efefda3b575a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "faa58f3b_3042fbe2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 47
      },
      "lineNbr": 0,
      "author": {
        "id": 1531727
      },
      "writtenOn": "2022-07-28T15:28:35Z",
      "side": 1,
      "message": "I\u0027m very sorry for I didn\u0027t find this error in my test, I just get access to my server yet, it looks like the kernel version was modified, but I did the DEBUG test on it without check on this. In that case, PKU was not enabled, so I didn\u0027t find this error.\n\nThanks for your reminder, I reproduce this case now, I found the root cause may be we didn\u0027t use `ResetPKUPermissionsForThreadSpawning` when we create another thread, we may have to add this on the test as modify `for (auto\u0026 patcher : patchers) CHECK(patcher.Start());`  as \n```\nfor (auto\u0026 patcher : patchers) {\n   ResetPKUPermissionsForThreadSpawning thread_scope;\n   CHECK(patcher.Start());\n}\n```\n    \nShould I submit another CL to fix on this?",
      "parentUuid": "5ed707ff_7b1cc5f2",
      "revId": "9ffb0e7276e260e59ff00fa0969efefda3b575a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29088da8_c0ffb01b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 47
      },
      "lineNbr": 0,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2022-07-28T15:30:34Z",
      "side": 1,
      "message": "Does https://crrev.com/c/3790960 not fix this sufficiently?",
      "parentUuid": "faa58f3b_3042fbe2",
      "revId": "9ffb0e7276e260e59ff00fa0969efefda3b575a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f382d6cc_f69b1a67",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 47
      },
      "lineNbr": 0,
      "author": {
        "id": 1531727
      },
      "writtenOn": "2022-07-28T15:39:19Z",
      "side": 1,
      "message": "This Cl indeed do fix this problem, but I suppose if we would like to restore the code of test before that fix, we could add `ResetPKUPermissionsForThreadSpawning`, and I suppose it may be easy to understand, because we have to reset PKU permission before creating each thread.",
      "parentUuid": "29088da8_c0ffb01b",
      "revId": "9ffb0e7276e260e59ff00fa0969efefda3b575a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad656260_95a5f74d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 47
      },
      "lineNbr": 0,
      "author": {
        "id": 1531727
      },
      "writtenOn": "2022-07-28T15:46:49Z",
      "side": 1,
      "message": "I\u0027m sorry that there is another point I didn\u0027t consider, there may be many test like this, if we add `ResetPKUPermissionsForThreadSpawning` to each test case, it may take much effort, so I suppose we can just fix this issue with https://crrev.com/c/3790960, how do you think of this?",
      "parentUuid": "f382d6cc_f69b1a67",
      "revId": "9ffb0e7276e260e59ff00fa0969efefda3b575a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58ccd86c_8bd79a71",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 47
      },
      "lineNbr": 0,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2022-07-28T16:57:53Z",
      "side": 1,
      "message": "Yes, we\u0027ll keep the fix that already landed.\nThere\u0027s nothing more that needs to get done here for now, just please make sure to test PKU changes on a PKU machine before landing next time.",
      "parentUuid": "ad656260_95a5f74d",
      "revId": "9ffb0e7276e260e59ff00fa0969efefda3b575a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "9ffb0e7276e260e59ff00fa0969efefda3b575a7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "9ffb0e7276e260e59ff00fa0969efefda3b575a7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "9ffb0e7276e260e59ff00fa0969efefda3b575a7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "9ffb0e7276e260e59ff00fa0969efefda3b575a7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}