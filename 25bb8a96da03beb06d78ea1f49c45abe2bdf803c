{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4801ce29_ad398579",
        "filename": "src/compiler/wasm-inlining.cc",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-09-07T16:43:09Z",
      "side": 1,
      "message": "A Tailcall node has 1 control output. A Call has 0 control outputs if the call descriptor has kNoThrow property, otherwise it has 2 control outputs.\n\nSo this doesn\u0027t look quite right to me. Even if we assume we are in the kNoThrow case, we\u0027ll end up with a Call node that produces no control but has two control uses: End (from before the change) and Return (see below).",
      "revId": "25bb8a96da03beb06d78ea1f49c45abe2bdf803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c92088ef_3dba8cbf",
        "filename": "src/compiler/wasm-inlining.cc",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2021-09-10T03:37:34Z",
      "side": 1,
      "message": "The End() from before (i.e., the end of the callee subgraph) the change will be unreachable after this transformation, so I think this should not be an issue.\n\nRegarding the number of control outputs: As discussed offline, Webassembly emits graphs which are not quite within Turbofan spec when it comes to Call, but work anyway:\n- if the Call node is not kNoThrow, things work as expected.\n- if the Call node is not kNoThrow and within a try scope, things work as expected.\n- if the Call node is not kNoThrow and not within a try scope, the IfSuccess node is omitted and the Call node is linked directly to the control continuation beyond IfSuccess. The IfFailure node is omitted completely.\n\nNote that the verifier currently is missing the implementation for Call nodes.\n\nWe could maintain this behavior, or add the missing IfSuccess nodes everywhere in the code. I think trying to add IfFailure nodes would be complicated and not worth the effort, given that the current code works.",
      "parentUuid": "4801ce29_ad398579",
      "revId": "25bb8a96da03beb06d78ea1f49c45abe2bdf803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23cba491_e7da469c",
        "filename": "src/compiler/wasm-inlining.cc",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2021-09-13T06:01:03Z",
      "side": 1,
      "message": "The first bullet above should be \"if the Call node is kNoThrow\".",
      "parentUuid": "c92088ef_3dba8cbf",
      "revId": "25bb8a96da03beb06d78ea1f49c45abe2bdf803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b571464_0905a0ba",
        "filename": "src/compiler/wasm-inlining.cc",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-09-13T08:57:10Z",
      "side": 1,
      "message": "Regarding End, I leave it up to you. I find it a bit sloppy to keep the edge around and rely on no other code caring about it, but perhaps this is already done elsewhere. If you keep it please add a comment at least.\n\nLet\u0027s discuss the other issue tomorrow. You can land the CL in the meantime.",
      "parentUuid": "23cba491_e7da469c",
      "revId": "25bb8a96da03beb06d78ea1f49c45abe2bdf803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac2b681d_f235126b",
        "filename": "src/compiler/wasm-inlining.cc",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2021-09-13T09:25:57Z",
      "side": 1,
      "message": "Ok, I agree about dead nodes. I am adding Kill() invocations to remove them explicitly.",
      "parentUuid": "5b571464_0905a0ba",
      "revId": "25bb8a96da03beb06d78ea1f49c45abe2bdf803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62de8233_cb12f191",
        "filename": "src/compiler/wasm-inlining.cc",
        "patchSetId": 4
      },
      "lineNbr": 131,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-09-07T16:43:09Z",
      "side": 1,
      "message": "The Call has Operator::ZeroIfPure(call_descriptor-\u003eproperties()) effect outputs, i.e. possibly 0.",
      "range": {
        "startLine": 131,
        "startChar": 42,
        "endLine": 131,
        "endChar": 47
      },
      "revId": "25bb8a96da03beb06d78ea1f49c45abe2bdf803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34aba4b9_d8dd41cf",
        "filename": "src/compiler/wasm-inlining.cc",
        "patchSetId": 4
      },
      "lineNbr": 131,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2021-09-10T03:37:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62de8233_cb12f191",
      "range": {
        "startLine": 131,
        "startChar": 42,
        "endLine": 131,
        "endChar": 47
      },
      "revId": "25bb8a96da03beb06d78ea1f49c45abe2bdf803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d382cebe_76510c22",
        "filename": "src/compiler/wasm-inlining.cc",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-09-07T16:43:09Z",
      "side": 1,
      "message": "See above.",
      "range": {
        "startLine": 132,
        "startChar": 42,
        "endLine": 132,
        "endChar": 47
      },
      "revId": "25bb8a96da03beb06d78ea1f49c45abe2bdf803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed9342fb_1068a672",
        "filename": "src/compiler/wasm-inlining.cc",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2021-09-10T03:37:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d382cebe_76510c22",
      "range": {
        "startLine": 132,
        "startChar": 42,
        "endLine": 132,
        "endChar": 47
      },
      "revId": "25bb8a96da03beb06d78ea1f49c45abe2bdf803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3053e4f0_c995b269",
        "filename": "src/compiler/wasm-inlining.cc",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-09-07T16:43:09Z",
      "side": 1,
      "message": "Again I\u0027d prefer return_inputs.size().",
      "range": {
        "startLine": 134,
        "startChar": 37,
        "endLine": 134,
        "endChar": 53
      },
      "revId": "25bb8a96da03beb06d78ea1f49c45abe2bdf803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e15e3d9_7b99c5e0",
        "filename": "src/compiler/wasm-inlining.cc",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2021-09-10T03:37:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3053e4f0_c995b269",
      "range": {
        "startLine": 134,
        "startChar": 37,
        "endLine": 134,
        "endChar": 53
      },
      "revId": "25bb8a96da03beb06d78ea1f49c45abe2bdf803c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}