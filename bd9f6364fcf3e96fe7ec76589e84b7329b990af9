{
  "comments": [
    {
      "key": {
        "uuid": "e77e6862_263b90f1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-04-08T11:47:36Z",
      "side": 1,
      "message": "on Chromium",
      "revId": "bd9f6364fcf3e96fe7ec76589e84b7329b990af9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "810a2f4f_948091a0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1318771
      },
      "writtenOn": "2019-04-09T15:32:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e77e6862_263b90f1",
      "revId": "bd9f6364fcf3e96fe7ec76589e84b7329b990af9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7290d5f_55ef03d5",
        "filename": "src/wasm/wasm-code-manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 421,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-04-08T11:47:36Z",
      "side": 1,
      "message": "Is the exception for wasm code needed, or could we just check for \n\n win64_unwindinfo::CanRegisterUnwindInfoForNonABICompliantCodeRange\n\nhere as elsewhere?",
      "revId": "bd9f6364fcf3e96fe7ec76589e84b7329b990af9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "142d98c9_c46b71ee",
        "filename": "src/wasm/wasm-code-manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 421,
      "author": {
        "id": 1318771
      },
      "writtenOn": "2019-04-09T15:32:40Z",
      "side": 1,
      "message": "I added the check here only for wasm to keep the behaviour exactly consistent with the current behaviour of Crashpad. Currently Crashpad is only notified of code ranges created for isolates, not for wasm modules.\n\nSo:\n- before we update the Chromium code to use the new V8 api, V8 will run with FLAG_win64_unwinding_info \u003d\u003d false and will not do anything, while Crashpad will keep registering its own unwind data for exception handling\n- after we merge the Chromium CL https://chromium-review.googlesource.com/c/chromium/src/+/1474703/ Crashpad will call v8::SetUnhandledExceptionCallback registering its own unwind data for exception handling; V8 will still run with FLAG_win64_unwinding_info \u003d\u003d false but it will only register unwind data for exception handling and only for isolate code ranges.\n- then we will remove the FLAG_win64_unwinding_info and full unwind data will be generated for stack unwinding.",
      "parentUuid": "a7290d5f_55ef03d5",
      "revId": "bd9f6364fcf3e96fe7ec76589e84b7329b990af9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdfd459d_b60f7ec0",
        "filename": "src/wasm/wasm-code-manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 421,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-04-10T08:02:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "142d98c9_c46b71ee",
      "revId": "bd9f6364fcf3e96fe7ec76589e84b7329b990af9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}