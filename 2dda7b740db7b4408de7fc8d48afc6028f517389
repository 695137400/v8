{
  "comments": [
    {
      "key": {
        "uuid": "a94ff85d_544f3507",
        "filename": "src/heap/array-buffer-tracker-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2018-09-11T12:35:00Z",
      "side": 1,
      "message": "Instead of having those mode we could also update the counters in ArrayBufferTracker. The difference would be that the updates are then distributed among two classes (ArrayBufferTracker and LocalArrayBufferTracker). WDYT?",
      "range": {
        "startLine": 100,
        "startChar": 30,
        "endLine": 100,
        "endChar": 33
      },
      "revId": "2dda7b740db7b4408de7fc8d48afc6028f517389",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbbb13de_1b07c03f",
        "filename": "src/heap/array-buffer-tracker-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-09-11T13:18:24Z",
      "side": 1,
      "message": "I don\u0027t have preference here. Ideally we would always update counters in Add \u0026 Remove, which would guarantee the counter consistency.\n\nSince it is already broken in the Process function above, we can either use mode or move update to ABT.",
      "parentUuid": "a94ff85d_544f3507",
      "range": {
        "startLine": 100,
        "startChar": 30,
        "endLine": 100,
        "endChar": 33
      },
      "revId": "2dda7b740db7b4408de7fc8d48afc6028f517389",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b0ecd91_b01d9190",
        "filename": "src/heap/array-buffer-tracker.cc",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2018-09-11T12:35:00Z",
      "side": 1,
      "message": "This is the expensive case where we copied the buffer. It is also the most expensive case for counter updates.\n\nThe other cases for counters:\n- live: noop\n- dead: batch decrement on line 68.",
      "range": {
        "startLine": 36,
        "startChar": 25,
        "endLine": 36,
        "endChar": 37
      },
      "revId": "2dda7b740db7b4408de7fc8d48afc6028f517389",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5818d3f3_12ca8e39",
        "filename": "src/heap/array-buffer-tracker.cc",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-09-11T13:18:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2b0ecd91_b01d9190",
      "range": {
        "startLine": 36,
        "startChar": 25,
        "endLine": 36,
        "endChar": 37
      },
      "revId": "2dda7b740db7b4408de7fc8d48afc6028f517389",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54036728_5d6c1827",
        "filename": "src/heap/heap.h",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2018-09-11T12:35:00Z",
      "side": 1,
      "message": "Enum class would require static_cast for all array accessors.",
      "range": {
        "startLine": 210,
        "startChar": 5,
        "endLine": 210,
        "endChar": 29
      },
      "revId": "2dda7b740db7b4408de7fc8d48afc6028f517389",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "402ea36c_125fbe3d",
        "filename": "src/heap/heap.h",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-09-11T13:18:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "54036728_5d6c1827",
      "range": {
        "startLine": 210,
        "startChar": 5,
        "endLine": 210,
        "endChar": 29
      },
      "revId": "2dda7b740db7b4408de7fc8d48afc6028f517389",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd4ff144_6c88597e",
        "filename": "src/heap/spaces-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 229,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-09-11T13:18:24Z",
      "side": 1,
      "message": "Check for overflow?",
      "range": {
        "startLine": 229,
        "startChar": 2,
        "endLine": 229,
        "endChar": 52
      },
      "revId": "2dda7b740db7b4408de7fc8d48afc6028f517389",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d96d5242_991aee89",
        "filename": "src/heap/spaces-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 238,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2018-09-11T13:18:24Z",
      "side": 1,
      "message": "What about Space::MoveExternalBackingStoreBytes(...) instead of having kDoNotNotifyHeap mode?",
      "range": {
        "startLine": 231,
        "startChar": 3,
        "endLine": 238,
        "endChar": 76
      },
      "revId": "2dda7b740db7b4408de7fc8d48afc6028f517389",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}