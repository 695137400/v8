{
  "comments": [
    {
      "key": {
        "uuid": "c6361e8f_f06381a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-07-13T13:07:27Z",
      "side": 1,
      "message": "Dominik PTAL at src/handles\nGeorg PTAL at the rest",
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bef5d683_8161e9b1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2020-07-13T15:44:02Z",
      "side": 1,
      "message": "src/heap, src/handles LGTM!",
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24481b6a_eff8b903",
        "filename": "src/codegen/optimized-compilation-info.h",
        "patchSetId": 13
      },
      "lineNbr": 224,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-07-13T16:15:00Z",
      "side": 1,
      "message": "Since this is not merely a getter, let\u0027s call it DetachPersistentHandles or similar.",
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f0f3a55_4ba9a109",
        "filename": "src/codegen/optimized-compilation-info.h",
        "patchSetId": 13
      },
      "lineNbr": 224,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-07-13T16:53:04Z",
      "side": 1,
      "message": "Done. Will update the name when I upload a new patchset.",
      "parentUuid": "24481b6a_eff8b903",
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "966d2471_b6b05e4f",
        "filename": "src/compiler/js-heap-broker.h",
        "patchSetId": 13
      },
      "lineNbr": 215,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-07-13T13:07:27Z",
      "side": 1,
      "message": "At the moment, we are creating all of our persistent handles in the main thread. If we start creating persistent handles in the background thread, this would need to be updated to:\n\nif (local_heap_ !\u003d nullptr) {\n  return local_heap_-\u003eNewPersistentHandle(obj);\n} else {\n  return ph_-\u003eNewHandle(obj);\n}",
      "range": {
        "startLine": 215,
        "startChar": 4,
        "endLine": 215,
        "endChar": 31
      },
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d60d3bfc_5124924f",
        "filename": "src/compiler/js-heap-broker.h",
        "patchSetId": 13
      },
      "lineNbr": 215,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-07-13T16:15:00Z",
      "side": 1,
      "message": "They seem to be equivalent given that PersistentHandles object already exists.",
      "parentUuid": "966d2471_b6b05e4f",
      "range": {
        "startLine": 215,
        "startChar": 4,
        "endLine": 215,
        "endChar": 31
      },
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5ac6b8b_82316f38",
        "filename": "src/compiler/js-heap-broker.h",
        "patchSetId": 13
      },
      "lineNbr": 215,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-07-13T16:53:04Z",
      "side": 1,
      "message": "Wouldn\u0027t the ph_ be invalidated iff local_heap_ !\u003d nullptr?\nWe do a std::move of the persistent handles container when we create the LocalHeap. Then, if we want to create PersistentHandles in the background thread (when the LocalHeap is active) we have to do it through the LocalHeap.\n\nThe \"local_heap_ !\u003d nullptr\" case is irrelevant to this particular change, but it will be used in follow-ups when we start passing Handles from the background to the main thread.",
      "parentUuid": "d60d3bfc_5124924f",
      "range": {
        "startLine": 215,
        "startChar": 4,
        "endLine": 215,
        "endChar": 31
      },
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4edd766d_f08b7f0f",
        "filename": "src/compiler/js-heap-broker.h",
        "patchSetId": 13
      },
      "lineNbr": 215,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-07-13T17:12:13Z",
      "side": 1,
      "message": "Yes you\u0027re right, ignore my comment.",
      "parentUuid": "a5ac6b8b_82316f38",
      "range": {
        "startLine": 215,
        "startChar": 4,
        "endLine": 215,
        "endChar": 31
      },
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc543141_c296df8c",
        "filename": "src/compiler/js-heap-broker.h",
        "patchSetId": 13
      },
      "lineNbr": 277,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2020-07-13T15:44:02Z",
      "side": 1,
      "message": "It might be nice to make this std::unique_ptr\u003cLocalHeap\u003e as well?",
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a84e393_45cdd918",
        "filename": "src/compiler/js-heap-broker.h",
        "patchSetId": 13
      },
      "lineNbr": 277,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-07-13T15:46:17Z",
      "side": 1,
      "message": "Ideally LocalHeap is stack-allocated so that it exists only within a task. Otherwise we might get subtle bugs when local heap is created on one thread and then used on another.",
      "parentUuid": "fc543141_c296df8c",
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37c79634_27a57728",
        "filename": "src/compiler/js-heap-broker.h",
        "patchSetId": 13
      },
      "lineNbr": 277,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-07-13T15:54:35Z",
      "side": 1,
      "message": "Another alternative is having \"base::Optional\u003cLocalHeap\u003e\" which would get rid of the raw pointer. We would use emplace/reset instead of new/delete",
      "parentUuid": "9a84e393_45cdd918",
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bda7cc04_06c0d20f",
        "filename": "src/compiler/js-heap-broker.h",
        "patchSetId": 13
      },
      "lineNbr": 277,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-07-13T17:13:45Z",
      "side": 1,
      "message": "SGTM",
      "parentUuid": "37c79634_27a57728",
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e10eaa4_dd61ce87",
        "filename": "src/compiler/js-heap-broker.h",
        "patchSetId": 13
      },
      "lineNbr": 277,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-07-14T10:02:45Z",
      "side": 1,
      "message": "Changed it to base::Optional\u003cLocalHeap\u003e.",
      "parentUuid": "bda7cc04_06c0d20f",
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a47067f_c00a89e7",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 13
      },
      "lineNbr": 1143,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-07-13T16:15:00Z",
      "side": 1,
      "message": "So the PersistentHandles container is owned\nfirst by OptimizedCompilationInfo,\nthen by JSHeapBroker,\nthen by LocalHeap,\nthen again by JSHeapBroker,\nwhich gets destroyed when PipelineData gets destroyed when e.g. PipelineCompilationJob gets destroyed. Maybe complex enough to warrant a comment somewhere.",
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8224ec90_2fcad903",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 13
      },
      "lineNbr": 1143,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-07-13T16:53:04Z",
      "side": 1,
      "message": "That is correct, with the added extra complexity that the PersistentHandles container goes from main thread to background thread, and back to main thread.\n\nWhere do you think we should add this? Maybe on OptimizedCompilationInfo since it is the one that is responsible for creating this member?",
      "parentUuid": "2a47067f_c00a89e7",
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d6ecc85_64cf8767",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 13
      },
      "lineNbr": 1143,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-07-13T17:12:13Z",
      "side": 1,
      "message": "Fine with me.",
      "parentUuid": "8224ec90_2fcad903",
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8199995_552d4b61",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 13
      },
      "lineNbr": 1143,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-07-14T10:02:45Z",
      "side": 1,
      "message": "Done. Added a similar comment in the design doc too",
      "parentUuid": "0d6ecc85_64cf8767",
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2cae9ddb_ae36bc42",
        "filename": "src/handles/persistent-handles.h",
        "patchSetId": 13
      },
      "lineNbr": 37,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-07-13T16:15:00Z",
      "side": 1,
      "message": "I\u0027m confused about this. We won\u0027t be parked in general when we want to use this function, right?",
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d28a301_161d32dd",
        "filename": "src/handles/persistent-handles.h",
        "patchSetId": 13
      },
      "lineNbr": 37,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-07-13T16:17:13Z",
      "side": 1,
      "message": "You\u0027re right, it should be called CheckOwnerIsNotParked (my bad).",
      "parentUuid": "2cae9ddb_ae36bc42",
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3684491_1b31c674",
        "filename": "src/handles/persistent-handles.h",
        "patchSetId": 13
      },
      "lineNbr": 37,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-07-13T16:53:04Z",
      "side": 1,
      "message": "I can change this as a drive-by on this commit if you want Ulan.",
      "parentUuid": "1d28a301_161d32dd",
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87b1f3cd_d55f144f",
        "filename": "src/handles/persistent-handles.h",
        "patchSetId": 13
      },
      "lineNbr": 37,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-07-13T17:16:31Z",
      "side": 1,
      "message": "That would be great, thanks!",
      "parentUuid": "c3684491_1b31c674",
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f418389f_6e07923d",
        "filename": "src/handles/persistent-handles.h",
        "patchSetId": 13
      },
      "lineNbr": 37,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-07-14T10:02:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "87b1f3cd_d55f144f",
      "revId": "b02423f54d422f3e4105f98343843a3d20423238",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}