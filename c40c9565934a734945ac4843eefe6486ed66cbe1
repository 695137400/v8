{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "11c83627_3d61cf51",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1288325
      },
      "writtenOn": "2022-07-04T04:35:19Z",
      "side": 1,
      "message": "PTAL, my understanding is that the failed access callback is supposed to throw, but in certain cases chromium doesn\u0027t throw in its callback (see the chromium bug referenced in the CL description). My initial thought is that V8 could return (and sort of make the operation a noop) in this case, because that\u0027s also how normal property accesses are handled. Though it might also make sense to enforce a throw to avoid spreading the quirky behaviors to private properties.",
      "revId": "c40c9565934a734945ac4843eefe6486ed66cbe1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "303bd4e4_10f2deb0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1288325
      },
      "writtenOn": "2022-07-04T04:38:34Z",
      "side": 1,
      "message": "For reference, chromium\u0027s callback returns without throwing here: https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/bindings/core/v8/binding_security.cc;l\u003d497;drc\u003df1a93e5d28bef5c70d5552758d7aa6b85bc54418 which can happen with a window object like this:\n\n  var f \u003d document.getElementById(\u0027xxx\u0027);\n  var detachedWindow \u003d f.contentWindow;\n  f.parentNode.removeChild(f);",
      "parentUuid": "11c83627_3d61cf51",
      "revId": "c40c9565934a734945ac4843eefe6486ed66cbe1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "febfd5db_4c84a310",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2022-07-04T07:47:47Z",
      "side": 1,
      "message": "Thanks for adding these! This area is fairly tricky.\nJust one comment about interceptors.",
      "revId": "c40c9565934a734945ac4843eefe6486ed66cbe1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f36dbd2_7e33c6f1",
        "filename": "src/ic/ic.cc",
        "patchSetId": 5
      },
      "lineNbr": 1859,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2022-07-04T07:47:47Z",
      "side": 1,
      "message": "isolate()-\u003efactory()-\u003eundefined_value()",
      "revId": "c40c9565934a734945ac4843eefe6486ed66cbe1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "593d419a_b43e1ee1",
        "filename": "src/objects/js-objects.cc",
        "patchSetId": 5
      },
      "lineNbr": 1203,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2022-07-04T07:47:47Z",
      "side": 1,
      "message": "We shouldn\u0027t actually get here since Interceptor is skipped if GetName()-\u003eIsPrivateName? \n\nI guess cached properties can, but there\u0027s no interceptor in this case so I don\u0027t really think that matters. Can this be turned into a DCHECK?",
      "revId": "c40c9565934a734945ac4843eefe6486ed66cbe1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2353648c_811241de",
        "filename": "src/objects/js-objects.cc",
        "patchSetId": 5
      },
      "lineNbr": 1203,
      "author": {
        "id": 1288325
      },
      "writtenOn": "2022-07-04T14:33:01Z",
      "side": 1,
      "message": "They can be reached from the `JSObject::*WithFailedAccessCheck()` methods which are generally called from the runtime methods to handle `LookupIterator::ACCESS_CHECK` states when the access check fails, these methods just call `it-\u003eGetInterceptorForFailedAccessCheck()` instead of using `it-\u003eNext()` to get the interceptors so they do not skip interceptors for private names.\n\nOn a second thought though I wonder if it would be better to just modify `GetInterceptorForFailedAccessCheck()` to return null for private names (I am not 100% sure about what the `if (interceptor.is_null())` branches in `JSObject::*WithFailedAccessCheck()` are doing, but it seems these would all be skipped for private names because `AllCanRead()/AllCanWrite()` should always return false for private names?).",
      "parentUuid": "593d419a_b43e1ee1",
      "revId": "c40c9565934a734945ac4843eefe6486ed66cbe1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "594d6a97_66ec1845",
        "filename": "src/objects/js-objects.cc",
        "patchSetId": 5
      },
      "lineNbr": 1203,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2022-07-04T14:59:32Z",
      "side": 1,
      "message": "Sounds good to me! Always returning false in `AllCan..` sgtm too.",
      "parentUuid": "2353648c_811241de",
      "revId": "c40c9565934a734945ac4843eefe6486ed66cbe1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "587fc211_bb291fcb",
        "filename": "src/objects/js-objects.cc",
        "patchSetId": 5
      },
      "lineNbr": 1240,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2022-07-04T07:47:47Z",
      "side": 1,
      "message": "same here",
      "revId": "c40c9565934a734945ac4843eefe6486ed66cbe1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}