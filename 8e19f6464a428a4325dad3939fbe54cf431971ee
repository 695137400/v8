{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1a595afd_e36dcd24",
        "filename": "src/heap/cppgc/marking-verifier.cc",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2023-01-24T10:52:35Z",
      "side": 1,
      "message": "You could rename IteratePointersUnsafe to IteratePointersUntilMarker, and have it get the marker directly from the stack object instead of passing it in.\n(I suppose then you wouldn\u0027t even need to expose GetStackMarker)",
      "range": {
        "startLine": 66,
        "startChar": 19,
        "endLine": 66,
        "endChar": 40
      },
      "revId": "8e19f6464a428a4325dad3939fbe54cf431971ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c027f0d1_884a2a50",
        "filename": "src/heap/cppgc/marking-verifier.cc",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2023-01-24T11:32:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a595afd_e36dcd24",
      "range": {
        "startLine": 66,
        "startChar": 19,
        "endLine": 66,
        "endChar": 40
      },
      "revId": "8e19f6464a428a4325dad3939fbe54cf431971ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05599a2c_82982b0a",
        "filename": "src/heap/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 1695,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2023-01-24T10:52:35Z",
      "side": 1,
      "message": "nit: I think `SetStackMarker` should be cheap. Could we just always call it and drop all the conditions around it?",
      "range": {
        "startLine": 1695,
        "startChar": 7,
        "endLine": 1695,
        "endChar": 44
      },
      "revId": "8e19f6464a428a4325dad3939fbe54cf431971ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c16d77cf_4c888547",
        "filename": "src/heap/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 1695,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2023-01-24T11:32:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "05599a2c_82982b0a",
      "range": {
        "startLine": 1695,
        "startChar": 7,
        "endLine": 1695,
        "endChar": 44
      },
      "revId": "8e19f6464a428a4325dad3939fbe54cf431971ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16b628f2_d8026df3",
        "filename": "src/heap/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 4840,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2023-01-24T10:52:35Z",
      "side": 1,
      "message": "I recall we had issues with the ScanStackMode version before. Specifically, we concluded that for clients we will always need to scan the stack (since there stack state is unknown). So if stack_mode here is kNone, you wouldn\u0027t know whether to pass to the clients kComplete for marking or kTopOfStack for verifying.\nI think we need to have two arguments, one for whether we need to scan all or just from the marker, and one for whether there\u0027s a stack. That way the first argument will be passed as is and the second will be hardcoded to a non-empty stack.",
      "range": {
        "startLine": 4840,
        "startChar": 62,
        "endLine": 4840,
        "endChar": 67
      },
      "revId": "8e19f6464a428a4325dad3939fbe54cf431971ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2257627c_c1caf390",
        "filename": "src/heap/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 4840,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2023-01-24T10:59:38Z",
      "side": 1,
      "message": "Looking at it again now, I think I was wrong. We can only get kNone in stack_mode when we also don\u0027t want it for the clients. In that case we could just pass stack_mode as is to the clients and get the desired behavior.",
      "parentUuid": "16b628f2_d8026df3",
      "range": {
        "startLine": 4840,
        "startChar": 62,
        "endLine": 4840,
        "endChar": 67
      },
      "revId": "8e19f6464a428a4325dad3939fbe54cf431971ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bebd6180_a4a1cb9a",
        "filename": "src/heap/heap.cc",
        "patchSetId": 2
      },
      "lineNbr": 4840,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2023-01-24T11:32:12Z",
      "side": 1,
      "message": "Just for the record, CSS for client isolates is not expected to work correctly yet. There was crrev.com/c/4110954 but it\u0027s obsolete after we went back to the stack trampoline. This line just makes sure we disable CSS for all client isolates.",
      "parentUuid": "2257627c_c1caf390",
      "range": {
        "startLine": 4840,
        "startChar": 62,
        "endLine": 4840,
        "endChar": 67
      },
      "revId": "8e19f6464a428a4325dad3939fbe54cf431971ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}