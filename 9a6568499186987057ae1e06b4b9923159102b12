{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "70503baf_93c51f0b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1345975
      },
      "writtenOn": "2024-03-26T09:30:05Z",
      "side": 1,
      "message": "PTAL",
      "revId": "9a6568499186987057ae1e06b4b9923159102b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23ce48c4_d1d39255",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1345975
      },
      "writtenOn": "2024-03-26T10:16:04Z",
      "side": 1,
      "message": "PTAL",
      "revId": "9a6568499186987057ae1e06b4b9923159102b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "649dd5cb_d5040f97",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 8718,
      "author": {
        "id": 1345975
      },
      "writtenOn": "2024-03-26T09:38:54Z",
      "side": 1,
      "message": "Btw, do you know if the C API tests are expected to run with the usual variants?\nWhen I execute the test runner locally with `--variant\u003dturboshaft` (which implies this flag), 0 tests get executed, so I think the new code won\u0027t receive coverage on the try bots.\nI was able to run the tests locally with `--extra-flags\u003d--turboshaft-wasm-wrappers` though.",
      "range": {
        "startLine": 8715,
        "startChar": 0,
        "endLine": 8718,
        "endChar": 0
      },
      "revId": "9a6568499186987057ae1e06b4b9923159102b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d20aad79_655e7842",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 8718,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2024-03-26T11:41:36Z",
      "side": 1,
      "message": "I don\u0027t know. You could ask machenbach@ about this.",
      "parentUuid": "649dd5cb_d5040f97",
      "range": {
        "startLine": 8715,
        "startChar": 0,
        "endLine": 8718,
        "endChar": 0
      },
      "revId": "9a6568499186987057ae1e06b4b9923159102b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9b3503a_fe08abaa",
        "filename": "src/wasm/wrappers.cc",
        "patchSetId": 1
      },
      "lineNbr": 684,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2024-03-26T11:41:36Z",
      "side": 1,
      "message": "Maybe add a comment that this is the instance",
      "revId": "9a6568499186987057ae1e06b4b9923159102b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c98b9a38_54dcf1a6",
        "filename": "src/wasm/wrappers.cc",
        "patchSetId": 1
      },
      "lineNbr": 684,
      "author": {
        "id": 1345975
      },
      "writtenOn": "2024-03-26T12:54:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9b3503a_fe08abaa",
      "revId": "9a6568499186987057ae1e06b4b9923159102b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c80dc7a_d3ce276f",
        "filename": "src/wasm/wrappers.cc",
        "patchSetId": 1
      },
      "lineNbr": 716,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2024-03-26T11:41:36Z",
      "side": 1,
      "message": "You could probably use `LoadTaggedField`, could you not?\n\nSame below.",
      "range": {
        "startLine": 716,
        "startChar": 11,
        "endLine": 716,
        "endChar": 15
      },
      "revId": "9a6568499186987057ae1e06b4b9923159102b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0251a9c6_5f0cbbd0",
        "filename": "src/wasm/wrappers.cc",
        "patchSetId": 1
      },
      "lineNbr": 716,
      "author": {
        "id": 1345975
      },
      "writtenOn": "2024-03-26T12:54:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c80dc7a_d3ce276f",
      "range": {
        "startLine": 716,
        "startChar": 11,
        "endLine": 716,
        "endChar": 15
      },
      "revId": "9a6568499186987057ae1e06b4b9923159102b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f0ecc3c_35444164",
        "filename": "src/wasm/wrappers.cc",
        "patchSetId": 1
      },
      "lineNbr": 780,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2024-03-26T11:41:36Z",
      "side": 1,
      "message": "Doesn\u0027t this parameter mean how many stack parameters have to be popped? How can this always be 0? What if parameters are passed to the wrapper over the stack, how do they get popped?",
      "range": {
        "startLine": 780,
        "startChar": 16,
        "endLine": 780,
        "endChar": 36
      },
      "revId": "9a6568499186987057ae1e06b4b9923159102b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f833e19b_d77587a4",
        "filename": "src/wasm/wrappers.cc",
        "patchSetId": 1
      },
      "lineNbr": 780,
      "author": {
        "id": 1345975
      },
      "writtenOn": "2024-03-26T12:54:33Z",
      "side": 1,
      "message": "The code generator already knows the param slot count from the call descriptor and pops it [1].\nI believe that this is an optional *additional* pop count.\n\n[1] https://source.chromium.org/chromium/chromium/src/+/main:v8/src/compiler/backend/x64/code-generator-x64.cc;drc\u003dc49db3ab8548eef54606bc42a8e4aa36b153d3c0;l\u003d7201",
      "parentUuid": "1f0ecc3c_35444164",
      "range": {
        "startLine": 780,
        "startChar": 16,
        "endLine": 780,
        "endChar": 36
      },
      "revId": "9a6568499186987057ae1e06b4b9923159102b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9540a22a_bf924b7d",
        "filename": "src/wasm/wrappers.cc",
        "patchSetId": 1
      },
      "lineNbr": 1315,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2024-03-26T11:41:36Z",
      "side": 1,
      "message": "So far `SafeStore` is only used for untagged parameters. Maybe it\u0027s better to not support tagged parameters at all so far, and only add support once it is used with tagged parameters. Otherwise we add untested code.",
      "revId": "9a6568499186987057ae1e06b4b9923159102b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "967ec1b3_f11e22b7",
        "filename": "src/wasm/wrappers.cc",
        "patchSetId": 1
      },
      "lineNbr": 1315,
      "author": {
        "id": 1345975
      },
      "writtenOn": "2024-03-26T12:54:33Z",
      "side": 1,
      "message": "The code is not untested:\nhttps://source.chromium.org/chromium/chromium/src/+/main:v8/test/wasm-api-tests/hostref.cc;l\u003d1;drc\u003dc49db3ab8548eef54606bc42a8e4aa36b153d3c0\n\nTagged params are not GC safe according to a comment above though, is that what you are referring to? I don\u0027t know how well documented this is for users, but as far as this test is concerned we don\u0027t allocate in the C call so it looks fine.",
      "parentUuid": "9540a22a_bf924b7d",
      "revId": "9a6568499186987057ae1e06b4b9923159102b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9467b500_28c1671d",
        "filename": "src/wasm/wrappers.cc",
        "patchSetId": 1
      },
      "lineNbr": 1344,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2024-03-26T11:41:36Z",
      "side": 1,
      "message": "Same here",
      "revId": "9a6568499186987057ae1e06b4b9923159102b12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}