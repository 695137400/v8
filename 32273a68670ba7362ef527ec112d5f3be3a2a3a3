{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7ef86e19_4b9565d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2024-02-16T10:17:47Z",
      "side": 1,
      "message": "Matthias: PTAL.\n\nDarius: FYI.",
      "revId": "32273a68670ba7362ef527ec112d5f3be3a2a3a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84d4fa36_207f4be1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2024-02-16T10:40:23Z",
      "side": 1,
      "message": "LGTM with one comment",
      "revId": "32273a68670ba7362ef527ec112d5f3be3a2a3a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46982036_dabec21e",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3315,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-02-16T10:27:11Z",
      "side": 1,
      "message": "As far as I can see, IsArrayNewSegment is only called from a StringNewWtf8ArrayImpl, and the case where `array` is Invalid is not well handled on all paths. Maybe consider moving this `if (!array.valid())` check over there, and DCHECK here that `array` is valid?",
      "range": {
        "startLine": 3315,
        "startChar": 4,
        "endLine": 3315,
        "endChar": 70
      },
      "revId": "32273a68670ba7362ef527ec112d5f3be3a2a3a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97a6a433_f90051cf",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3315,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2024-02-16T10:40:23Z",
      "side": 1,
      "message": "I think, it\u0027s handled well (we call some more assembler stuff but that should be fine as it doesn\u0027t do anything in unreachable code.\nI\u0027d propose to change this to:\n```suggestion\n  DCHECK_IMPLIES(!array.valid(), __ generating_unreachable_operations());\n  if (__ generating_unreachable_operations()) return false;\n```",
      "parentUuid": "46982036_dabec21e",
      "range": {
        "startLine": 3315,
        "startChar": 4,
        "endLine": 3315,
        "endChar": 70
      },
      "revId": "32273a68670ba7362ef527ec112d5f3be3a2a3a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45f3fb1a_5fa03741",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3315,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-02-16T11:01:10Z",
      "side": 1,
      "message": "I\u0027m not familiar with what can happen exactly or not, but the following call stack looks possible:\n\nStringNewWtf8ArrayImpl \u003eCallBuiltinThroughJumptable \u003e CallAndMaybeCatchException \u003e MaybeSetPositionToParent\n\nAnd then MaybeSetPositionToParent does `__ output_graph().operation_origins()[call]`, where `call` will be OpIndex::Invalid in unreachable code, leading to an out-of-bound access into operation_origins (or a segfault).\n\n(also, I\u0027m assuming that \"unreachable code\" means, as your comment suggests, \"generating_unreachable_operations\"; but if that\u0027s not the case, then CallAndMaybeCatchException can also generate a Call with Invalid inputs, which is wrong, so +1 for your DCHECK_IMPLIES)",
      "parentUuid": "97a6a433_f90051cf",
      "range": {
        "startLine": 3315,
        "startChar": 4,
        "endLine": 3315,
        "endChar": 70
      },
      "revId": "32273a68670ba7362ef527ec112d5f3be3a2a3a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e2b4b74_26055f2b",
        "filename": "src/wasm/turboshaft-graph-interface.cc",
        "patchSetId": 1
      },
      "lineNbr": 3315,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2024-02-16T11:23:00Z",
      "side": 1,
      "message": "Done. (Going with Matthias\u0027 suggestion.)\n\nThe test case is already exercising the `else` branch below, so things in there appear to be robust towards unreachable situations? (We can always follow up if we find more cases that need fixing.)",
      "parentUuid": "97a6a433_f90051cf",
      "range": {
        "startLine": 3315,
        "startChar": 4,
        "endLine": 3315,
        "endChar": 70
      },
      "revId": "32273a68670ba7362ef527ec112d5f3be3a2a3a3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}