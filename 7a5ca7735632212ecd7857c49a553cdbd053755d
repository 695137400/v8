{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6bef2b8a_2fee757a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2023-05-16T07:31:47Z",
      "side": 1,
      "message": "PTAL",
      "revId": "7a5ca7735632212ecd7857c49a553cdbd053755d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8775af1_eebaa38c",
        "filename": "tools/testrunner/base_runner.py",
        "patchSetId": 6
      },
      "lineNbr": 558,
      "author": {
        "id": 1524899
      },
      "writtenOn": "2023-05-16T08:32:30Z",
      "side": 1,
      "message": "I think this block needs to move to the end if logic should stay untouched.",
      "range": {
        "startLine": 554,
        "startChar": 0,
        "endLine": 558,
        "endChar": 17
      },
      "revId": "7a5ca7735632212ecd7857c49a553cdbd053755d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17a60b2e_f896ad40",
        "filename": "tools/testrunner/base_runner.py",
        "patchSetId": 6
      },
      "lineNbr": 558,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2023-05-16T08:50:14Z",
      "side": 1,
      "message": "From a boolean p-o-v it should not make a difference, right? Once the old var was True, it can\u0027t become False, hence we can always immediately return on True.\n\nBut the methods called below might have side affects. Basically all other added return statements change the logic for such side effects as well.\n\nI dare change the logic a bit and assume that the methods are side-effect free.",
      "parentUuid": "c8775af1_eebaa38c",
      "range": {
        "startLine": 554,
        "startChar": 0,
        "endLine": 558,
        "endChar": 17
      },
      "revId": "7a5ca7735632212ecd7857c49a553cdbd053755d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cabaa6af_7f108be8",
        "filename": "tools/testrunner/base_runner.py",
        "patchSetId": 6
      },
      "lineNbr": 558,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2023-05-16T09:01:11Z",
      "side": 1,
      "message": "As discussed offline this indeed changes logic a bit. I still keep it in the new way as it shouldn\u0027t make a difference. The --noenableX flags are all passed in testing on intel hardware. This code path is never mixed with testing mips or other architectures. Also the different if-branches for different arch values below are all exclusive (we enter only one of the ifs).",
      "parentUuid": "17a60b2e_f896ad40",
      "range": {
        "startLine": 554,
        "startChar": 0,
        "endLine": 558,
        "endChar": 17
      },
      "revId": "7a5ca7735632212ecd7857c49a553cdbd053755d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97f9312a_9d763997",
        "filename": "tools/testrunner/local/statusfile.py",
        "patchSetId": 6
      },
      "lineNbr": 167,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2023-05-16T07:31:47Z",
      "side": 1,
      "message": "Tested this and the other place locally by removing some entries from BUILD.gn, building and testing.",
      "range": {
        "startLine": 167,
        "startChar": 36,
        "endLine": 167,
        "endChar": 69
      },
      "revId": "7a5ca7735632212ecd7857c49a553cdbd053755d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "7a5ca7735632212ecd7857c49a553cdbd053755d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "7a5ca7735632212ecd7857c49a553cdbd053755d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "7a5ca7735632212ecd7857c49a553cdbd053755d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "7a5ca7735632212ecd7857c49a553cdbd053755d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}