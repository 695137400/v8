{
  "comments": [
    {
      "key": {
        "uuid": "73ab39a6_89a8da2b",
        "filename": "src/builtins/builtins-internal-gen.cc",
        "patchSetId": 8
      },
      "lineNbr": 924,
      "author": {
        "id": 1115851
      },
      "writtenOn": "2018-02-05T18:24:12Z",
      "side": 1,
      "message": "It looks to me like this is entering a context where we weren\u0027t before. This looks suspicious to me, since we\u0027re not always in a context when running microtasks from Blink.",
      "revId": "8e7737cb5811dcb9bc9e125acd9d7d4e0cfcac70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c04a00f6_92ba50b8",
        "filename": "src/isolate.cc",
        "patchSetId": 8
      },
      "lineNbr": 2060,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2018-02-05T19:10:45Z",
      "side": 1,
      "message": "https://chromium-review.googlesource.com/c/v8/v8/+/895528 makes this unsafe in DEBUG builds.\n\nSo, couple options\n\n1) get rid of the DCHECKs and let the caller determine validity with IsSmi checks\n2) keep the DCHECKs and let the caller determine validity before calling by testing status() !\u003d v8::Promise::kPending\n3) remove reactions/result accessors and add `static MaybeHandle\u003cPromiseReaction\u003e Reactions(Handle\u003cJSPromise\u003e);` and something similar for the result?",
      "revId": "8e7737cb5811dcb9bc9e125acd9d7d4e0cfcac70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ccc1672_28cb0e1b",
        "filename": "src/isolate.cc",
        "patchSetId": 8
      },
      "lineNbr": 2060,
      "author": {
        "id": 1183894
      },
      "writtenOn": "2018-02-06T05:42:26Z",
      "side": 1,
      "message": "Great catch. This will not only screw debug builds, but also explains crashes in release builds. Do you have a repro for this case? Because what I\u0027m wondering is how on earth do we hit %DebugPromiseReject with a promise that is already settled?",
      "parentUuid": "c04a00f6_92ba50b8",
      "revId": "8e7737cb5811dcb9bc9e125acd9d7d4e0cfcac70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}