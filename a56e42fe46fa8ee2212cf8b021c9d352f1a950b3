{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ea74a4fe_c2f6cf06",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2022-12-01T10:42:02Z",
      "side": 1,
      "message": "This patchset contains two minor changes:\n\n1. Omer suggested in the CSS design doc that client isolates should always do CSS (unless explicitly disabled for testing). I think that\u0027s correct and was added here.\n\n2. If we disable CSS for testing for the shared heap (or main heap, for shared space) then, during a shared GC, CSS is disabled for all clients.",
      "revId": "a56e42fe46fa8ee2212cf8b021c9d352f1a950b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f31c93a_10a47dce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2022-12-01T11:19:42Z",
      "side": 1,
      "message": "Just the new CSS bot failing, for unrelated reasons.\nPTAL.",
      "revId": "a56e42fe46fa8ee2212cf8b021c9d352f1a950b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e705bf0_fa1a9101",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2022-12-02T12:34:56Z",
      "side": 1,
      "message": "lgtm % comments",
      "revId": "a56e42fe46fa8ee2212cf8b021c9d352f1a950b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91bb3465_67434f79",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2022-12-02T16:23:50Z",
      "side": 1,
      "message": "lgtm",
      "revId": "a56e42fe46fa8ee2212cf8b021c9d352f1a950b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0efab8eb_55bae5c4",
        "filename": "src/heap/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 4705,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2022-12-02T12:34:56Z",
      "side": 1,
      "message": "I just noticed this part. Will we be scanning the stack when doing a GC in a task? That is the one case where we know there is no interesting stack, so we should be able to bailout of stack scanning in that case. If that is already implemented, can you point me to it?",
      "range": {
        "startLine": 4705,
        "startChar": 17,
        "endLine": 4705,
        "endChar": 28
      },
      "revId": "a56e42fe46fa8ee2212cf8b021c9d352f1a950b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f1b0d8c_94a0ff71",
        "filename": "src/heap/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 4705,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2022-12-02T16:23:50Z",
      "side": 1,
      "message": "It\u0027s only implemented for Oilpan via the old emchanism (EmbedderStackScope) [1] afaics.\n\n[1] https://source.chromium.org/chromium/chromium/src/+/main:v8/src/heap/embedder-tracing.cc;drc\u003d0a0e17f61671bb8bfded92b311623256b9e912e7;bpv\u003d1;bpt\u003d1;l\u003d98",
      "parentUuid": "0efab8eb_55bae5c4",
      "range": {
        "startLine": 4705,
        "startChar": 17,
        "endLine": 4705,
        "endChar": 28
      },
      "revId": "a56e42fe46fa8ee2212cf8b021c9d352f1a950b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8da53a4_a3ef3753",
        "filename": "src/heap/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 4705,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2022-12-02T17:45:14Z",
      "side": 1,
      "message": "I think so as well. We should implement it for V8 as well, but it can be a separate followup CL.",
      "parentUuid": "6f1b0d8c_94a0ff71",
      "range": {
        "startLine": 4705,
        "startChar": 17,
        "endLine": 4705,
        "endChar": 28
      },
      "revId": "a56e42fe46fa8ee2212cf8b021c9d352f1a950b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4a6b1c0_ca0ef006",
        "filename": "src/heap/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 4705,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2022-12-05T11:41:52Z",
      "side": 1,
      "message": "I\u0027m not sure I understand, so I\u0027ll leave this unresolved.\n\nBy setting `SkipRoot::kStack` we can disable stack scanning enirely and by setting `SkipRoot::kConservativeStack` we can disable CSS. I suppose the former should be set already in places that stack scanning is not useful, like in GC tasks. If not, we can fix them.\n\nThe only new thing in this CL regarding this is line heap.cc:4849, which enables CSS for client isolates even if it was not requested. Which reminds me that this logic is also required in line heap.cc:4832; I\u0027m adding it there too.",
      "parentUuid": "a8da53a4_a3ef3753",
      "range": {
        "startLine": 4705,
        "startChar": 17,
        "endLine": 4705,
        "endChar": 28
      },
      "revId": "a56e42fe46fa8ee2212cf8b021c9d352f1a950b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cea3b8b_9a2d63da",
        "filename": "src/heap/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 4705,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2022-12-05T12:01:31Z",
      "side": 1,
      "message": "This was not specific to this CL, but more generally for CSS.\nWhen we do a GC in a task we know there is no stack at all, so even the parts that usually do CSS can skip it (i.e. improve performance, no false positives, improve memory consumption).\nWe should (eventually, not in this CL) implement this optimization for V8 (already implemented for Oilpan).",
      "parentUuid": "f4a6b1c0_ca0ef006",
      "range": {
        "startLine": 4705,
        "startChar": 17,
        "endLine": 4705,
        "endChar": 28
      },
      "revId": "a56e42fe46fa8ee2212cf8b021c9d352f1a950b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7321895_81586046",
        "filename": "src/heap/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 4891,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2022-12-02T12:34:56Z",
      "side": 1,
      "message": "Do we need to check both the testing bailout for main_isolate and the one for the current isolate (line 4884 above)?",
      "range": {
        "startLine": 4891,
        "startChar": 28,
        "endLine": 4891,
        "endChar": 76
      },
      "revId": "a56e42fe46fa8ee2212cf8b021c9d352f1a950b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f69112a0_8a2ad484",
        "filename": "src/heap/heap.cc",
        "patchSetId": 7
      },
      "lineNbr": 4891,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2022-12-05T10:00:47Z",
      "side": 1,
      "message": "The motivation here was to have a way to disable CSS entirely during a shared GC. We designed this in this way with Dominik, to avoid introducing a complicated scope that would set the disable flag for all clients (prone to races and inconsistencies, in case a client is added after the scope is introduced).\n\nFor shared heap, the main isolate\u0027s flag can disable CSS entirely (line 4884).\nEach client\u0027s flag can disable CSS for that client only (line 4891). This could be useful for testing and is used in some of the new tests.\n\nFor shared space there is currently no way to disable CSS for the main isolate without disabling it for all clients at the same time. If necessary, we\u0027ll implement this later.",
      "parentUuid": "d7321895_81586046",
      "range": {
        "startLine": 4891,
        "startChar": 28,
        "endLine": 4891,
        "endChar": 76
      },
      "revId": "a56e42fe46fa8ee2212cf8b021c9d352f1a950b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}