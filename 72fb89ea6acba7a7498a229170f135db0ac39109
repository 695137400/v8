{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b8ecac86_3912a0c4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2022-10-25T10:57:35Z",
      "side": 1,
      "message": "Cool, thanks for the explanations. If the sandbox has value to you then lets make it work there as well.",
      "revId": "72fb89ea6acba7a7498a229170f135db0ac39109",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ccf3f6ec_8a760eca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2022-10-26T10:12:29Z",
      "side": 1,
      "message": "Thanks for your active responses, Samuel!\n\nSo we\u0027re gravitating towards properly supporting the sandbox here?",
      "revId": "72fb89ea6acba7a7498a229170f135db0ac39109",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "338e0adf_d5638234",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2022-11-01T14:28:34Z",
      "side": 1,
      "message": "Hi again, I debugged a bit and it looked like object we create from ECL was not fully initialized, so tried adding a Builtin to do the allocation \u0026 initialization. This seems to work: https://chromium-review.googlesource.com/c/v8/v8/+/3997091 except the %DebugPrint fails for all objects created by fast callbacks.\n\nI\u0027m not entirely sure what\u0027s going on, but my initial thought was that the not-fully-initialized comes from the fact that we\u0027re storing the Uint32 handle rather than the full 64-bit pointer. So whenever I change it to store the raw pointer rather than the handle (https://chromium-review.googlesource.com/c/v8/v8/+/3997091/2/src/compiler/effect-control-linearizer.cc#6907), the object seems to be initialized properly.\n\nThe main downside of this solution is that we need a runtime function to call the allocation, and those can\u0027t take arbitrary word64 pointers, so I had to go through a BigInt creation again. So the result is probably not any faster than what you have currently in Deno.\n\nUltimately we should be able to fix your CL and avoid the builtin/runtime overhead completely. Let\u0027s discuss this further in the coming days!",
      "revId": "72fb89ea6acba7a7498a229170f135db0ac39109",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}