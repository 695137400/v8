{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "291d6216_84a143ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2023-04-24T11:18:36Z",
      "side": 1,
      "message": "PTAL, will only land after the branch-cut",
      "revId": "b244defbc00db9f489ee2115512fbbba820a13db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7eb42fa6_cf299b40",
        "filename": "src/heap/heap.cc",
        "patchSetId": 6
      },
      "lineNbr": 3909,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2023-04-24T11:21:35Z",
      "side": 1,
      "message": "Why do we still need to register the object?",
      "range": {
        "startLine": 3909,
        "startChar": 15,
        "endLine": 3909,
        "endChar": 49
      },
      "revId": "b244defbc00db9f489ee2115512fbbba820a13db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f0a362b_a6f5e425",
        "filename": "src/heap/heap.cc",
        "patchSetId": 6
      },
      "lineNbr": 3909,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2023-04-24T11:31:52Z",
      "side": 1,
      "message": "I wanted to see whether this CL sticks first. A subsequent CL would then get rid of registering as well.",
      "parentUuid": "7eb42fa6_cf299b40",
      "range": {
        "startLine": 3909,
        "startChar": 15,
        "endLine": 3909,
        "endChar": 49
      },
      "revId": "b244defbc00db9f489ee2115512fbbba820a13db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ae26250_26e34f96",
        "filename": "src/heap/heap.cc",
        "patchSetId": 6
      },
      "lineNbr": 3909,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2023-04-24T11:41:48Z",
      "side": 1,
      "message": "What do we gain from removing the range but still registering the object? Shouldn\u0027t we be able to check some range already?\n\n(I would avoid the intermediate state as I don\u0027t see what we actually gain here.)",
      "parentUuid": "1f0a362b_a6f5e425",
      "range": {
        "startLine": 3909,
        "startChar": 15,
        "endLine": 3909,
        "endChar": 49
      },
      "revId": "b244defbc00db9f489ee2115512fbbba820a13db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "964844d5_555afad2",
        "filename": "src/heap/heap.cc",
        "patchSetId": 6
      },
      "lineNbr": 3909,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2023-04-24T11:56:07Z",
      "side": 1,
      "message": "The CL felt a bit less risky because we still check whether a slot is valid. But I guess I could remove it in this CL as well.",
      "parentUuid": "8ae26250_26e34f96",
      "range": {
        "startLine": 3909,
        "startChar": 15,
        "endLine": 3909,
        "endChar": 49
      },
      "revId": "b244defbc00db9f489ee2115512fbbba820a13db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b66c64f6_522c9b89",
        "filename": "src/heap/heap.cc",
        "patchSetId": 6
      },
      "lineNbr": 3909,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2023-04-24T12:31:12Z",
      "side": 1,
      "message": "Well, there should be no more slot though because you remove the range (?)\n\nI think this is exactly the part I am missing: What slots would we check for validness?",
      "parentUuid": "964844d5_555afad2",
      "range": {
        "startLine": 3909,
        "startChar": 15,
        "endLine": 3909,
        "endChar": 49
      },
      "revId": "b244defbc00db9f489ee2115512fbbba820a13db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd07dd16_15fc388a",
        "filename": "src/heap/heap.cc",
        "patchSetId": 6
      },
      "lineNbr": 3909,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2023-04-24T12:49:45Z",
      "side": 1,
      "message": "I don\u0027t think you miss anything. We would indeed only filter slots added *after* invalidation because we simply remove all recorded slots in that area. My idea for this CL was to test whether we properly add all slots for the \"new\" object through the regular write barrier after clearing all slots. Not registering objects anymore felt like another step where stuff could potentially go wrong. But maybe that\u0027s not the case. At least tests seemed to have passed for the other CL as well, so we might test that change in here as well.",
      "parentUuid": "b66c64f6_522c9b89",
      "range": {
        "startLine": 3909,
        "startChar": 15,
        "endLine": 3909,
        "endChar": 49
      },
      "revId": "b244defbc00db9f489ee2115512fbbba820a13db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}