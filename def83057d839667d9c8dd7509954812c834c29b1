{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1b4bd561_3a3ff931",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 36
      },
      "lineNbr": 0,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-11-30T09:28:21Z",
      "side": 1,
      "message": "After some discussion with Ulan (and Sara) we\u0027ve decided to take a slightly different approach:\n- Keep include/v8-metrics.h event structs only for externally visible metrics\n- Add a custom v8/d8-only TracingController that supports ETW (this is already supported on the chrome side)\n- Hook into the CodeEvents with a custom ETW provider to propagate the compiled/source information\n\nFuture work (orthogonal to the ETW work):\n- use v8-metrics for all histograms in v8\n- create internal \"v8-metric\" structs for current log events and funnel through a similar interface as the current metrics recorder\n- deduplicate multiple measuring scopes at the same location (RCS, logging, tracing?) if possible\n",
      "revId": "def83057d839667d9c8dd7509954812c834c29b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94a4c1c1_0191c67c",
        "filename": "include/v8-metrics.h",
        "patchSetId": 36
      },
      "lineNbr": 13,
      "author": {
        "id": 1381588
      },
      "writtenOn": "2020-11-18T14:36:50Z",
      "side": 1,
      "message": "nit: if the TODO is removed, the worm should be done. I\u0027d suggest to keep the TODO until the field is removed.",
      "revId": "def83057d839667d9c8dd7509954812c834c29b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ca63bac_dcdb793e",
        "filename": "include/v8-metrics.h",
        "patchSetId": 36
      },
      "lineNbr": 13,
      "author": {
        "id": 1381588
      },
      "writtenOn": "2020-11-18T14:37:31Z",
      "side": 1,
      "message": "Sorry, meant to write work not worm :)",
      "parentUuid": "94a4c1c1_0191c67c",
      "revId": "def83057d839667d9c8dd7509954812c834c29b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10b31803_440ca6a7",
        "filename": "include/v8-metrics.h",
        "patchSetId": 36
      },
      "lineNbr": 13,
      "author": {
        "id": 1418022
      },
      "writtenOn": "2020-11-30T17:57:12Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6ca63bac_dcdb793e",
      "revId": "def83057d839667d9c8dd7509954812c834c29b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33df3404_e61e5cb6",
        "filename": "include/v8-metrics.h",
        "patchSetId": 36
      },
      "lineNbr": 18,
      "author": {
        "id": 1381588
      },
      "writtenOn": "2020-11-18T14:36:50Z",
      "side": 1,
      "message": "This seems to be a very generic name. Could we be more clear about what is measured, especially as opposed to the WasmModuleCompiled and WasmModuleTieredUp events below?",
      "revId": "def83057d839667d9c8dd7509954812c834c29b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ac9811f_cdd8523b",
        "filename": "src/logging/metrics.h",
        "patchSetId": 36
      },
      "lineNbr": 31,
      "author": {
        "id": 1381588
      },
      "writtenOn": "2020-11-18T14:36:50Z",
      "side": 1,
      "message": "Replacing the template by actual implementations increases the binary size for methods that aren\u0027t actually used. The template mechanism guarantees that only those methods which are used are being compiled. If an event does not have the matching method to call (so if it\u0027s not thread-safe) this compilation will fail instead of having an UNREACHABLE which will only be discovered at runtime. So I\u0027m not seeing the benefits of the explicit version implemented here.",
      "revId": "def83057d839667d9c8dd7509954812c834c29b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a3d24b8_890ca016",
        "filename": "src/logging/metrics.h",
        "patchSetId": 36
      },
      "lineNbr": 31,
      "author": {
        "id": 1418022
      },
      "writtenOn": "2020-11-18T18:03:09Z",
      "side": 1,
      "message": "The reasoning behind the explicit implementation is that we call one of AddMainThreadEvent or AddThreadSafeEvent form within the TimedScope.\n\nSince there is no way to determine which kind of event E is being called at compile-time (I think), both versions of AddMainThreadEvent(E event) and AddThreadSafeEvent(E event) need to be defined, even though only the correct one is expected to be called at runtime. Otherwise, we run into a compile-time error for the undefined branch.\n\nI\u0027m open to any other ways to get around this compile-time error, but this is the method I landed on because it preserves the use of macros in v8-metrics.h. Originally, the ADD_MAIN_THREAD_ERROR_EVENT were inside include/v8-metrics.h, but we had to move them out because UNREACHABLE() doesn\u0027t exist in include/.",
      "parentUuid": "1ac9811f_cdd8523b",
      "revId": "def83057d839667d9c8dd7509954812c834c29b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}