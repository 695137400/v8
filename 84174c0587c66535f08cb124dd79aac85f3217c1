{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a7a9a294_428f0930",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1434130
      },
      "writtenOn": "2020-10-23T09:18:22Z",
      "side": 1,
      "message": "PTAL",
      "revId": "84174c0587c66535f08cb124dd79aac85f3217c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2aa13f6_ec7a012a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2020-10-23T09:32:34Z",
      "side": 1,
      "message": "Thanks for the CL. This is quite a lot of special casing for CFI, I think we should probably discuss the reasoning and pros/cons of this at the Arm sync next week, would that be possible?  Do you have any performance numbers on how much this impacts performance on CFI/non-CFI builds?\n\nGeorg / Michael - do you know if Intel\u0027s CFI approach will have similar overheads on interpreter bytecode dispatch tail-calls? If so I\u0027d like to make sure we design something that works on all architectures.",
      "revId": "84174c0587c66535f08cb124dd79aac85f3217c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1640437_86c446fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1434130
      },
      "writtenOn": "2020-10-23T09:49:34Z",
      "side": 1,
      "message": "Sure we can discuss this next week. I also ran some benchmarks (octane, ares-6, typescript and web-tooling) and did not noticed any particular regression, in both cfi and non-cfi builds.",
      "parentUuid": "c2aa13f6_ec7a012a",
      "revId": "84174c0587c66535f08cb124dd79aac85f3217c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c767c947_b5c8e787",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2020-10-23T10:03:04Z",
      "side": 1,
      "message": "Is there a perf improvement in CFI? Otherwise I\u0027m not entirely sure that this is worth the complexity if it is just about saving ~8KB in the binary.",
      "parentUuid": "f1640437_86c446fb",
      "revId": "84174c0587c66535f08cb124dd79aac85f3217c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "413ac539_15f04ff7",
        "filename": "src/snapshot/startup-serializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2020-10-23T10:03:04Z",
      "side": 1,
      "message": "I don\u0027t think this should be an on-heap builtin - is there any reason it can\u0027t always be generated at build time like most builtins?",
      "revId": "84174c0587c66535f08cb124dd79aac85f3217c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}