{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f8b3e6b4_833161ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2020-09-25T13:06:46Z",
      "side": 1,
      "message": "Camillo, Toon: Any more feedback on this? Does this approach work okay?",
      "revId": "25c7b2ee9aac42d610234d5d2cadfb6ce8da6f83",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3aa5c7f8_705e5c89",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-09-28T15:45:48Z",
      "side": 1,
      "message": "I\u0027m fine and will probably land a partial optimisation for it soonish.",
      "revId": "25c7b2ee9aac42d610234d5d2cadfb6ce8da6f83",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e6810f7_5441f683",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2020-10-09T14:45:36Z",
      "side": 1,
      "message": "Toon: Any update? I\u0027d like to proceed with this, and would need to know whether the current approach is okay.",
      "revId": "25c7b2ee9aac42d610234d5d2cadfb6ce8da6f83",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3710864d_51b22204",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2020-10-20T15:10:34Z",
      "side": 1,
      "message": "lgtm with comment. Take it as you want.",
      "revId": "25c7b2ee9aac42d610234d5d2cadfb6ce8da6f83",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7aa4ec9b_8cbefacd",
        "filename": "src/objects/js-objects.cc",
        "patchSetId": 16
      },
      "lineNbr": 2038,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2020-10-20T15:10:34Z",
      "side": 1,
      "message": "Why don\u0027t you simple get the template from the constructor and check that instead? I\u0027m fine with landing it this way but it seems less efficient and the alternative doesn\u0027t seem very complicated?",
      "revId": "25c7b2ee9aac42d610234d5d2cadfb6ce8da6f83",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b70ca7bf_72b643cb",
        "filename": "src/objects/js-objects.cc",
        "patchSetId": 16
      },
      "lineNbr": 2038,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2020-10-21T21:09:06Z",
      "side": 1,
      "message": "Thanks. Tried this in the current version, and it indeed looks nicer.\n\nThe logic to get the object template from the JSReceiver in JSReceiver::IsCodeKind is totally cargo culted; I hope that\u0027s the proper way.\n\n(Also, I need to adapt the ccunit tests, because with the simplistic setup I used there the object don\u0027t \"know\" their constructor. (JsReceiver::GetConstructor fails).)",
      "parentUuid": "7aa4ec9b_8cbefacd",
      "revId": "25c7b2ee9aac42d610234d5d2cadfb6ce8da6f83",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d35f5d2_285b20a5",
        "filename": "src/objects/js-objects.cc",
        "patchSetId": 16
      },
      "lineNbr": 2038,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2020-10-22T15:20:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b70ca7bf_72b643cb",
      "revId": "25c7b2ee9aac42d610234d5d2cadfb6ce8da6f83",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}