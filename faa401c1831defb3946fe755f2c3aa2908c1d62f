{
  "comments": [
    {
      "key": {
        "uuid": "4710c7b6_847ee316",
        "filename": "include/v8-fast-api-calls.h",
        "patchSetId": 1
      },
      "lineNbr": 384,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2020-06-08T16:45:46Z",
      "side": 1,
      "message": "Maya: Out of curiosity, how are you invoking the function from the runtime? I guess you invoke something of void(EmbedderType*) as void(void*), right?\n\nIIRC, doing so from C++ would make UBSan complain but I guess you are fine because you invoke from JITed code?",
      "range": {
        "startLine": 384,
        "startChar": 44,
        "endLine": 384,
        "endChar": 48
      },
      "revId": "faa401c1831defb3946fe755f2c3aa2908c1d62f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2453afbd_376fdbd7",
        "filename": "include/v8-fast-api-calls.h",
        "patchSetId": 1
      },
      "lineNbr": 384,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2020-06-09T07:59:19Z",
      "side": 1,
      "message": "Yeah, it\u0027s invoked as void(void*). And we don\u0027t get UBSan errors, but if that\u0027s technically undefined behaviour, I\u0027ll look into possibilities to use the actual type. That would fix the UB, right?",
      "parentUuid": "4710c7b6_847ee316",
      "range": {
        "startLine": 384,
        "startChar": 44,
        "endLine": 384,
        "endChar": 48
      },
      "revId": "faa401c1831defb3946fe755f2c3aa2908c1d62f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a11a3dcc_fcc6742f",
        "filename": "include/v8-fast-api-calls.h",
        "patchSetId": 1
      },
      "lineNbr": 384,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2020-06-09T10:43:35Z",
      "side": 1,
      "message": "The type is only available on the embedder side and cannot really make it across the API boundary (at least not without vtable method that internally casts properly). We have encountered as similar issue witht WeakCallbackInfo\u003cT\u003e which UBSan at some point complained.\n\nI guess as long as you invoke it from JITed code UBSan will not complain. JITed code anyways seems out of scope of *SAN and we are required to manually ensure that the ABI is compatible.",
      "parentUuid": "2453afbd_376fdbd7",
      "range": {
        "startLine": 384,
        "startChar": 44,
        "endLine": 384,
        "endChar": 48
      },
      "revId": "faa401c1831defb3946fe755f2c3aa2908c1d62f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5caf810b_32ed3c8b",
        "filename": "include/v8-fast-api-calls.h",
        "patchSetId": 1
      },
      "lineNbr": 384,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2020-06-09T15:49:25Z",
      "side": 1,
      "message": "Good point about manually ensuring the compatibility. I\u0027ll leave this open for future reference.",
      "parentUuid": "a11a3dcc_fcc6742f",
      "range": {
        "startLine": 384,
        "startChar": 44,
        "endLine": 384,
        "endChar": 48
      },
      "revId": "faa401c1831defb3946fe755f2c3aa2908c1d62f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}