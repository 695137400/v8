{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "277ad1f1_21287e79",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1313365
      },
      "writtenOn": "2022-07-19T02:52:29Z",
      "side": 1,
      "message": "Could you please help to review this patch?",
      "revId": "c47f89fa1b13a463f69fa13a639a4a1f3b6e75a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7bd547fe_24ec08ad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2022-07-25T15:44:54Z",
      "side": 1,
      "message": "Looks good from my pov, but re the commit message: I don\u0027t immediately see who this helps Speedometer? You mean it would have helped speedometer if we were to share feedback across independent runs (which we don\u0027t)?",
      "revId": "c47f89fa1b13a463f69fa13a639a4a1f3b6e75a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "172ad012_bf3f70b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1313365
      },
      "writtenOn": "2022-07-26T01:45:03Z",
      "side": 1,
      "message": "Less the most slow ignition bytecode execution (more faster high tier code execution) helps Speedometer.\nThis patch reduces the most slow ignition bytecode execution of the Sparkplug compiled JS function by interrupt budget of feedback allocation and Sparkplug, speeds up tiering up to Sparkplug.",
      "parentUuid": "7bd547fe_24ec08ad",
      "revId": "c47f89fa1b13a463f69fa13a639a4a1f3b6e75a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fdc863e_8ffdd807",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2022-07-26T11:33:52Z",
      "side": 1,
      "message": "As I understand it, this is supposed to help via the code cache, right? Do we observe the code cache being used on a single Speedometer run? Or is this for making subsequent Speedometer runs faster?",
      "parentUuid": "172ad012_bf3f70b0",
      "revId": "c47f89fa1b13a463f69fa13a639a4a1f3b6e75a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6bc286c0_6bce035c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1313365
      },
      "writtenOn": "2022-07-27T01:33:19Z",
      "side": 1,
      "message": "Yes, help via the code cache.\nYes, I observed the code cache being used on a single Speedometer2 run. A single Speedometer2 run includes 10 iterations by default, this CL is for making 3rd~10th iterations of the first single Speedometer2 run faster and all iterations of subsequent Speedometer2 runs faster.",
      "parentUuid": "1fdc863e_8ffdd807",
      "revId": "c47f89fa1b13a463f69fa13a639a4a1f3b6e75a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "acfb84f5_bcb8341b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2022-07-28T14:24:02Z",
      "side": 1,
      "message": "Don\u0027t we hit the isolate cache in that case, which automatically shares baseline code?",
      "parentUuid": "6bc286c0_6bce035c",
      "revId": "c47f89fa1b13a463f69fa13a639a4a1f3b6e75a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db698b1e_1e818dfc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2022-07-28T15:02:02Z",
      "side": 1,
      "message": "Ah no, we do actually hit the disk cache. Interesting. I\u0027m not entirely certain why we\u0027d be seeing an improvement here though. But the behaviour is puzzling me in general :)",
      "parentUuid": "acfb84f5_bcb8341b",
      "revId": "c47f89fa1b13a463f69fa13a639a4a1f3b6e75a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c288f46a_6d92a8cf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2022-07-28T15:15:56Z",
      "side": 1,
      "message": "This is puzzling to me too, the code cache is created during the initial warm-up  of the benchmark (before timing) so either the sparkplug code is ready by then via normal tier up, or via this additional bit -- but either way, subsequent sparkplug compilation shouldn\u0027t affect the cache.\n\nNevertheless, I can\u0027t argue with pinpoint results, and this makes general sense, so lgtm.",
      "parentUuid": "db698b1e_1e818dfc",
      "revId": "c47f89fa1b13a463f69fa13a639a4a1f3b6e75a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad8485d0_a1aa7525",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2022-07-28T15:33:15Z",
      "side": 1,
      "message": "I recently did a code cache change that makes code survive quite likely until the next run of the benchmark. I\u0027m kinda confused why that already doesn\u0027t cover this case through the isolate cache. Perhaps there are some cases where we drop code anyway and get it back from the disk cache? It would be interesting to understand better why what\u0027s being compiled where.",
      "parentUuid": "c288f46a_6d92a8cf",
      "revId": "c47f89fa1b13a463f69fa13a639a4a1f3b6e75a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37b79783_d767ec9e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1313365
      },
      "writtenOn": "2022-08-01T04:22:54Z",
      "side": 1,
      "message": "Thanks for your reviewing and discussion!\nWe will understand and investigate how baseline code to be cached in isolate cache.\n\nHi Leszek,\n\nPlease allow me double confirm, what\u0027s the pinpoint results in your last comment?\n\"This CL can improve Speedometer2 by +2%\" in commit message is result of our local test.  \nI did pinpoint test based on the first version (early sparkplug compilation if turbofan compiled), almost no performance impact, because I could see performance improvement (~0.8%) in our local test, I doubled pinpoint may clear disk cache, so I committed a hack version to test performance impact in pinpoint, then the pinpoint test result is align with our local test result.\nThen I reverted the hack version and updated the patch according to your review comments, I could see more performance improvement (+2%) in our local test, but I didn\u0027t do pinpoint test.",
      "parentUuid": "ad8485d0_a1aa7525",
      "revId": "c47f89fa1b13a463f69fa13a639a4a1f3b6e75a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78c2b67d_c9a9176e",
        "filename": "src/baseline/baseline-batch-compiler.cc",
        "patchSetId": 6
      },
      "lineNbr": 312,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2022-07-25T14:20:34Z",
      "side": 1,
      "message": "can you deduplicate the code between this and EnqueueFunction?",
      "range": {
        "startLine": 312,
        "startChar": 28,
        "endLine": 312,
        "endChar": 38
      },
      "revId": "c47f89fa1b13a463f69fa13a639a4a1f3b6e75a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5ba7ea4_ee99a68e",
        "filename": "src/baseline/baseline-batch-compiler.cc",
        "patchSetId": 6
      },
      "lineNbr": 312,
      "author": {
        "id": 1313365
      },
      "writtenOn": "2022-07-26T01:45:03Z",
      "side": 1,
      "message": "Yes, I\u0027ll re-design this and EnqueueFunction to remove the duplicated code.",
      "parentUuid": "78c2b67d_c9a9176e",
      "range": {
        "startLine": 312,
        "startChar": 28,
        "endLine": 312,
        "endChar": 38
      },
      "revId": "c47f89fa1b13a463f69fa13a639a4a1f3b6e75a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a82f7b61_4fef2825",
        "filename": "src/baseline/baseline-batch-compiler.cc",
        "patchSetId": 6
      },
      "lineNbr": 312,
      "author": {
        "id": 1313365
      },
      "writtenOn": "2022-07-27T07:39:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5ba7ea4_ee99a68e",
      "range": {
        "startLine": 312,
        "startChar": 28,
        "endLine": 312,
        "endChar": 38
      },
      "revId": "c47f89fa1b13a463f69fa13a639a4a1f3b6e75a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dc20baf_e36d13e9",
        "filename": "src/snapshot/code-serializer.cc",
        "patchSetId": 6
      },
      "lineNbr": 585,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2022-07-25T14:20:34Z",
      "side": 1,
      "message": "please share code between here and `CodeSerializer::Deserialize`",
      "range": {
        "startLine": 572,
        "startChar": 0,
        "endLine": 585,
        "endChar": 5
      },
      "revId": "c47f89fa1b13a463f69fa13a639a4a1f3b6e75a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddb27d03_b0247701",
        "filename": "src/snapshot/code-serializer.cc",
        "patchSetId": 6
      },
      "lineNbr": 585,
      "author": {
        "id": 1313365
      },
      "writtenOn": "2022-07-26T01:45:03Z",
      "side": 1,
      "message": "OK, I\u0027ll shared the duplicated code",
      "parentUuid": "5dc20baf_e36d13e9",
      "range": {
        "startLine": 572,
        "startChar": 0,
        "endLine": 585,
        "endChar": 5
      },
      "revId": "c47f89fa1b13a463f69fa13a639a4a1f3b6e75a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3bf20202_d1674eab",
        "filename": "src/snapshot/code-serializer.cc",
        "patchSetId": 6
      },
      "lineNbr": 585,
      "author": {
        "id": 1313365
      },
      "writtenOn": "2022-07-27T07:39:33Z",
      "side": 1,
      "message": "Thanks! Could you please further review?",
      "parentUuid": "ddb27d03_b0247701",
      "range": {
        "startLine": 572,
        "startChar": 0,
        "endLine": 585,
        "endChar": 5
      },
      "revId": "c47f89fa1b13a463f69fa13a639a4a1f3b6e75a2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}