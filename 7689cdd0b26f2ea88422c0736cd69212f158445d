{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6d2db590_665c9280",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2023-06-29T16:44:27Z",
      "side": 1,
      "message": "This is the last (and unfortunately the largest) one.",
      "revId": "7689cdd0b26f2ea88422c0736cd69212f158445d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab0f33a6_9bc12de0",
        "filename": "src/compiler/backend/register-allocator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1138,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2023-06-29T16:54:18Z",
      "side": 1,
      "message": "Ultimately, this is still a `O(n+m)` algorithm, just with better locality for vectors instead of linked lists. Is there some way to get this to `O(log n)`?",
      "revId": "7689cdd0b26f2ea88422c0736cd69212f158445d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "467cf6c9_0cc73141",
        "filename": "src/compiler/backend/register-allocator.cc",
        "patchSetId": 1
      },
      "lineNbr": 1138,
      "author": {
        "id": 1345975
      },
      "writtenOn": "2023-07-03T09:50:56Z",
      "side": 1,
      "message": "Interesting question, I thought a bit about it but it sounds impossible to me. Here is a quick proof: take the case where the intervals of the two vectors are perfectly interleaved and never intersect. If such a sub-linear algorithm existed, it would be able to conclude that the intervals never intersect without reading all of them. So we can take one of the intervals that the algorithm hasn\u0027t checked and change the end position (which doesn\u0027t affect the order) such that it now intersects with the next interval of the other vector. The algorithm would be wrong then, so it doesn\u0027t exist by reductio ad absurdum.",
      "parentUuid": "ab0f33a6_9bc12de0",
      "revId": "7689cdd0b26f2ea88422c0736cd69212f158445d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "604db826_b41d43c6",
        "filename": "src/compiler/backend/register-allocator.h",
        "patchSetId": 1
      },
      "lineNbr": 1028,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2023-06-29T16:54:18Z",
      "side": 1,
      "message": "Saw some memory improvements by going from `ZoneSet` to a sorted vector, but I didn\u0027t record how much for this individually.",
      "revId": "7689cdd0b26f2ea88422c0736cd69212f158445d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a12a21d_5cae917e",
        "filename": "src/compiler/backend/register-allocator.h",
        "patchSetId": 1
      },
      "lineNbr": 1028,
      "author": {
        "id": 1345975
      },
      "writtenOn": "2023-07-03T09:50:56Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "604db826_b41d43c6",
      "revId": "7689cdd0b26f2ea88422c0736cd69212f158445d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}