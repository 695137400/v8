{
  "comments": [
    {
      "key": {
        "uuid": "2c93e5c5_9a5ce7b3",
        "filename": "src/interpreter/interpreter-assembler.cc",
        "patchSetId": 10
      },
      "lineNbr": 40,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2019-08-20T17:12:15Z",
      "side": 1,
      "message": "Any reason these (and below) are Unchecked? I\u0027m fine with it I\u0027d just like to know.",
      "revId": "8e2d4a0aa0682c5cebbeea5409ef629bdc42d2e1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3048069_055f8df4",
        "filename": "src/interpreter/interpreter-assembler.cc",
        "patchSetId": 10
      },
      "lineNbr": 40,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2019-08-21T11:18:10Z",
      "side": 1,
      "message": "We know it\u0027s a IntPtr because of https://cs.chromium.org/chromium/src/v8/src/codegen/interface-descriptors.h?l\u003d1082. However, the CAST fails because of incompatible types Object vs IntPtrT.",
      "parentUuid": "2c93e5c5_9a5ce7b3",
      "revId": "8e2d4a0aa0682c5cebbeea5409ef629bdc42d2e1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea699e1_c95ecc29",
        "filename": "src/interpreter/interpreter-assembler.cc",
        "patchSetId": 10
      },
      "lineNbr": 40,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2019-09-03T11:01:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a3048069_055f8df4",
      "revId": "8e2d4a0aa0682c5cebbeea5409ef629bdc42d2e1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "344147c7_496ecd2f",
        "filename": "src/interpreter/interpreter-assembler.cc",
        "patchSetId": 10
      },
      "lineNbr": 77,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2019-08-20T17:12:15Z",
      "side": 1,
      "message": "Can we TNode LoadParentFramePointer instead?",
      "revId": "8e2d4a0aa0682c5cebbeea5409ef629bdc42d2e1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d71f6552_e4f19b62",
        "filename": "src/interpreter/interpreter-assembler.cc",
        "patchSetId": 10
      },
      "lineNbr": 77,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2019-08-21T11:18:10Z",
      "side": 1,
      "message": "LoadParentFramePointer was already TNodified. What I did to solve this was change interpreted_frame_pointer_ from IntPtr (which was wrong to begin with) to RawPtr.",
      "parentUuid": "344147c7_496ecd2f",
      "revId": "8e2d4a0aa0682c5cebbeea5409ef629bdc42d2e1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39f313f3_97d7b70c",
        "filename": "src/interpreter/interpreter-assembler.cc",
        "patchSetId": 10
      },
      "lineNbr": 107,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2019-08-20T17:12:15Z",
      "side": 1,
      "message": "bytecode_offset",
      "revId": "8e2d4a0aa0682c5cebbeea5409ef629bdc42d2e1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2df14f2e_8f404620",
        "filename": "src/interpreter/interpreter-assembler.cc",
        "patchSetId": 10
      },
      "lineNbr": 107,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2019-08-21T11:18:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39f313f3_97d7b70c",
      "revId": "8e2d4a0aa0682c5cebbeea5409ef629bdc42d2e1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e338d800_55761a34",
        "filename": "src/interpreter/interpreter-assembler.cc",
        "patchSetId": 10
      },
      "lineNbr": 114,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2019-08-20T17:12:15Z",
      "side": 1,
      "message": "Let\u0027s rename this rather than adding a comment (store_offset)",
      "revId": "8e2d4a0aa0682c5cebbeea5409ef629bdc42d2e1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83276b0f_fc2e6f03",
        "filename": "src/interpreter/interpreter-assembler.cc",
        "patchSetId": 10
      },
      "lineNbr": 114,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2019-08-21T11:18:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e338d800_55761a34",
      "revId": "8e2d4a0aa0682c5cebbeea5409ef629bdc42d2e1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "450dd5a1_f8ca6755",
        "filename": "src/interpreter/interpreter-assembler.h",
        "patchSetId": 10
      },
      "lineNbr": 420,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2019-08-20T17:12:15Z",
      "side": 1,
      "message": "Can we TNodify the other variables (bytecode_array, dispatch_table, accumulator_) while we are at it (in a follow-up CL is fine)?",
      "revId": "8e2d4a0aa0682c5cebbeea5409ef629bdc42d2e1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4c76372_b1ffa734",
        "filename": "src/interpreter/interpreter-assembler.h",
        "patchSetId": 10
      },
      "lineNbr": 420,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2019-08-21T11:18:10Z",
      "side": 1,
      "message": "Yes, in a follow-up",
      "parentUuid": "450dd5a1_f8ca6755",
      "revId": "8e2d4a0aa0682c5cebbeea5409ef629bdc42d2e1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}