{
  "comments": [
    {
      "key": {
        "uuid": "687523f6_cb86eaff",
        "filename": "BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 970,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-03-14T08:49:33Z",
      "side": 1,
      "message": "nit: alpha-sort here and above please",
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8d0d860_5b63ecbb",
        "filename": "BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 970,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-03-14T17:43:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "687523f6_cb86eaff",
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e3230ec_4e5560ea",
        "filename": "src/builtins/base.tq",
        "patchSetId": 3
      },
      "lineNbr": 703,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-03-14T08:49:33Z",
      "side": 1,
      "message": "nit: should be next to other Is* predicates, e.g. IsJSArray",
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7352093d_6936d44d",
        "filename": "src/builtins/base.tq",
        "patchSetId": 3
      },
      "lineNbr": 703,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-03-14T17:43:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e3230ec_4e5560ea",
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d8d8764_5ef3049f",
        "filename": "src/builtins/base.tq",
        "patchSetId": 3
      },
      "lineNbr": 704,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-03-14T08:49:33Z",
      "side": 1,
      "message": "This isn\u0027t needed, use \u0027\u003d\u003d Null\u0027 instead.",
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f07222eb_5b225936",
        "filename": "src/builtins/base.tq",
        "patchSetId": 3
      },
      "lineNbr": 704,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-03-14T17:43:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d8d8764_5ef3049f",
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54eb9de6_9a01c97c",
        "filename": "src/builtins/base.tq",
        "patchSetId": 3
      },
      "lineNbr": 705,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-03-14T08:49:33Z",
      "side": 1,
      "message": "nit: let\u0027s put this and kProxySlot next to the other StoreContextElement def. Please also follow the style used there (i.e. define a new ContextSlot type, upper-case for the slot constant, etc).",
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81d038b1_0afecb1e",
        "filename": "src/builtins/base.tq",
        "patchSetId": 3
      },
      "lineNbr": 705,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-03-14T17:43:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "54eb9de6_9a01c97c",
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f143fc15_07b839ec",
        "filename": "src/builtins/proxy-revoke.tq",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-03-14T08:49:33Z",
      "side": 1,
      "message": "nit: 2019",
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a370f6ab_9e1a577b",
        "filename": "src/builtins/proxy-revoke.tq",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-03-14T17:43:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f143fc15_07b839ec",
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97b4ef5c_66ff64b9",
        "filename": "src/builtins/proxy-revoke.tq",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2019-03-14T16:47:44Z",
      "side": 1,
      "message": "Just for my better understanding - does this allow passing actual arguments to the ProxyRevoke? Since it\u0027s only internal, this might not be important, but just wanted to make sure.",
      "range": {
        "startLine": 21,
        "startChar": 50,
        "endLine": 21,
        "endChar": 62
      },
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "919093ed_0251832a",
        "filename": "src/builtins/proxy-revoke.tq",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-03-14T17:43:29Z",
      "side": 1,
      "message": "In this case, I only need context but I cannot define the builtin with only context. Torque parser will throw without any error message.\n@Jakob: WDYT?",
      "parentUuid": "97b4ef5c_66ff64b9",
      "range": {
        "startLine": 21,
        "startChar": 50,
        "endLine": 21,
        "endChar": 62
      },
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7537d8ee_587030fe",
        "filename": "src/builtins/proxy-revoke.tq",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-03-14T08:49:33Z",
      "side": 1,
      "message": "Suggestion: don\u0027t add the intptr constant, instead define LoadContextElement/StoreContextElement specializations for ContextSlot (the new type defined by you :).",
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f034a45_3630e73a",
        "filename": "src/builtins/proxy-revoke.tq",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-03-14T17:43:29Z",
      "side": 1,
      "message": "fixed, thanks to your suggestion :)",
      "parentUuid": "7537d8ee_587030fe",
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16bb897b_b7ad5bed",
        "filename": "src/builtins/proxy-revoke.tq",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-03-14T08:49:33Z",
      "side": 1,
      "message": "Spec asserts don\u0027t throw runtime exceptions; it\u0027s basically equivalent to an UnsafeCast\u003cJSProxy\u003e(...) here (instead of ValidateProxy).",
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ec6bdf8_a2fb4f0a",
        "filename": "src/builtins/proxy-revoke.tq",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2019-03-14T16:47:44Z",
      "side": 1,
      "message": "+1, that\u0027s pretty important.",
      "parentUuid": "16bb897b_b7ad5bed",
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2364b896_e827986a",
        "filename": "src/builtins/proxy-revoke.tq",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-03-14T17:43:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ec6bdf8_a2fb4f0a",
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55208aaf_dbd39141",
        "filename": "src/compiler/code-assembler.h",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-03-14T08:49:33Z",
      "side": 1,
      "message": "Someone asked this in another CL, could this move to base.tq instead?",
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbd3ebb3_f54020bb",
        "filename": "src/compiler/code-assembler.h",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 1322305
      },
      "writtenOn": "2019-03-14T17:55:31Z",
      "side": 1,
      "message": "I get the compile error:\n\"error: incomplete type \u0027v8::internal::JSProxy\u0027 used in type trait expression\n                : bool_constant\u003c__is_base_of(_Base, _Derived)\u003e\n                                                            ^\n../..\\src/compiler/code-assembler.h(204,34):  note: in instantiation of template class \u0027std::is_base_of\u003cv8::internal::Object, v8::internal::JSProxy\u003e\u0027 requested here\n  static const bool value \u003d std::is_base_of\u003cObject, T\u003e::value ||\n                                 ^\n../..\\src/compiler/code-assembler.h(458,17):  note: in instantiation of template class \u0027v8::internal::is_valid_type_tag\u003cv8::internal::JSProxy\u003e\u0027 requested here\n  static_assert(is_valid_type_tag\u003cT\u003e::value, \"invalid type tag\");\n                ^\n../..\\src/code-stub-assembler.h(362,18):  note: in instantiation of template class \u0027v8::internal::compiler::TNode\u003cv8::internal::JSProxy\u003e\u0027 requested here\n  TNode\u003cJSProxy\u003e HeapObjectToJSProxy(TNode\u003cHeapObject\u003e heap_object,\n                 ^\n../..\\src/objects.h(271,7):  note: forward declaration of \u0027v8::internal::JSProxy\u0027\nclass JSProxy;\"",
      "parentUuid": "55208aaf_dbd39141",
      "revId": "a85288e62ebcd1c5bd07791d1d1739b59928ad58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}