{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d43bea6d_70c5851c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "Looking good! This first round of comments focuses on deleting repeated code and ensuring the logic is sound.",
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce4976a4_7026283b",
        "filename": "src/builtins/builtins-atomics-synchronization.cc",
        "patchSetId": 6
      },
      "lineNbr": 8,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "What is this for?",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 41
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19aa8c10_f132b4ec",
        "filename": "src/builtins/builtins-atomics-synchronization.cc",
        "patchSetId": 6
      },
      "lineNbr": 8,
      "author": {
        "id": 1584673
      },
      "writtenOn": "2023-08-14T17:26:55Z",
      "side": 1,
      "message": "I believe this is an include I needed at some point when I was investigating promise reactions. However the code I used that required this include has since been removed. This include is no longer needed.",
      "parentUuid": "ce4976a4_7026283b",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 41
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ef8e71a_fe601d4e",
        "filename": "src/builtins/builtins-atomics-synchronization.cc",
        "patchSetId": 6
      },
      "lineNbr": 62,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "rename `AtomicsMutexAsyncUnlock`",
      "range": {
        "startLine": 62,
        "startChar": 8,
        "endLine": 62,
        "endChar": 29
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50bff408_a75ba4fa",
        "filename": "src/builtins/builtins-atomics-synchronization.cc",
        "patchSetId": 6
      },
      "lineNbr": 62,
      "author": {
        "id": 1584673
      },
      "writtenOn": "2023-08-14T17:26:55Z",
      "side": 1,
      "message": "This is has now been renamed.",
      "parentUuid": "3ef8e71a_fe601d4e",
      "range": {
        "startLine": 62,
        "startChar": 8,
        "endLine": 62,
        "endChar": 29
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba6ad274_534f4cb1",
        "filename": "src/builtins/builtins-atomics-synchronization.cc",
        "patchSetId": 6
      },
      "lineNbr": 96,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "The possibility that the task is ran here or in `HandleNotify` creates too much duplicated code. Lets replace this with a `JSAtomicsMutex::RunOrQueueCallable` method that returns a promise.",
      "range": {
        "startLine": 96,
        "startChar": 1,
        "endLine": 96,
        "endChar": 54
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d34e3e31_37e96aec",
        "filename": "src/builtins/builtins-atomics-synchronization.cc",
        "patchSetId": 6
      },
      "lineNbr": 96,
      "author": {
        "id": 1584673
      },
      "writtenOn": "2023-08-14T17:26:55Z",
      "side": 1,
      "message": "Yes, I see there was quite a bit of duplication. This static function has been created.",
      "parentUuid": "ba6ad274_534f4cb1",
      "range": {
        "startLine": 96,
        "startChar": 1,
        "endLine": 96,
        "endChar": 54
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a23b66d_8496282b",
        "filename": "src/builtins/builtins-atomics-synchronization.cc",
        "patchSetId": 6
      },
      "lineNbr": 115,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "You should be able to do the cast inline `Utils::PromiseToLocal(Handle\u003cJSPromise\u003e::cast(result))`.",
      "range": {
        "startLine": 115,
        "startChar": 32,
        "endLine": 115,
        "endChar": 45
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1ab03ed_0888bdc4",
        "filename": "src/builtins/builtins-atomics-synchronization.cc",
        "patchSetId": 6
      },
      "lineNbr": 115,
      "author": {
        "id": 1584673
      },
      "writtenOn": "2023-08-14T17:26:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a23b66d_8496282b",
      "range": {
        "startLine": 115,
        "startChar": 32,
        "endLine": 115,
        "endChar": 45
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48e027ca_f265ce42",
        "filename": "src/builtins/builtins-atomics-synchronization.cc",
        "patchSetId": 6
      },
      "lineNbr": 117,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "This is returning a MaybeLocal because this operation can fail. When can it fail?",
      "range": {
        "startLine": 117,
        "startChar": 26,
        "endLine": 117,
        "endChar": 39
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "695596ea_63526eb4",
        "filename": "src/builtins/builtins-atomics-synchronization.cc",
        "patchSetId": 6
      },
      "lineNbr": 125,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "Can we let the `AsyncLockGuard` destructor handle this? Just like the `TryLockGuard` destructor does.",
      "range": {
        "startLine": 125,
        "startChar": 4,
        "endLine": 125,
        "endChar": 58
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a492d1e4_c0518dca",
        "filename": "src/objects/js-atomics-synchronization-inl.h",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "Was this for debugging?",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 28,
        "endChar": 76
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05b2f9bb_14a0adcc",
        "filename": "src/objects/js-atomics-synchronization.cc",
        "patchSetId": 6
      },
      "lineNbr": 457,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "Whoever is calling the notify task should have access to the state, so you should be able to pass it as part of the callback and use it instead of the mutex.",
      "range": {
        "startLine": 457,
        "startChar": 0,
        "endLine": 457,
        "endChar": 32
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6aaf3478_6b696a9c",
        "filename": "src/objects/js-atomics-synchronization.cc",
        "patchSetId": 6
      },
      "lineNbr": 459,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "This can be created on demand.",
      "range": {
        "startLine": 459,
        "startChar": 2,
        "endLine": 459,
        "endChar": 34
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "711ef70d_cb034ff3",
        "filename": "src/objects/js-atomics-synchronization.cc",
        "patchSetId": 6
      },
      "lineNbr": 461,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "You should be able to get this from the `callback_` object.",
      "range": {
        "startLine": 461,
        "startChar": 2,
        "endLine": 461,
        "endChar": 42
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0996dc80_66bd8aa4",
        "filename": "src/objects/js-atomics-synchronization.cc",
        "patchSetId": 6
      },
      "lineNbr": 463,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "Do we need to store this?",
      "range": {
        "startLine": 463,
        "startChar": 25,
        "endLine": 463,
        "endChar": 50
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "501720b0_79b96562",
        "filename": "src/objects/js-atomics-synchronization.cc",
        "patchSetId": 6
      },
      "lineNbr": 506,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "This is just a small part of `LockSlowPath`, is there an argument to not include the first part of the logic in `LockSlowPath`?. Can we write functions `RunOrQueueCallable` and `RunOrQueueCallableSlowPath` with similar logic to `Lock` and `LockSlowPath`?",
      "range": {
        "startLine": 496,
        "startChar": 0,
        "endLine": 506,
        "endChar": 3
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecad2dd8_049a25b5",
        "filename": "src/objects/js-atomics-synchronization.cc",
        "patchSetId": 6
      },
      "lineNbr": 544,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "Why is this needed?",
      "range": {
        "startLine": 544,
        "startChar": 2,
        "endLine": 544,
        "endChar": 48
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "447d3c9e_94cdd49a",
        "filename": "src/objects/js-atomics-synchronization.cc",
        "patchSetId": 6
      },
      "lineNbr": 549,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "Why is this needed?",
      "range": {
        "startLine": 548,
        "startChar": 0,
        "endLine": 549,
        "endChar": 74
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "853b193f_488761b1",
        "filename": "src/objects/js-atomics-synchronization.cc",
        "patchSetId": 6
      },
      "lineNbr": 556,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "You can drop `v8::internal`",
      "range": {
        "startLine": 556,
        "startChar": 24,
        "endLine": 556,
        "endChar": 36
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dd475c7_91db8568",
        "filename": "src/objects/js-atomics-synchronization.h",
        "patchSetId": 6
      },
      "lineNbr": 120,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "`AsyncLockGuard`?",
      "range": {
        "startLine": 120,
        "startChar": 5,
        "endLine": 120,
        "endChar": 18
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e8193f5_bb35957e",
        "filename": "src/objects/js-atomics-synchronization.h",
        "patchSetId": 6
      },
      "lineNbr": 120,
      "author": {
        "id": 1584673
      },
      "writtenOn": "2023-08-14T17:26:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0dd475c7_91db8568",
      "range": {
        "startLine": 120,
        "startChar": 5,
        "endLine": 120,
        "endChar": 18
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da5c43ba_881c32db",
        "filename": "src/objects/js-atomics-synchronization.h",
        "patchSetId": 6
      },
      "lineNbr": 133,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "All the methods present here and not in `AsyncLockGuard` are static. We can move them to `AsyncWaiterQueueNode` and remove this class.",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 133,
        "endChar": 64
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "303f752f_b1a35e87",
        "filename": "src/objects/js-atomics-synchronization.h",
        "patchSetId": 6
      },
      "lineNbr": 133,
      "author": {
        "id": 1584673
      },
      "writtenOn": "2023-08-14T17:26:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da5c43ba_881c32db",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 133,
        "endChar": 64
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8347e3f9_3e2ae9b7",
        "filename": "src/objects/js-atomics-synchronization.h",
        "patchSetId": 6
      },
      "lineNbr": 150,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "`inline bool`",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 150,
        "endChar": 3
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60679f15_d18d9b5c",
        "filename": "test/mjsunit/shared-memory/mutex-async-lock.js",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "Choose a name that describes what you are testing in this function.",
      "range": {
        "startLine": 7,
        "startChar": 10,
        "endLine": 7,
        "endChar": 19
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9da5838e_997c2522",
        "filename": "test/mjsunit/shared-memory/mutex-async-lock.js",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "\"Convention\" in JavaScript is to use `camelCase` naming unless you are naming a constructor, which should start with a capital letter.",
      "range": {
        "startLine": 21,
        "startChar": 6,
        "endLine": 21,
        "endChar": 18
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21fefa45_299b48fe",
        "filename": "test/mjsunit/shared-memory/mutex-async-lock.js",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 1506979
      },
      "writtenOn": "2023-08-10T21:18:11Z",
      "side": 1,
      "message": "Remove extra space",
      "range": {
        "startLine": 52,
        "startChar": 47,
        "endLine": 52,
        "endChar": 48
      },
      "revId": "6779bbbf52061ea20c17c164117786e00e7ef0c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}