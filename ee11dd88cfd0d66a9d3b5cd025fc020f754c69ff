{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ede093b3_3d6d916d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2024-02-02T07:42:26Z",
      "side": 1,
      "message": "I think the description needs to state why they are needed on the V8 side. Is that for the work on tracing the additional bytes?",
      "revId": "ee11dd88cfd0d66a9d3b5cd025fc020f754c69ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0591f5ca_9eb588aa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2024-02-02T07:58:08Z",
      "side": 1,
      "message": "I\u0027m doing it as preparation for the additional bytes thing, but I actually think we should do it regardless.\nI think it\u0027s weird that Blink needs to specialize a cppgc trait for cppgc types, where the specialization is the normal behavior you would expect for these types. If this is the default behavior an embedder should expect, then imo it makes sense for the cppgc library to provide it.\n\nDid we have a reason not to provide these specializations here and add them in Blink instead?",
      "parentUuid": "ede093b3_3d6d916d",
      "revId": "ee11dd88cfd0d66a9d3b5cd025fc020f754c69ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44b6300c_aa0815a5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2024-02-02T08:22:01Z",
      "side": 1,
      "message": "\u003e I\u0027m doing it as preparation for the additional bytes thing, but I actually think we should do it regardless.\n\u003e I think it\u0027s weird that Blink needs to specialize a cppgc trait for cppgc types, where the specialization is the normal behavior you would expect for these types. If this is the default behavior an embedder should expect, then imo it makes sense for the cppgc library to provide it.\n\u003e \n\u003e Did we have a reason not to provide these specializations here and add them in Blink instead?\n\nWe do not provide traits that Blink needs right now but rather what we need on the V8 API, to separate concerns and only keep things on our stable API that we really need.\n\nYou removed a trait now that is not needed in Blink anymore. If we would have just added all such traits to V8 because Blink needs them we would be stuck with a useless trait at this point.\n\nIf the trait specialization is necessary in V8 for additonal bytes tracing, can we add it in that CL?",
      "parentUuid": "0591f5ca_9eb588aa",
      "revId": "ee11dd88cfd0d66a9d3b5cd025fc020f754c69ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "619c476a_994d58ad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2024-02-02T08:42:04Z",
      "side": 1,
      "message": "I think this is somewhat different. It\u0027s not a question of providing a new trait, but making sure the trait we already provide works as we expect it to out-of-the-box with the types we already provide. Right now we rely on embedders to do that and `IsTraceable` would be wrong if they didn\u0027t provide these specializations. I see it as guaranteeing correctness of the trait we already have on the API.\n\nI also think it\u0027s not the same as the `IsTraceableInCollectionTrait` case, because the trait and all types are already provided by V8. Removing any of them would anyway require a V8 change.\n\nWe can delay adding the specializations, but imo this CL can be independent from whether or not we move forward with the additional bytes tracing idea.",
      "parentUuid": "44b6300c_aa0815a5",
      "revId": "ee11dd88cfd0d66a9d3b5cd025fc020f754c69ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b63fae0b_ed8912dc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2024-02-02T07:38:51Z",
      "side": 1,
      "message": "ptal",
      "revId": "ee11dd88cfd0d66a9d3b5cd025fc020f754c69ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}