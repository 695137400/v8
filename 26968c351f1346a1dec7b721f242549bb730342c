{
  "comments": [
    {
      "key": {
        "uuid": "3da171b2_55824093",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 4
      },
      "lineNbr": 3838,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-10-24T13:27:13Z",
      "side": 1,
      "message": "nit - could you just inline this (and the one below in the loop) so that it\u0027s more clear that this is not a slot that represents the whole expression, just that one op.",
      "range": {
        "startLine": 3838,
        "startChar": 22,
        "endLine": 3838,
        "endChar": 58
      },
      "revId": "26968c351f1346a1dec7b721f242549bb730342c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91365e23_f0a8d312",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 4
      },
      "lineNbr": 3838,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2017-10-24T13:59:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3da171b2_55824093",
      "range": {
        "startLine": 3838,
        "startChar": 22,
        "endLine": 3838,
        "endChar": 58
      },
      "revId": "26968c351f1346a1dec7b721f242549bb730342c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ee77412_0644e34c",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 4
      },
      "lineNbr": 3840,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-10-24T13:27:13Z",
      "side": 1,
      "message": "Any reason not to do this now? Otherwise we are regressing generated bytecode for Smi cases (or do we never emit Nary operations when one side\u0027s a Smi)?",
      "range": {
        "startLine": 3840,
        "startChar": 5,
        "endLine": 3840,
        "endChar": 36
      },
      "revId": "26968c351f1346a1dec7b721f242549bb730342c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8114703_a6b98c8d",
        "filename": "src/interpreter/bytecode-generator.cc",
        "patchSetId": 4
      },
      "lineNbr": 3840,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2017-10-24T13:59:53Z",
      "side": 1,
      "message": "No reason other than simplicity of implementation. Done now, and the duplication between second() and subsequent(i) is starting to become a bit painful...",
      "parentUuid": "7ee77412_0644e34c",
      "range": {
        "startLine": 3840,
        "startChar": 5,
        "endLine": 3840,
        "endChar": 36
      },
      "revId": "26968c351f1346a1dec7b721f242549bb730342c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8fca970_563c98b8",
        "filename": "src/parsing/parser.cc",
        "patchSetId": 4
      },
      "lineNbr": 315,
      "author": {
        "id": 1115961
      },
      "writtenOn": "2017-10-24T13:32:04Z",
      "side": 1,
      "message": "Actually, would it be better to list here which operations are allowed (whitelist approach instead of blacklist)?",
      "range": {
        "startLine": 315,
        "startChar": 2,
        "endLine": 315,
        "endChar": 68
      },
      "revId": "26968c351f1346a1dec7b721f242549bb730342c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca2850dd_8c401bdd",
        "filename": "src/parsing/parser.cc",
        "patchSetId": 4
      },
      "lineNbr": 315,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2017-10-24T13:59:53Z",
      "side": 1,
      "message": "I want to cut this blacklist down in subsequent CLs, until it accepts all left-associative binary ops (i.e. all binary ops except EXP), so eventually it should become effectively IsBinaryOp as the whitelist, with EXP as the lone blacklist entry. Given that there are so many binary ops, listing them all would be a pain. WDYT?",
      "parentUuid": "c8fca970_563c98b8",
      "range": {
        "startLine": 315,
        "startChar": 2,
        "endLine": 315,
        "endChar": 68
      },
      "revId": "26968c351f1346a1dec7b721f242549bb730342c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5bc34d2_95d7bdab",
        "filename": "src/parsing/parser.cc",
        "patchSetId": 4
      },
      "lineNbr": 315,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2017-10-24T16:13:11Z",
      "side": 1,
      "message": "For reference, this is the end goal: https://chromium-review.googlesource.com/c/v8/v8/+/735497/1/src/parsing/parser.cc#314",
      "parentUuid": "ca2850dd_8c401bdd",
      "range": {
        "startLine": 315,
        "startChar": 2,
        "endLine": 315,
        "endChar": 68
      },
      "revId": "26968c351f1346a1dec7b721f242549bb730342c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd481772_6924bbc4",
        "filename": "src/parsing/parser.cc",
        "patchSetId": 4
      },
      "lineNbr": 315,
      "author": {
        "id": 1115961
      },
      "writtenOn": "2017-10-24T16:37:55Z",
      "side": 1,
      "message": "ok sgtm",
      "parentUuid": "c5bc34d2_95d7bdab",
      "range": {
        "startLine": 315,
        "startChar": 2,
        "endLine": 315,
        "endChar": 68
      },
      "revId": "26968c351f1346a1dec7b721f242549bb730342c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6ac1cf1_4fbf9f73",
        "filename": "test/cctest/interpreter/bytecode_expectations/StringConcat.golden",
        "patchSetId": 4
      },
      "lineNbr": 123,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2017-10-24T13:27:13Z",
      "side": 1,
      "message": "This shows some of the regression avoiding AddSmi - could we add that case in before landing?",
      "range": {
        "startLine": 122,
        "startChar": 16,
        "endLine": 123,
        "endChar": 33
      },
      "revId": "26968c351f1346a1dec7b721f242549bb730342c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}