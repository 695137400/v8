{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "23b3ed0f_b56eeb6a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 26
      },
      "lineNbr": 12,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2022-06-11T13:48:30Z",
      "side": 1,
      "message": "field",
      "range": {
        "startLine": 12,
        "startChar": 63,
        "endLine": 12,
        "endChar": 68
      },
      "revId": "c23ee80f7c04e96350583bb053a53066d5823b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d9786a4_9f510d5e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 1368998
      },
      "writtenOn": "2022-06-03T18:35:44Z",
      "side": 1,
      "message": "PTAL\nThanks!",
      "revId": "c23ee80f7c04e96350583bb053a53066d5823b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "165ed16f_07eaab37",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2022-06-08T18:19:41Z",
      "side": 1,
      "message": "Since Alex is now committer, adding him on this review. I\u0027m not sure if I find enough time before being OOO.",
      "revId": "c23ee80f7c04e96350583bb053a53066d5823b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ee697c7_e13176cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2022-06-08T18:21:05Z",
      "side": 1,
      "message": "I wonder if there are reasonable patchset increments that can be reviewed in separation or if 0..26 need to be reviewed in one go?",
      "revId": "c23ee80f7c04e96350583bb053a53066d5823b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "364ee9b5_b0b2351b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2022-06-11T13:48:30Z",
      "side": 1,
      "message": "Thanks! I give a half rubber stamped +1 since I won\u0027t reach the level of detail I\u0027d like to have reached, unless you can wait a week. Please let Alex have a readability and consistency look at this.\n\nIn general I focused on catching potential bugs. Regarding code organization there is probably more we can do, but I let you decide here as you are going to own more moving forward.\n\nI had some thoughts around how to best pass big-ball-of-mud options down to the various subcomponents, but I probably need a whiteboard.",
      "revId": "c23ee80f7c04e96350583bb053a53066d5823b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3833444b_3f79ee6d",
        "filename": "tools/testrunner/base_runner.py",
        "patchSetId": 26
      },
      "lineNbr": 196,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2022-06-11T13:48:30Z",
      "side": 1,
      "message": "nit: Are two space before a comma holding water when we run some lint tool? For the sake of ease of brain, I\u0027d be fine with no spaces...",
      "range": {
        "startLine": 196,
        "startChar": 27,
        "endLine": 196,
        "endChar": 29
      },
      "revId": "c23ee80f7c04e96350583bb053a53066d5823b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b9fe05c_38487130",
        "filename": "tools/testrunner/local/command.py",
        "patchSetId": 26
      },
      "lineNbr": 337,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2022-06-11T13:48:30Z",
      "side": 1,
      "message": "It is not ideal yet that there is this device stuff here. It is only needed in the Android case. Probably you get back to it...",
      "range": {
        "startLine": 335,
        "startChar": 0,
        "endLine": 337,
        "endChar": 9
      },
      "revId": "c23ee80f7c04e96350583bb053a53066d5823b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6df77e44_e7d02cfa",
        "filename": "tools/testrunner/standard_runner.py",
        "patchSetId": 26
      },
      "lineNbr": 305,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2022-06-11T13:48:30Z",
      "side": 1,
      "message": "Why did some cases get a new static create method and some not? E.g. _create_seed_proc looks like a candidate, too.\n\nPassing the options is no longer an argument, as they are in self now.\n\nThough I need to challenge the move a little bit. Before, the logic of knowing what\u0027s in the options was in the same file context where the options are built (here). Now with these helpers moved to different files, we need to know in scattered places how the options look like. No really strong opinion however...",
      "range": {
        "startLine": 305,
        "startChar": 11,
        "endLine": 305,
        "endChar": 28
      },
      "revId": "c23ee80f7c04e96350583bb053a53066d5823b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33c6d44a_9bed498d",
        "filename": "tools/testrunner/standard_runner_test.py",
        "patchSetId": 26
      },
      "lineNbr": 438,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2022-06-11T13:48:30Z",
      "side": 1,
      "message": "What happened here? I guess that is not needed any more?",
      "range": {
        "startLine": 433,
        "startChar": 4,
        "endLine": 438,
        "endChar": 3
      },
      "revId": "c23ee80f7c04e96350583bb053a53066d5823b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f890b3cd_be0c4010",
        "filename": "tools/testrunner/testdata/testroot5/test/sweet/sweet.status",
        "patchSetId": 26
      },
      "lineNbr": 1,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2022-06-11T13:48:30Z",
      "side": 1,
      "message": "Why does this appear as \"Added\"? Is it a new test?\n\nMaybe add new copyright year to new tests.",
      "range": {
        "startLine": 1,
        "startChar": 12,
        "endLine": 1,
        "endChar": 16
      },
      "revId": "c23ee80f7c04e96350583bb053a53066d5823b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "daedc1a6_8000511d",
        "filename": "tools/testrunner/testproc/fuzzer.py",
        "patchSetId": 26
      },
      "lineNbr": 147,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2022-06-11T13:48:30Z",
      "side": 1,
      "message": "Note, I\u0027m not sure if this combine_tests is used at all anymore. I think we trashed the mode that tried to do this.\n\nI think it wasn\u0027t properly cleaned up. You can check if any of the current numfuzz setups still uses it and if not remove it to simplify.",
      "range": {
        "startLine": 147,
        "startChar": 8,
        "endLine": 147,
        "endChar": 29
      },
      "revId": "c23ee80f7c04e96350583bb053a53066d5823b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "535e351a_1d5e61d3",
        "filename": "tools/testrunner/testproc/shard.py",
        "patchSetId": 26
      },
      "lineNbr": 23,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2022-06-11T13:48:30Z",
      "side": 1,
      "message": "Maybe also hide this myid - 1 operation in shard_info? So that all calculations are in one place.\n\nWe need to be careful not to have an off-by-1 error in this. E.g. something that results in us testing shards 0, 0, 1, 2 instead of 0, 1, 2, 3... I\u0027m not sure if the tests are rich enough to catch this.",
      "range": {
        "startLine": 23,
        "startChar": 4,
        "endLine": 23,
        "endChar": 15
      },
      "revId": "c23ee80f7c04e96350583bb053a53066d5823b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "673c9fdc_ac4cf78c",
        "filename": "tools/testrunner/utils/augmented_options.py",
        "patchSetId": 26
      },
      "lineNbr": 5,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2022-06-11T13:48:30Z",
      "side": 1,
      "message": "nit: alpha sort",
      "revId": "c23ee80f7c04e96350583bb053a53066d5823b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e742e55a_8448a090",
        "filename": "tools/testrunner/utils/augmented_options.py",
        "patchSetId": 26
      },
      "lineNbr": 35,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2022-06-11T13:48:30Z",
      "side": 1,
      "message": "It is a bit hard to reason where this comes from. So this is initialized because we inherit from optparse.Values and create objects solely through calling \"augment\" right? This deserves some more commenting...",
      "range": {
        "startLine": 35,
        "startChar": 18,
        "endLine": 35,
        "endChar": 32
      },
      "revId": "c23ee80f7c04e96350583bb053a53066d5823b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab5fe0ae_d9aec919",
        "filename": "tools/testrunner/utils/augmented_options.py",
        "patchSetId": 26
      },
      "lineNbr": 58,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2022-06-11T13:48:30Z",
      "side": 1,
      "message": "Not so sure if I like this move here. Before it was in the fuzzer test proc, together where every fuzzer type is defined. Now it\u0027s more scattered and you need to touch multiple files to add a new fuzzer type.",
      "range": {
        "startLine": 58,
        "startChar": 2,
        "endLine": 58,
        "endChar": 27
      },
      "revId": "c23ee80f7c04e96350583bb053a53066d5823b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fdf5024_ed54cfee",
        "filename": "tools/testrunner/utils/test_utils.py",
        "patchSetId": 26
      },
      "lineNbr": 39,
      "author": {
        "id": 1368998
      },
      "writtenOn": "2022-06-04T08:55:06Z",
      "side": 1,
      "message": "notice the simplified test data copy",
      "range": {
        "startLine": 39,
        "startChar": 4,
        "endLine": 39,
        "endChar": 13
      },
      "revId": "c23ee80f7c04e96350583bb053a53066d5823b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebd90073_544342b9",
        "filename": "tools/testrunner/utils/test_utils.py",
        "patchSetId": 26
      },
      "lineNbr": 76,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2022-06-11T13:48:30Z",
      "side": 1,
      "message": "Please add proper doc string to all new and not self-explanatory functions in new files.",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 51
      },
      "revId": "c23ee80f7c04e96350583bb053a53066d5823b46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}