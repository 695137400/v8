{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "78c18636_acd641e4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-11-26T11:57:15Z",
      "side": 1,
      "message": "Oh, and please add some description here. If it\u0027s not too much hassle, it would even be nice to land the LiftoffCondition refactoring as a separate CL, and then do the s390 stuff on top of that.",
      "revId": "5a1d49f1843aba49bdce4c6b0d4d40c1ad71f023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dee70b78_8c6580a6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1453398
      },
      "writtenOn": "2020-11-26T15:06:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "78c18636_acd641e4",
      "revId": "5a1d49f1843aba49bdce4c6b0d4d40c1ad71f023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0944b44_cdb81f6e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-11-26T11:54:43Z",
      "side": 1,
      "message": "Thanks, the introduction of LiftoffCondition indeed seems to be a good change.\n\nLeft some comments, some apply to all touched architectures even though I only added them once.",
      "revId": "5a1d49f1843aba49bdce4c6b0d4d40c1ad71f023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43eda4aa_bd68638f",
        "filename": "src/wasm/baseline/arm/liftoff-assembler-arm.h",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-11-26T11:54:43Z",
      "side": 1,
      "message": "In all those switches, please remove the default label. This will give us a warning if a case is missed, which shouldn\u0027t be the case right now.",
      "revId": "5a1d49f1843aba49bdce4c6b0d4d40c1ad71f023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7bc7d790_39454320",
        "filename": "src/wasm/baseline/arm/liftoff-assembler-arm.h",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1453398
      },
      "writtenOn": "2020-11-26T15:06:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43eda4aa_bd68638f",
      "revId": "5a1d49f1843aba49bdce4c6b0d4d40c1ad71f023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa8ea15a_675c7b12",
        "filename": "src/wasm/baseline/arm/liftoff-assembler-arm.h",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-11-26T11:54:43Z",
      "side": 1,
      "message": "It should be possible to remove this code. The compiler should conclude that the switch does never fall through to here.\n\nIf I am wrong, then please put something like this instead (copied from similar switches):\n#if V8_HAS_CXX14_CONSTEXPR\n      UNREACHABLE();\n#else\n      // Return something for older compilers.\n      return static_cast\u003cCondition\u003e(-1;)\n#endif",
      "revId": "5a1d49f1843aba49bdce4c6b0d4d40c1ad71f023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17d00e3e_33f91c76",
        "filename": "src/wasm/baseline/arm/liftoff-assembler-arm.h",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1453398
      },
      "writtenOn": "2020-11-26T15:06:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "aa8ea15a_675c7b12",
      "revId": "5a1d49f1843aba49bdce4c6b0d4d40c1ad71f023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6d63b74_42e18fc8",
        "filename": "src/wasm/baseline/arm/liftoff-assembler-arm.h",
        "patchSetId": 6
      },
      "lineNbr": 2160,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-11-26T11:54:43Z",
      "side": 1,
      "message": "These DCHECKs can be skipped after addressing the comments above.",
      "revId": "5a1d49f1843aba49bdce4c6b0d4d40c1ad71f023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0d2ac84_2d7d4000",
        "filename": "src/wasm/baseline/arm/liftoff-assembler-arm.h",
        "patchSetId": 6
      },
      "lineNbr": 2160,
      "author": {
        "id": 1453398
      },
      "writtenOn": "2020-11-26T15:06:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c6d63b74_42e18fc8",
      "revId": "5a1d49f1843aba49bdce4c6b0d4d40c1ad71f023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbeb794b_16448307",
        "filename": "src/wasm/baseline/liftoff-assembler-defs.h",
        "patchSetId": 6
      },
      "lineNbr": 88,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-11-26T11:54:43Z",
      "side": 1,
      "message": "Please move this to liftoff-assembler.h. Best place is probably right before the definition of LiftoffAssembler.",
      "revId": "5a1d49f1843aba49bdce4c6b0d4d40c1ad71f023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37cab780_cc25b761",
        "filename": "src/wasm/baseline/liftoff-assembler-defs.h",
        "patchSetId": 6
      },
      "lineNbr": 88,
      "author": {
        "id": 1453398
      },
      "writtenOn": "2020-11-26T15:06:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cbeb794b_16448307",
      "revId": "5a1d49f1843aba49bdce4c6b0d4d40c1ad71f023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2cd18224_0cbe3bdd",
        "filename": "src/wasm/baseline/liftoff-assembler.h",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-11-26T11:54:43Z",
      "side": 1,
      "message": "This is not really assembler functionality. It could be a static function, and just be named \"Negate\".\nThe declaration order in this file would then be:\nenum LiftoffCondition {...};\nLiftoffCondition Negate(LiftoffCondition) {...}\nclass LiftoffAssembler ...",
      "revId": "5a1d49f1843aba49bdce4c6b0d4d40c1ad71f023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29e4229d_cc54f23c",
        "filename": "src/wasm/baseline/liftoff-assembler.h",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1453398
      },
      "writtenOn": "2020-11-26T15:06:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2cd18224_0cbe3bdd",
      "revId": "5a1d49f1843aba49bdce4c6b0d4d40c1ad71f023",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}