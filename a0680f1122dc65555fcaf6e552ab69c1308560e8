{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2dbe0d1a_4ea331e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1531727
      },
      "writtenOn": "2022-07-04T05:07:57Z",
      "side": 1,
      "message": "According to Igor\u0027s suggestion, I split this CL into two parts, here is the first CL for moving PKU implements from WASM to OS lib. PTAL, thanks!",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33640cff_fad09a69",
        "filename": "src/base/platform/platform-posix.cc",
        "patchSetId": 14
      },
      "lineNbr": 1262,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-07-05T11:26:56Z",
      "side": 1,
      "message": "Please use DEFINE_LAZY_LEAKY_OBJECT_GETTER machinery to be on the thread safe side.\nSee GetPlatformPageAllocator() implementation for example.",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "038ddf5a_e3225ce7",
        "filename": "src/base/platform/platform-posix.cc",
        "patchSetId": 14
      },
      "lineNbr": 1262,
      "author": {
        "id": 1531727
      },
      "writtenOn": "2022-07-06T07:20:41Z",
      "side": 1,
      "message": "Using DEFINE_LAZY_LEAKY_OBJECT_GETTER instead of singleton, and move initilization function into PKU construtor.",
      "parentUuid": "33640cff_fad09a69",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08798065_c53f4a19",
        "filename": "src/base/platform/platform-posix.cc",
        "patchSetId": 14
      },
      "lineNbr": 1262,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-07-06T18:38:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "038ddf5a_e3225ce7",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e65623f_b9b0ecc3",
        "filename": "src/base/platform/platform-posix.cc",
        "patchSetId": 14
      },
      "lineNbr": 1305,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-07-05T11:26:56Z",
      "side": 1,
      "message": "DCHECK_EQ(0, reinterpret_cast\u003cuintptr_t\u003e(address) % CommitPageSize());\n  DCHECK_EQ(0, size % CommitPageSize());",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "894f68b2_8c8e99fa",
        "filename": "src/base/platform/platform-posix.cc",
        "patchSetId": 14
      },
      "lineNbr": 1305,
      "author": {
        "id": 1531727
      },
      "writtenOn": "2022-07-06T07:20:41Z",
      "side": 1,
      "message": "Done, and may I remove this TODO comment?",
      "parentUuid": "0e65623f_b9b0ecc3",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce1b819c_4258e208",
        "filename": "src/base/platform/platform-posix.cc",
        "patchSetId": 14
      },
      "lineNbr": 1305,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-07-14T17:40:48Z",
      "side": 1,
      "message": "My comment is not relevant anymore.",
      "parentUuid": "894f68b2_8c8e99fa",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ceff6db5_5a28ce79",
        "filename": "src/base/platform/platform-posix.h",
        "patchSetId": 14
      },
      "lineNbr": 33,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-07-05T11:26:56Z",
      "side": 1,
      "message": "Please put the public section before private.",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbad3618_c3c396d4",
        "filename": "src/base/platform/platform-posix.h",
        "patchSetId": 14
      },
      "lineNbr": 33,
      "author": {
        "id": 1531727
      },
      "writtenOn": "2022-07-06T07:20:41Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "ceff6db5_5a28ce79",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96eb4494_06d5dd13",
        "filename": "src/base/platform/platform-posix.h",
        "patchSetId": 14
      },
      "lineNbr": 33,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-07-06T18:38:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cbad3618_c3c396d4",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75e5703e_f7d24ca8",
        "filename": "src/base/platform/platform-posix.h",
        "patchSetId": 14
      },
      "lineNbr": 56,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-07-05T11:26:56Z",
      "side": 1,
      "message": "Please move method declarations before fields.",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ede412bd_2f877e69",
        "filename": "src/base/platform/platform-posix.h",
        "patchSetId": 14
      },
      "lineNbr": 56,
      "author": {
        "id": 1531727
      },
      "writtenOn": "2022-07-06T07:20:41Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "75e5703e_f7d24ca8",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13a839fc_dcc1d0c2",
        "filename": "src/base/platform/platform-posix.h",
        "patchSetId": 14
      },
      "lineNbr": 56,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-07-06T18:38:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ede412bd_2f877e69",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fffdcc9_be64d9e8",
        "filename": "src/common/code-memory-access-inl.h",
        "patchSetId": 14
      },
      "lineNbr": 76,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-07-05T11:26:56Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83e50eaf_eba4567d",
        "filename": "src/common/code-memory-access-inl.h",
        "patchSetId": 14
      },
      "lineNbr": 76,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-07-18T11:50:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9fffdcc9_be64d9e8",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6fe79f77_f981bd85",
        "filename": "src/common/code-memory-access-inl.h",
        "patchSetId": 14
      },
      "lineNbr": 76,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-07-18T11:50:16Z",
      "side": 1,
      "message": "Not relevant anymore.",
      "parentUuid": "9fffdcc9_be64d9e8",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "750cb219_eda86892",
        "filename": "src/libplatform/default-platform.cc",
        "patchSetId": 14
      },
      "lineNbr": 51,
      "author": {
        "id": 1531727
      },
      "writtenOn": "2022-07-04T05:07:57Z",
      "side": 1,
      "message": "PKU was initialized at here, is it a suitable place to initialize it? PTAL, thanks!",
      "range": {
        "startLine": 51,
        "startChar": 2,
        "endLine": 51,
        "endChar": 46
      },
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce224b27_9138cde2",
        "filename": "src/libplatform/default-platform.cc",
        "patchSetId": 14
      },
      "lineNbr": 51,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-07-06T18:38:28Z",
      "side": 1,
      "message": "OS::Initialize() in platform-posix.cc seems to be a better place to initialize the PKU stuff.",
      "parentUuid": "750cb219_eda86892",
      "range": {
        "startLine": 51,
        "startChar": 2,
        "endLine": 51,
        "endChar": 46
      },
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50481175_66b872e6",
        "filename": "src/libplatform/default-platform.cc",
        "patchSetId": 14
      },
      "lineNbr": 51,
      "author": {
        "id": 1531727
      },
      "writtenOn": "2022-07-07T09:23:34Z",
      "side": 1,
      "message": "It seems like OS::Initialize() will be invoked after created thread, we have to initialize PKU before creating any child thread.\nBecasue child thread will copy permisson from parent thread, if we don\u0027t initialized PKU, the permission in parent thread may be non access, in that scenario, we create child thread firstly then initialize PKU, the child thread may not have read access for any memory which was bound to PKU (We will not add read permission to a chunck of memory specially), which may cause a segment fault.\nIs the child threads initialization dependent on how embedder invoke v8?",
      "parentUuid": "ce224b27_9138cde2",
      "range": {
        "startLine": 51,
        "startChar": 2,
        "endLine": 51,
        "endChar": 46
      },
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba62b716_4741e8e3",
        "filename": "src/libplatform/default-platform.cc",
        "patchSetId": 14
      },
      "lineNbr": 51,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-07-12T13:23:31Z",
      "side": 1,
      "message": "Indeed, OS::Initialize() might be a bit too late. Currently, I\u0027m thinking about PageAllocatorInitializer and this change should be a part of my CL.",
      "parentUuid": "50481175_66b872e6",
      "range": {
        "startLine": 51,
        "startChar": 2,
        "endLine": 51,
        "endChar": 46
      },
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed7efb04_9cda4e7b",
        "filename": "src/libplatform/default-platform.cc",
        "patchSetId": 14
      },
      "lineNbr": 51,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-07-14T17:40:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ba62b716_4741e8e3",
      "range": {
        "startLine": 51,
        "startChar": 2,
        "endLine": 51,
        "endChar": 46
      },
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5fa9f08_1b0c2e6e",
        "filename": "src/wasm/wasm-code-manager.cc",
        "patchSetId": 14
      },
      "lineNbr": 1945,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-07-05T11:26:56Z",
      "side": 1,
      "message": "I think you can simplify the code if you move the \n  #if V8_HAS_PKU_JIT_WRITE_PROTECT\ninside if() since MemoryProtectionKeysEnabled() implies V8_HAS_PKU_JIT_WRITE_PROTECT.\nThen the \"#else\" part will be merged with the \"else\" block.",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69c1a5ca_5fa1867e",
        "filename": "src/wasm/wasm-code-manager.cc",
        "patchSetId": 14
      },
      "lineNbr": 1945,
      "author": {
        "id": 1531727
      },
      "writtenOn": "2022-07-06T07:20:41Z",
      "side": 1,
      "message": "Is this OK?",
      "parentUuid": "f5fa9f08_1b0c2e6e",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd87281b_e0d44303",
        "filename": "src/wasm/wasm-code-manager.cc",
        "patchSetId": 14
      },
      "lineNbr": 1945,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-07-06T18:38:28Z",
      "side": 1,
      "message": "Yes!",
      "parentUuid": "69c1a5ca_5fa1867e",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d6fb8e0_bf7d7550",
        "filename": "src/wasm/wasm-code-manager.cc",
        "patchSetId": 14
      },
      "lineNbr": 2166,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-07-05T11:26:56Z",
      "side": 1,
      "message": "Maybe it\u0027s better to cache the result of this computation in a boolean field to avoid calling the OS function since both the predicate and the flag value are not supposed to be changed at runtime.\n\nClemens, WDYT?",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e38729fd_67b72793",
        "filename": "src/wasm/wasm-code-manager.cc",
        "patchSetId": 14
      },
      "lineNbr": 2166,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2022-07-18T11:50:16Z",
      "side": 1,
      "message": "Not relevant anymore.",
      "parentUuid": "9d6fb8e0_bf7d7550",
      "revId": "a0680f1122dc65555fcaf6e552ab69c1308560e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}