{
  "comments": [
    {
      "key": {
        "uuid": "31a9e619_5cdf1fdc",
        "filename": "src/parsing/parser-base.h",
        "patchSetId": 6
      },
      "lineNbr": 2959,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2018-06-25T20:16:21Z",
      "side": 1,
      "message": "this is a kind of a weird pattern.. I think at one point, simply doing `Accumulate(ExpressionClassifier::AsyncArrowFormalParametersProduction)` before parsing the full arrow function, would have been enough. But doing that now seems to break things pretty badly, so we have this roundabout way of accumulating the error.\n\nThe other option is to insert the error into the parent classifier by inserting into reported_errors_ at index reported_errors_begin_... I think that should work. It\u0027s a bit cleaner maybe, so I\u0027ve added that in a followup patchset, but it\u0027s also possibly a bit slower.",
      "revId": "695ab42fdaf9457f0f527ca3971b5cc6f093e08a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19a1de3e_ec583c65",
        "filename": "src/parsing/parser-base.h",
        "patchSetId": 6
      },
      "lineNbr": 2959,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2018-06-26T01:34:44Z",
      "side": 1,
      "message": "Instead of accumulating the AsyncArrowFormalParametersProduction before parsing the full arrow function, what if you accumulate this production after parsing the arrow function? We can remove the DiscardExpressionClassifier too once you do this.",
      "parentUuid": "31a9e619_5cdf1fdc",
      "revId": "695ab42fdaf9457f0f527ca3971b5cc6f093e08a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}