{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cd763e3b_91fdba61",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1418022
      },
      "writtenOn": "2021-02-02T03:19:49Z",
      "side": 1,
      "message": "Poke ðŸ˜Š",
      "revId": "a1c6be0691e4011d2f3790781e3ea01052844293",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "886207e4_b794e3ed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1418022
      },
      "writtenOn": "2021-02-09T01:00:30Z",
      "side": 1,
      "message": "Poke ðŸ˜Š",
      "revId": "a1c6be0691e4011d2f3790781e3ea01052844293",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26bac71d_9d01680c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-02-09T23:38:43Z",
      "side": 1,
      "message": "I apologise for the delays here :(.\nI will try to locally get some solution working tomorrow and we can schedule a meeting around 17h here if that works with you.",
      "revId": "a1c6be0691e4011d2f3790781e3ea01052844293",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4735669c_4250ed76",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1418022
      },
      "writtenOn": "2021-02-09T23:50:11Z",
      "side": 1,
      "message": "Don\u0027t worry about it :) Let\u0027s meet tmr!",
      "parentUuid": "26bac71d_9d01680c",
      "revId": "a1c6be0691e4011d2f3790781e3ea01052844293",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14e3f4ab_ccec4bc1",
        "filename": "src/libplatform/tracing/recorder-win.cc",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1418022
      },
      "writtenOn": "2021-01-12T19:17:21Z",
      "side": 1,
      "message": "I\u0027m seeing this message in git cl upload: `\u003cregex\u003e is an unapproved C++11 header.  [build/c++11]`. Is there anyway to suppress this message?\n\nThe reason I\u0027m using regex is so that I can recover the script name from method_name. Ideally, I would use script-\u003eGetScriptName(), but that method is implemented in src/api/api.cc. Invoking it from src/libplatform/ leads to an undefined symbol linker error.",
      "revId": "a1c6be0691e4011d2f3790781e3ea01052844293",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "caa20a6c_767a9dc3",
        "filename": "src/libplatform/tracing/recorder-win.cc",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-01-14T09:46:58Z",
      "side": 1,
      "message": "I prefer using the proper APIs for this (after all, you\u0027re accessing already JitCodeEvent which is also defined in the api).\n\nShould we just move the whole recorder to src/instrumentation?",
      "parentUuid": "14e3f4ab_ccec4bc1",
      "revId": "a1c6be0691e4011d2f3790781e3ea01052844293",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e9392af_79ff10d6",
        "filename": "src/libplatform/tracing/recorder-win.cc",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1418022
      },
      "writtenOn": "2021-01-14T20:46:49Z",
      "side": 1,
      "message": "I agree that using the proper APIs would be ideal.\n\nI\u0027m confused why I\u0027m able to access JitCodeEvent but get undefined symbol errors when I invoke the methods of UnboundedScript...\n\nI could move the whole recorder to src/instrumentation, but I run into a similar problem when I compile trace-writer.cc:\n\n```\nlld-link: error: undefined symbol: public: static bool __cdecl v8::internal::instrumentation::Recorder::IsEnabled(void)\n\u003e\u003e\u003e referenced by .\\..\\..\\src\\libplatform\\tracing\\trace-writer.cc:204\n\u003e\u003e\u003e               obj/v8_libplatform/trace-writer.obj:(public: virtual void __cdecl v8::platform::tracing::SystemInstrumentationTraceWriter::AppendTraceEvent(class v8::platform\n```",
      "parentUuid": "caa20a6c_767a9dc3",
      "revId": "a1c6be0691e4011d2f3790781e3ea01052844293",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19473b96_0a8e3698",
        "filename": "src/libplatform/tracing/recorder-win.cc",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-01-18T21:17:14Z",
      "side": 1,
      "message": "Sorry, I didn\u0027t have more time to look into this today.\nWill check tomorrow with a colleague.\n\nCould you try modify the DEPS files and see whether you get around the issues by loosening the include restrictions a bit?",
      "parentUuid": "9e9392af_79ff10d6",
      "revId": "a1c6be0691e4011d2f3790781e3ea01052844293",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1d2700f_09e99774",
        "filename": "src/libplatform/tracing/recorder-win.cc",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1418022
      },
      "writtenOn": "2021-01-28T05:30:11Z",
      "side": 1,
      "message": "I was able to use the DEPS file to loosen the presubmit restrictions. But I still haven\u0027t figured out a way to use the APIs defined in api.cc without linker errors.\n\nI spent the last week exploring how v8_libplatform.dll and v8.dll interact, and this is what I\u0027ve concluded (please lmk if any of this is inaccurate):\n\n  - Recorder calls APIs that gather information about scripts. These APIs are declared in v8.h but defined within api.cc, which is linked in v8.dll.\n  - TraceWriter uses Recorder to do event-logging. TraceWriter is declared+defined within v8_libplatform.dll.\n\nIn scenario 1, we link the Recorder within v8_libplatform.dll.\n  - When v8_libplatform.dll is being linked, the symbols for the APIs do not exist, so we throw a linker error.\n\nIn scenario 2, we link the Recorder within v8.dll.\n  - When v8_libplatform.dll is being linked, the symbols for the Recorder do not exist, so we still throw a linker error.\n\nI tried one more iteration of this, namely declaring Recorder inside include/libplatform/v8-tracing.h but defining it within v8.dll. But I run into the same errors as scenario 2.\n\nAny suggestions are welcome. Alternatively, we can meet online if this is easier to explain over video :)",
      "parentUuid": "19473b96_0a8e3698",
      "revId": "a1c6be0691e4011d2f3790781e3ea01052844293",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89faf9ce_b541bc9d",
        "filename": "src/libplatform/tracing/recorder-win.cc",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-02-10T14:47:50Z",
      "side": 1,
      "message": "Let\u0027s split the low-level ETW/tracing interface from the sampler/code-event part.\n\n- tracing/base-etw lives in libplatform/tracing\n- ETWCodeHandler lives in src/diagnostics/etw and deals with the V8 specifics (I think gdb-jit is a good example for this).\n\nThe tracing part is most likely replaced based on who embeds V8, however, the ETWCodeHandler is much more tied to V8 itself (code event handling and potential stack walking).",
      "parentUuid": "b1d2700f_09e99774",
      "revId": "a1c6be0691e4011d2f3790781e3ea01052844293",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f536b156_50216d39",
        "filename": "src/libplatform/tracing/recorder-win.cc",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1418022
      },
      "writtenOn": "2021-02-22T16:51:38Z",
      "side": 1,
      "message": "I\u0027ve split the ETW components from the stack-walking ones. I also register the provider in init/v8.cc, when we initialize the platform. Does this look all right?",
      "parentUuid": "89faf9ce_b541bc9d",
      "revId": "a1c6be0691e4011d2f3790781e3ea01052844293",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06b36c52_dab7d6f0",
        "filename": "src/libplatform/tracing/recorder-win.cc",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2021-02-25T17:51:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f536b156_50216d39",
      "revId": "a1c6be0691e4011d2f3790781e3ea01052844293",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}