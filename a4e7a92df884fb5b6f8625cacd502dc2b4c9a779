{
  "comments": [
    {
      "key": {
        "uuid": "d1180c34_23228199",
        "filename": "src/wasm/baseline/liftoff-compiler.cc",
        "patchSetId": 6
      },
      "lineNbr": 1621,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-05-19T16:19:34Z",
      "side": 1,
      "message": "`let` is from the function-references proposal. Let\u0027s at least add a TODO here that we should use a different bailout reason.",
      "range": {
        "startLine": 1621,
        "startChar": 25,
        "endLine": 1621,
        "endChar": 28
      },
      "revId": "a4e7a92df884fb5b6f8625cacd502dc2b4c9a779",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40cff11d_a5ca434b",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 855,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-05-19T16:39:45Z",
      "side": 1,
      "message": "The fact that the data is held in a {SmallVector} is an implementation detail. Please pass a {Vector\u003cValue\u003e} instead.\n(Also, a {SmallVector} is quite big, so you don\u0027t want to pass it by value.)",
      "revId": "a4e7a92df884fb5b6f8625cacd502dc2b4c9a779",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2386b9a9_d7293209",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 2138,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-05-19T16:19:34Z",
      "side": 1,
      "message": "I think we need a flag check in here somewhere, CHECK_PROTOTYPE_OPCODE(typed_funcref) or so.",
      "range": {
        "startLine": 2138,
        "startChar": 8,
        "endLine": 2138,
        "endChar": 24
      },
      "revId": "a4e7a92df884fb5b6f8625cacd502dc2b4c9a779",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "805e6b2e_edf4f65f",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 2144,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-05-19T16:19:34Z",
      "side": 1,
      "message": "nit: trailing full stop please.",
      "range": {
        "startLine": 2144,
        "startChar": 46,
        "endLine": 2144,
        "endChar": 52
      },
      "revId": "a4e7a92df884fb5b6f8625cacd502dc2b4c9a779",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99f694d8_57125fed",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 2148,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-05-19T16:39:45Z",
      "side": 1,
      "message": "If {DecodeLocals} returns false, it will have set an error already, and any subsequent error will just be ignored. You could just \"break;\" instead.",
      "revId": "a4e7a92df884fb5b6f8625cacd502dc2b4c9a779",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ecd1d56_65b603c9",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 2153,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-05-19T16:19:34Z",
      "side": 1,
      "message": "nit: ArgVector",
      "range": {
        "startLine": 2153,
        "startChar": 10,
        "endLine": 2153,
        "endChar": 14
      },
      "revId": "a4e7a92df884fb5b6f8625cacd502dc2b4c9a779",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d4748fd_3c0eac93",
        "filename": "src/wasm/function-body-decoder-impl.h",
        "patchSetId": 6
      },
      "lineNbr": 2871,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-05-19T16:39:45Z",
      "side": 1,
      "message": "The ZoneVector already contains a count, which is ignored here, since you pass another explicit count.\nIn that case, I would propose passing a {Vector\u003cValueType\u003e} instead of the two parameters. A {Vector\u003cValueType\u003e} is a non-owning view of an array of {ValueType}s. Basically just a {ValueType*} and a size field.",
      "range": {
        "startLine": 2870,
        "startChar": 30,
        "endLine": 2871,
        "endChar": 44
      },
      "revId": "a4e7a92df884fb5b6f8625cacd502dc2b4c9a779",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7162e34_6152772a",
        "filename": "src/wasm/graph-builder-interface.cc",
        "patchSetId": 6
      },
      "lineNbr": 310,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-05-19T16:39:45Z",
      "side": 1,
      "message": "Aren\u0027t you erasing from a *copy* of the locals vector here? I think you have to make the assignment above \"auto\u0026 locals \u003d ...\".\nAnd if this went unnoticed, it looks like tests are missing here.",
      "revId": "a4e7a92df884fb5b6f8625cacd502dc2b4c9a779",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57f86546_61ab7937",
        "filename": "test/cctest/wasm/test-gc.cc",
        "patchSetId": 6
      },
      "lineNbr": 161,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-05-19T16:19:34Z",
      "side": 1,
      "message": "How about a separate test case? You can just copy/paste the boilerplate to set everything up. (And if doing so gives you any nice ideas for how to refactor that to make adding test cases more convenient, then I\u0027d be happy to review a follow-up CL ;-) )",
      "range": {
        "startLine": 161,
        "startChar": 2,
        "endLine": 161,
        "endChar": 15
      },
      "revId": "a4e7a92df884fb5b6f8625cacd502dc2b4c9a779",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7580db9_f18c572d",
        "filename": "test/cctest/wasm/test-gc.cc",
        "patchSetId": 6
      },
      "lineNbr": 215,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-05-19T16:19:34Z",
      "side": 1,
      "message": "Thank you! Good idea.",
      "range": {
        "startLine": 215,
        "startChar": 2,
        "endLine": 215,
        "endChar": 56
      },
      "revId": "a4e7a92df884fb5b6f8625cacd502dc2b4c9a779",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b87706f_23d799a4",
        "filename": "test/common/wasm/wasm-macro-gen.h",
        "patchSetId": 6
      },
      "lineNbr": 461,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-05-19T16:19:34Z",
      "side": 1,
      "message": "I\u0027m not convinced that this is useful to have, as it doesn\u0027t make things easier; but if you like it for consistency, I\u0027m not opposed to that either.",
      "range": {
        "startLine": 461,
        "startChar": 0,
        "endLine": 461,
        "endChar": 31
      },
      "revId": "a4e7a92df884fb5b6f8625cacd502dc2b4c9a779",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6dd7f9a4_1d46cbce",
        "filename": "test/common/wasm/wasm-macro-gen.h",
        "patchSetId": 6
      },
      "lineNbr": 461,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2020-05-19T16:39:45Z",
      "side": 1,
      "message": "+1, this macro only introduces another indirection that makes it harder to understand what is going on.\nAlso, there is kWasmI32 and kLocalI32, and from the name \"WASM_I32_TYPE\" I could not tell which one this is.",
      "parentUuid": "4b87706f_23d799a4",
      "range": {
        "startLine": 461,
        "startChar": 0,
        "endLine": 461,
        "endChar": 31
      },
      "revId": "a4e7a92df884fb5b6f8625cacd502dc2b4c9a779",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}