{
  "comments": [
    {
      "key": {
        "uuid": "f74f9977_c649afd6",
        "filename": "src/heap/stress-scavenge-observer.cc",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-12-06T19:39:57Z",
      "side": 1,
      "message": "nit: sort",
      "range": {
        "startLine": 6,
        "startChar": 10,
        "endLine": 6,
        "endChar": 18
      },
      "revId": "f514dca4943d095c2f39afd7fcc2a2d2458c3b68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63846bf5_08b5e798",
        "filename": "src/heap/stress-scavenge-observer.cc",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-12-06T20:24:01Z",
      "side": 1,
      "message": "It\u0027s the order imposed by the clang format. I guess that .h file corresponding to the current .cc file should be at the top of includes list. Correct me if I\u0027m wrong, but I think I should put empty line between corresponding header and rest of includes, like here:\nhttps://cs.chromium.org/chromium/src/v8/src/heap/heap.cc?type\u003dcs\u0026q\u003dheap.cc\u0026sq\u003dpackage:chromium\u0026l\u003d5\n\nor here:\nhttps://cs.chromium.org/chromium/src/v8/src/heap/incremental-marking-job.cc?type\u003dcs\u0026sq\u003dpackage:chromium\u0026l\u003d5",
      "parentUuid": "f74f9977_c649afd6",
      "range": {
        "startLine": 6,
        "startChar": 10,
        "endLine": 6,
        "endChar": 18
      },
      "revId": "f514dca4943d095c2f39afd7fcc2a2d2458c3b68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb173669_fb0a12aa",
        "filename": "src/heap/stress-scavenge-observer.cc",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-12-06T19:39:57Z",
      "side": 1,
      "message": "should not some default argument be passed? Or is it 0 automatically?",
      "range": {
        "startLine": 18,
        "startChar": 25,
        "endLine": 18,
        "endChar": 35
      },
      "revId": "f514dca4943d095c2f39afd7fcc2a2d2458c3b68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cbcff0e_48004b59",
        "filename": "src/heap/stress-scavenge-observer.cc",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-12-06T20:24:01Z",
      "side": 1,
      "message": "Default value (0) is defined in the header file.",
      "parentUuid": "fb173669_fb0a12aa",
      "range": {
        "startLine": 18,
        "startChar": 25,
        "endLine": 18,
        "endChar": 35
      },
      "revId": "f514dca4943d095c2f39afd7fcc2a2d2458c3b68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1817fc13_b8802e7c",
        "filename": "src/heap/stress-scavenge-observer.cc",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-12-06T19:39:57Z",
      "side": 1,
      "message": "Is this size already part of heap_.new_space()-\u003eSize() when this is called?",
      "range": {
        "startLine": 28,
        "startChar": 34,
        "endLine": 28,
        "endChar": 45
      },
      "revId": "f514dca4943d095c2f39afd7fcc2a2d2458c3b68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bb23ec5_844ae73d",
        "filename": "src/heap/stress-scavenge-observer.cc",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-12-06T20:24:01Z",
      "side": 1,
      "message": "Yes:\nhttps://cs.chromium.org/chromium/src/v8/src/heap/heap.h?gsn\u003dAllocationStep\u0026l\u003d2812\n\nI understand that the allocated space may be bigger because of the alignment fillers, but I\u0027m not sure what right-trimming means here.",
      "parentUuid": "1817fc13_b8802e7c",
      "range": {
        "startLine": 28,
        "startChar": 34,
        "endLine": 28,
        "endChar": 45
      },
      "revId": "f514dca4943d095c2f39afd7fcc2a2d2458c3b68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}