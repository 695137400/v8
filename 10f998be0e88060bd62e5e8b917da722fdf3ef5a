{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9c199175_cc2f652f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-01-08T16:36:46Z",
      "side": 1,
      "message": "Leszek, PTAL src/maglev. I\u0027ve put a bunch of codegen related things behind `#if V8_ENABLE_MAGLEV`. Maybe using an alias of this called `V8_ENABLE_BACKEND` might be clearer, not sure.\n\nNico, PTAL src/compiler.",
      "revId": "10f998be0e88060bd62e5e8b917da722fdf3ef5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86de5ae6_aecc36a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2024-01-10T13:44:23Z",
      "side": 1,
      "message": "Do we have any tests that work with this already?",
      "revId": "10f998be0e88060bd62e5e8b917da722fdf3ef5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1db6e3b9_2006108e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-01-10T13:52:33Z",
      "side": 1,
      "message": "Yea good point. With this skeleton, we can compile a simple function that contains a Smi addition (and it correctly deopts when a non-Smi is passed). I\u0027ll add this test somewhere.",
      "parentUuid": "86de5ae6_aecc36a3",
      "revId": "10f998be0e88060bd62e5e8b917da722fdf3ef5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4abf9be_da3c7ebe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2024-01-10T14:00:44Z",
      "side": 1,
      "message": "maybe `turboshaft-frontend-test.js` can be reused",
      "parentUuid": "1db6e3b9_2006108e",
      "revId": "10f998be0e88060bd62e5e8b917da722fdf3ef5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b677061a_46218ed7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-01-11T14:40:19Z",
      "side": 1,
      "message": "I used another one so that SimplifiedLowering and the maglev graph builder can have different states and are not blocked by one another.",
      "parentUuid": "c4abf9be_da3c7ebe",
      "revId": "10f998be0e88060bd62e5e8b917da722fdf3ef5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49a5d633_de07bb37",
        "filename": "BUILD.bazel",
        "patchSetId": 12
      },
      "lineNbr": 3197,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2024-01-11T08:48:05Z",
      "side": 1,
      "message": "Maybe we should add Maglev to Bazel (since it is pretty stable now). I\u0027ll do that in a different CL.",
      "range": {
        "startLine": 3178,
        "startChar": 0,
        "endLine": 3197,
        "endChar": 51
      },
      "revId": "10f998be0e88060bd62e5e8b917da722fdf3ef5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f26aa820_7a02388b",
        "filename": "BUILD.bazel",
        "patchSetId": 12
      },
      "lineNbr": 3197,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-01-11T14:40:19Z",
      "side": 1,
      "message": "Sounds good, let me know once that\u0027s done and I\u0027ll rebase :)",
      "parentUuid": "49a5d633_de07bb37",
      "range": {
        "startLine": 3178,
        "startChar": 0,
        "endLine": 3197,
        "endChar": 51
      },
      "revId": "10f998be0e88060bd62e5e8b917da722fdf3ef5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9417ee1_d358dfd0",
        "filename": "BUILD.bazel",
        "patchSetId": 12
      },
      "lineNbr": 3197,
      "author": {
        "id": 1368302
      },
      "writtenOn": "2024-01-11T14:54:39Z",
      "side": 1,
      "message": "https://chromium-review.googlesource.com/c/v8/v8/+/5189446",
      "parentUuid": "f26aa820_7a02388b",
      "range": {
        "startLine": 3178,
        "startChar": 0,
        "endLine": 3197,
        "endChar": 51
      },
      "revId": "10f998be0e88060bd62e5e8b917da722fdf3ef5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16edc65e_8507bb4a",
        "filename": "src/compiler/turboshaft/maglev-graph-building-phase.cc",
        "patchSetId": 12
      },
      "lineNbr": 222,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2024-01-10T13:44:23Z",
      "side": 1,
      "message": "`NodeBase` seems to have an `id`? What about using this as an index into a sequential data structure rather than hash table?",
      "range": {
        "startLine": 222,
        "startChar": 2,
        "endLine": 222,
        "endChar": 18
      },
      "revId": "10f998be0e88060bd62e5e8b917da722fdf3ef5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a76dfbd_1fcfa10e",
        "filename": "src/compiler/turboshaft/maglev-graph-building-phase.cc",
        "patchSetId": 12
      },
      "lineNbr": 222,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-01-10T13:52:33Z",
      "side": 1,
      "message": "The `id` of `NodeBase` is set later in Maglev (when computing uses), so unfortunately, it\u0027s not usable here.",
      "parentUuid": "16edc65e_8507bb4a",
      "range": {
        "startLine": 222,
        "startChar": 2,
        "endLine": 222,
        "endChar": 18
      },
      "revId": "10f998be0e88060bd62e5e8b917da722fdf3ef5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "872cf875_867c379f",
        "filename": "src/compiler/turboshaft/maglev-graph-building-phase.cc",
        "patchSetId": 12
      },
      "lineNbr": 222,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2024-01-10T14:00:44Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "0a76dfbd_1fcfa10e",
      "range": {
        "startLine": 222,
        "startChar": 2,
        "endLine": 222,
        "endChar": 18
      },
      "revId": "10f998be0e88060bd62e5e8b917da722fdf3ef5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd13cb7e_727e3628",
        "filename": "src/flags/flag-definitions.h",
        "patchSetId": 12
      },
      "lineNbr": 1291,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2024-01-10T13:44:23Z",
      "side": 1,
      "message": "This supports barely anything right now. Are you sure we want this implication?",
      "range": {
        "startLine": 1291,
        "startChar": 42,
        "endLine": 1291,
        "endChar": 62
      },
      "revId": "10f998be0e88060bd62e5e8b917da722fdf3ef5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54f8d520_3f4b1a5e",
        "filename": "src/flags/flag-definitions.h",
        "patchSetId": 12
      },
      "lineNbr": 1291,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-01-10T13:52:33Z",
      "side": 1,
      "message": "I could remove it, but we\u0027ll need something to lower JS operations to Simplified operations then. I used `turboshaft_frontend` because it exists, but we could also add an additional temporary reducer so that adding more JS operations doesn\u0027t pollute SimplifiedLowering. For this CL, it\u0027s probably fine to remove the implication though, since the graph builder basically only supports Smi addition.",
      "parentUuid": "dd13cb7e_727e3628",
      "range": {
        "startLine": 1291,
        "startChar": 42,
        "endLine": 1291,
        "endChar": 62
      },
      "revId": "10f998be0e88060bd62e5e8b917da722fdf3ef5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0a73f8a_9b358ff2",
        "filename": "src/flags/flag-definitions.h",
        "patchSetId": 12
      },
      "lineNbr": 1291,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2024-01-10T14:00:44Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "54f8d520_3f4b1a5e",
      "range": {
        "startLine": 1291,
        "startChar": 42,
        "endLine": 1291,
        "endChar": 62
      },
      "revId": "10f998be0e88060bd62e5e8b917da722fdf3ef5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3b5e9dd_b097fcbb",
        "filename": "src/flags/flag-definitions.h",
        "patchSetId": 12
      },
      "lineNbr": 1291,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-01-11T14:40:19Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "b0a73f8a_9b358ff2",
      "range": {
        "startLine": 1291,
        "startChar": 42,
        "endLine": 1291,
        "endChar": 62
      },
      "revId": "10f998be0e88060bd62e5e8b917da722fdf3ef5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3678505b_998260f3",
        "filename": "src/maglev/maglev-compilation-info.h",
        "patchSetId": 12
      },
      "lineNbr": 53,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2024-01-10T13:44:23Z",
      "side": 1,
      "message": "nit: `return {new MaglevCompilationInfo(...)};`",
      "range": {
        "startLine": 53,
        "startChar": 11,
        "endLine": 53,
        "endChar": 50
      },
      "revId": "10f998be0e88060bd62e5e8b917da722fdf3ef5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5157b59a_d992bee0",
        "filename": "src/maglev/maglev-compilation-info.h",
        "patchSetId": 12
      },
      "lineNbr": 53,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-01-15T09:59:35Z",
      "side": 1,
      "message": "I\u0027ve just reused what Maglev already does a few lines below. I think that for consistency, it\u0027s better to keep it like that.",
      "parentUuid": "3678505b_998260f3",
      "range": {
        "startLine": 53,
        "startChar": 11,
        "endLine": 53,
        "endChar": 50
      },
      "revId": "10f998be0e88060bd62e5e8b917da722fdf3ef5a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}