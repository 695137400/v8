{
  "comments": [
    {
      "key": {
        "uuid": "44fa8e1c_7d6680d3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2020-07-20T16:01:09Z",
      "side": 1,
      "message": "Toon, Ulan, Igor, PTAL at this real code version of the concurrent string table design doc.\n\nThis of course doesn\u0027t actually implement any concurrency yet, since it doesn\u0027t use LocalHeap, but I want to see if there\u0027s a performance impact.",
      "revId": "f579c719269369e8d5c4bb2977cfc627ca9180bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a09d5110_47278334",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2020-07-21T09:38:09Z",
      "side": 1,
      "message": "lgtm with nits",
      "revId": "f579c719269369e8d5c4bb2977cfc627ca9180bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4827d863_64301a41",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-07-21T12:54:29Z",
      "side": 1,
      "message": "lgtm",
      "revId": "f579c719269369e8d5c4bb2977cfc627ca9180bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9290d17d_423c79b8",
        "filename": "src/objects/objects.cc",
        "patchSetId": 2
      },
      "lineNbr": 5920,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2020-07-21T09:38:09Z",
      "side": 1,
      "message": "the_hole seems to be used below.",
      "revId": "f579c719269369e8d5c4bb2977cfc627ca9180bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcaf15bb_c9bc338b",
        "filename": "src/objects/objects.cc",
        "patchSetId": 2
      },
      "lineNbr": 5920,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2020-07-21T15:10:36Z",
      "side": 1,
      "message": "Oops, copy \u0026 paste error.",
      "parentUuid": "9290d17d_423c79b8",
      "revId": "f579c719269369e8d5c4bb2977cfc627ca9180bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0cab5ef1_94cb33f3",
        "filename": "src/objects/objects.cc",
        "patchSetId": 2
      },
      "lineNbr": 6087,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2020-07-21T09:38:09Z",
      "side": 1,
      "message": "I wonder, does it make sense to have a non-acquire/release access to the string table? Maybe we should just have synchronized_string_table() accessors instead?",
      "revId": "f579c719269369e8d5c4bb2977cfc627ca9180bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94bb7ba3_1c85667e",
        "filename": "src/objects/objects.cc",
        "patchSetId": 2
      },
      "lineNbr": 6087,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2020-07-21T10:08:43Z",
      "side": 1,
      "message": "this access is actually a bit funky, since it provides a Handle\u003cStringTable\u003e, not a StringTable. It actually returns a Handle whose backing is that entry in the roots array; and only on Handle deref does it read the string table from that location. So, to make the access \"synchronized\" we\u0027d need a SynchronizedHandle, not just a synchronized accessor.\n\nHowever, in this case it doesn\u0027t matter, since the writes to the string table root entry are guarded by the mutex, so un-synchronized accesses inside the lock are fine. The only interesting part is that the store has to be Release, so that other reads _outside_ the lock can read it.\n\nTechnically, since false-negatives are ok, none of these accesses actually need acq-rel semantics, it just seemed like the right thing to do. Maybe it\u0027s not?",
      "parentUuid": "0cab5ef1_94cb33f3",
      "revId": "f579c719269369e8d5c4bb2977cfc627ca9180bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa2b7375_c5e4194a",
        "filename": "src/objects/objects.cc",
        "patchSetId": 2
      },
      "lineNbr": 6087,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2020-07-21T10:19:52Z",
      "side": 1,
      "message": "Yeah, very funky! Given that we are accessing this root value in such a non-trivial way, maybe we should not have handle-returning-getter at all, just to avoid surprises.\nAlthough we are reading behind the lock, I have a gut feeling that TSAN may complain about release stores followed by normal reads. Please run TSAN try job too.",
      "parentUuid": "94bb7ba3_1c85667e",
      "revId": "f579c719269369e8d5c4bb2977cfc627ca9180bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0f057c3_d1d6ecce",
        "filename": "src/objects/objects.cc",
        "patchSetId": 2
      },
      "lineNbr": 6087,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-07-21T12:54:29Z",
      "side": 1,
      "message": "The release store happens also under the mutex, so it should be okay.\n\nI would avoid \"just-in-case\" acquire/release annotations if they do not help with the synchronization.\n\n+1 to running TSAN try-job anyway.",
      "parentUuid": "fa2b7375_c5e4194a",
      "revId": "f579c719269369e8d5c4bb2977cfc627ca9180bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "046e74af_a065af1a",
        "filename": "src/objects/objects.cc",
        "patchSetId": 2
      },
      "lineNbr": 6087,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2020-07-21T13:56:12Z",
      "side": 1,
      "message": "This is less \"just-in-case\", and more \"less false negatives\" -- which really just makes it a tradeoff of read vs write performance I guess.\n\nTSAN bots passed btw.",
      "parentUuid": "b0f057c3_d1d6ecce",
      "revId": "f579c719269369e8d5c4bb2977cfc627ca9180bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40f08556_7f9d8d40",
        "filename": "src/objects/objects.cc",
        "patchSetId": 2
      },
      "lineNbr": 6087,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-07-21T13:58:23Z",
      "side": 1,
      "message": "TSAN understands mutexes. I don\u0027t think there would be any false negatives here.",
      "parentUuid": "046e74af_a065af1a",
      "revId": "f579c719269369e8d5c4bb2977cfc627ca9180bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "293bfbb8_96aedd9e",
        "filename": "src/objects/objects.cc",
        "patchSetId": 2
      },
      "lineNbr": 6087,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2020-07-21T14:00:23Z",
      "side": 1,
      "message": "Sorry, I meant false negatives in the string lookup (i.e. misses) which then have to fall into the locked slow path. Relaxing the acq-rel load-store would mean that threads might miss other threads resizing the string table.",
      "parentUuid": "40f08556_7f9d8d40",
      "revId": "f579c719269369e8d5c4bb2977cfc627ca9180bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22842d38_633b0c8b",
        "filename": "src/objects/objects.cc",
        "patchSetId": 2
      },
      "lineNbr": 6087,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-07-21T14:38:21Z",
      "side": 1,
      "message": "The acq/rel accesses in the current state lgtm. I think they all are necessary.\nI was opposing introducing more acq/rel in addition to that.",
      "parentUuid": "293bfbb8_96aedd9e",
      "revId": "f579c719269369e8d5c4bb2977cfc627ca9180bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e565457e_067161f1",
        "filename": "src/objects/objects.cc",
        "patchSetId": 2
      },
      "lineNbr": 6087,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2020-07-21T15:10:36Z",
      "side": 1,
      "message": "I see, thanks!",
      "parentUuid": "22842d38_633b0c8b",
      "revId": "f579c719269369e8d5c4bb2977cfc627ca9180bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}