{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1a66d7a9_19589d39",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2023-06-07T08:21:53Z",
      "side": 1,
      "message": "@ishell@chromium.org: PTAL.\n@leszeks@chromium.org: See maglev-related comment in the mjsunit test.",
      "revId": "c12f857821afc19a9b2b7051b212215be2c482a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c5c6923_8c9728cc",
        "filename": "test/mjsunit/unary-op-throws-feedback.js",
        "patchSetId": 4
      },
      "lineNbr": 6,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2023-06-07T08:21:53Z",
      "side": 1,
      "message": "@leszeks@chromium.org: What\u0027s the view on deopt loops in maglev? Is it OK as at some point in time TurboFan will take over, so eventually we will stop recompiling over and over again?",
      "range": {
        "startLine": 6,
        "startChar": 10,
        "endLine": 6,
        "endChar": 56
      },
      "revId": "c12f857821afc19a9b2b7051b212215be2c482a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c0be3fa_819c3324",
        "filename": "test/mjsunit/unary-op-throws-feedback.js",
        "patchSetId": 4
      },
      "lineNbr": 6,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2023-06-07T08:56:34Z",
      "side": 1,
      "message": "In general, we don\u0027t want deopt loops in maglev, though there as some known cases around loop phis. In this case, it seems avoidable to deopt loop here though? Why does TF not deopt loop but maglev does?",
      "parentUuid": "1c5c6923_8c9728cc",
      "range": {
        "startLine": 6,
        "startChar": 10,
        "endLine": 6,
        "endChar": 56
      },
      "revId": "c12f857821afc19a9b2b7051b212215be2c482a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9217073_2d6ec286",
        "filename": "test/mjsunit/unary-op-throws-feedback.js",
        "patchSetId": 4
      },
      "lineNbr": 6,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2023-06-07T09:47:09Z",
      "side": 1,
      "message": "So, prior to this change TurboFan also had a deopt loop, that\u0027s fixed by the changes in `unary-op-assembler.cc` to also update the feedback in the exception case.\n\nThis is what maglev generates for the `++symbol`:\n```\n    [...]\n    9/9: üê¢ GenericIncrement [v7/n7:[rax|R|t]] ‚Üí [rax|R|t], live range: [9-12]\n         ‚Ü≥ lazy @4 (3 live vars)\n    [...]\n```\nDoes the second line result in deopt in case of an exception or only if the builtin triggers a lazy deopt? (I don\u0027t know how builtins tell their caller to deopt.)\n`GenericIncrement` seems to call the same `UnaryOpWithFeedback` that is called by the interpreter, so not sure why this would deopt in maglev?",
      "parentUuid": "2c0be3fa_819c3324",
      "range": {
        "startLine": 6,
        "startChar": 10,
        "endLine": 6,
        "endChar": 56
      },
      "revId": "c12f857821afc19a9b2b7051b212215be2c482a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8234ea46_c3026687",
        "filename": "test/mjsunit/unary-op-throws-feedback.js",
        "patchSetId": 4
      },
      "lineNbr": 6,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2023-06-07T09:54:51Z",
      "side": 1,
      "message": "I\u0027m also not sure why it would deopt -- are you sure it deopts, and it\u0027s not the `ActiveTierIsTurbofan` check that is failing? Should you be using `assertOptimized` instead?",
      "parentUuid": "c9217073_2d6ec286",
      "range": {
        "startLine": 6,
        "startChar": 10,
        "endLine": 6,
        "endChar": 56
      },
      "revId": "c12f857821afc19a9b2b7051b212215be2c482a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f13a091_447cb5b2",
        "filename": "test/mjsunit/unary-op-throws-feedback.js",
        "patchSetId": 4
      },
      "lineNbr": 6,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2023-06-07T10:01:46Z",
      "side": 1,
      "message": "Well, that is embarrassing, yeah, if we optimize with maglev, `ActiveTierIsTurbofan` certainly doesn\u0027t make any sense...\nI just verified, it works as expected for maglev, so I can remove the flag and we can act as if this never happened. üòÑ",
      "parentUuid": "8234ea46_c3026687",
      "range": {
        "startLine": 6,
        "startChar": 10,
        "endLine": 6,
        "endChar": 56
      },
      "revId": "c12f857821afc19a9b2b7051b212215be2c482a7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}