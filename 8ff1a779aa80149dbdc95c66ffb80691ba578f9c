{
  "comments": [
    {
      "key": {
        "uuid": "cd9ab3ae_7e06ab36",
        "filename": "src/codegen/arm/macro-assembler-arm.cc",
        "patchSetId": 5
      },
      "lineNbr": 1691,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2019-09-30T08:59:34Z",
      "side": 1,
      "message": "ideally we\u0027d push this after the done label as well, as debugging is rarer (and less important for performance) than the mismatch argument case, but we can look into that later.",
      "range": {
        "startLine": 1688,
        "startChar": 1,
        "endLine": 1691,
        "endChar": 26
      },
      "revId": "8ff1a779aa80149dbdc95c66ffb80691ba578f9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7cf3a29c_d598afae",
        "filename": "src/codegen/arm/macro-assembler-arm.cc",
        "patchSetId": 5
      },
      "lineNbr": 1691,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2019-09-30T11:01:08Z",
      "side": 1,
      "message": "I\u0027m not sure how we could push it after done, since done is a fallthrough to the code that comes next after InvokeFunctionCode (assuming this was called with InvokeFlag::CALL_FUNCTION instead of JUMP_FUNCTION) and if it was JUMP_FUNCTION then this is the ideal place for it since there is no executed code after this point.",
      "parentUuid": "cd9ab3ae_7e06ab36",
      "range": {
        "startLine": 1688,
        "startChar": 1,
        "endLine": 1691,
        "endChar": 26
      },
      "revId": "8ff1a779aa80149dbdc95c66ffb80691ba578f9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "833dc6ee_5cfa4555",
        "filename": "src/codegen/arm64/macro-assembler-arm64.cc",
        "patchSetId": 5
      },
      "lineNbr": 2258,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2019-09-30T08:59:34Z",
      "side": 1,
      "message": "Can you check the generated assembly here?\n\ncbnz can only branch 4-130 bytes, so if the intervening code is too long, you might end up generating longer code or with extra branches in the middle of your fast path. It might end up being better to just to do a:\ncmp(x4, 0)\nbnz(\u0026debug_hook)\n\nRoss: Feel free to jump if I\u0027ve got the wrong end of the stick on how this works.",
      "range": {
        "startLine": 2258,
        "startChar": 4,
        "endLine": 2258,
        "endChar": 26
      },
      "revId": "8ff1a779aa80149dbdc95c66ffb80691ba578f9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4f050db_ecc7d4aa",
        "filename": "src/codegen/arm64/macro-assembler-arm64.cc",
        "patchSetId": 5
      },
      "lineNbr": 2258,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2019-09-30T11:01:08Z",
      "side": 1,
      "message": "This is calling the macro-assembler version of Cbnz [1] which does the check as to whether the label is in-range and if not, devolves to the cmp/bnz logic. Given this is a forward jump, I think it will aim to do it in the short range, and insert a veneer jump if we go over the budget. \n\nI agree it is worth looking at the assembly here, but I\u0027m not sure I\u0027d make any change unless it looks really bad compared to cmp/bnz\n\n[1] https://cs.chromium.org/chromium/src/v8/src/codegen/arm64/macro-assembler-arm64.cc?q\u003dCbnz\u0026sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d990",
      "parentUuid": "833dc6ee_5cfa4555",
      "range": {
        "startLine": 2258,
        "startChar": 4,
        "endLine": 2258,
        "endChar": 26
      },
      "revId": "8ff1a779aa80149dbdc95c66ffb80691ba578f9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b422b0ca_710f70f7",
        "filename": "src/codegen/x64/macro-assembler-x64.cc",
        "patchSetId": 5
      },
      "lineNbr": 2307,
      "author": {
        "id": 1204345
      },
      "writtenOn": "2019-09-30T08:59:34Z",
      "side": 1,
      "message": "this also has a limit of +/- 128 bytes, which is worth checking. I suspect it\u0027s ok, but not sure how much code is generated for InvokePrologue, LoadTaggedPointerField and CallCodeObject.",
      "range": {
        "startLine": 2307,
        "startChar": 4,
        "endLine": 2307,
        "endChar": 44
      },
      "revId": "8ff1a779aa80149dbdc95c66ffb80691ba578f9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d22dc864_5e71be71",
        "filename": "src/codegen/x64/macro-assembler-x64.cc",
        "patchSetId": 5
      },
      "lineNbr": 2307,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2019-09-30T11:01:08Z",
      "side": 1,
      "message": "I think this should cause a DCHECK if you try to do a Near jump and bind the label at a PC too far away for a near jump, although I can\u0027t find that check right now.",
      "parentUuid": "b422b0ca_710f70f7",
      "range": {
        "startLine": 2307,
        "startChar": 4,
        "endLine": 2307,
        "endChar": 44
      },
      "revId": "8ff1a779aa80149dbdc95c66ffb80691ba578f9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c1578c4_1a8f0080",
        "filename": "src/codegen/x64/macro-assembler-x64.cc",
        "patchSetId": 5
      },
      "lineNbr": 2307,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2019-09-30T11:12:20Z",
      "side": 1,
      "message": "Dan and I found the CHECK which is here:\nhttps://cs.chromium.org/chromium/src/v8/src/codegen/x64/assembler-x64.cc?type\u003dcs\u0026q\u003dbind_to+x64\u0026sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d572\n\nso I think what you have here is fine.",
      "parentUuid": "d22dc864_5e71be71",
      "range": {
        "startLine": 2307,
        "startChar": 4,
        "endLine": 2307,
        "endChar": 44
      },
      "revId": "8ff1a779aa80149dbdc95c66ffb80691ba578f9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}