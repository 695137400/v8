{
  "comments": [
    {
      "key": {
        "uuid": "b42aeb9e_6da0dd94",
        "filename": "include/v8-profiler.h",
        "patchSetId": 3
      },
      "lineNbr": 239,
      "author": {
        "id": 1167239
      },
      "writtenOn": "2019-05-03T12:51:10Z",
      "side": 1,
      "message": "I would suggest moving this inside CpuProfiler or another class to namespace it, otherwise the full name is v8::kNoSampleLimit which isn\u0027t specific to cpu profiling",
      "range": {
        "startLine": 239,
        "startChar": 22,
        "endLine": 239,
        "endChar": 36
      },
      "revId": "7fe1e9fd1da0769fb39bb88af97882c1e243d01a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88699b5c_fa0db9f0",
        "filename": "include/v8-profiler.h",
        "patchSetId": 3
      },
      "lineNbr": 371,
      "author": {
        "id": 1167239
      },
      "writtenOn": "2019-05-03T12:51:10Z",
      "side": 1,
      "message": "Given we are introducing more options/configurations/modes for the profiler and the profiles, what do you think about an \u0027options bag\u0027 or config struct/class? This saves us having to pass them through all the interfaces so explicitly when we add new switches.\n\nWe could also deprecate both the existing StartProfiling() methods (there are two because we had to avoid breaking the Node.js ABI... long story).\n\nNot as part of this CL but just an idea if we are planning to add more switches",
      "range": {
        "startLine": 371,
        "startChar": 45,
        "endLine": 371,
        "endChar": 61
      },
      "revId": "7fe1e9fd1da0769fb39bb88af97882c1e243d01a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b8cb369_57060c01",
        "filename": "src/profiler/profile-generator.cc",
        "patchSetId": 3
      },
      "lineNbr": 499,
      "author": {
        "id": 1115861
      },
      "writtenOn": "2019-04-30T16:53:56Z",
      "side": 1,
      "message": "Don\u0027t you want to keep accumulating profile data (selfTicks) in the tree?",
      "revId": "7fe1e9fd1da0769fb39bb88af97882c1e243d01a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e1792d4_effe6b23",
        "filename": "src/profiler/profile-generator.cc",
        "patchSetId": 3
      },
      "lineNbr": 499,
      "author": {
        "id": 1305811
      },
      "writtenOn": "2019-04-30T18:42:40Z",
      "side": 1,
      "message": "I don\u0027t think we do. That would make profiles that reach the sample limit harder to reason about, since they might overrepresent old functions in the profile (as they may not include new functions that are logged after reaching the sample limit).",
      "parentUuid": "6b8cb369_57060c01",
      "revId": "7fe1e9fd1da0769fb39bb88af97882c1e243d01a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f55974c2_37ffb102",
        "filename": "src/profiler/profile-generator.cc",
        "patchSetId": 3
      },
      "lineNbr": 499,
      "author": {
        "id": 1115861
      },
      "writtenOn": "2019-04-30T19:25:39Z",
      "side": 1,
      "message": "Ah, so it\u0027s not about just stop collecting samples into the array, but in fact it\u0027s like completely stopping the profiler. Right?\n\nIf so, then the parameter name is misleading. There\u0027s a notion of samples buffer as opposed to tick count associated with each profile node, and the parameter name reads as it limits just the samples buffer.\n\nBasically what you want is to auto stop profiling when certain number of samples is collected, no matter if the samples were recorded to the buffer or not. The confusion probably comes from a fact there\u0027s record_samples parameter, and the name of max_samples suggests they are related.\n\nBtw, what is the use-case for the change?",
      "parentUuid": "2e1792d4_effe6b23",
      "revId": "7fe1e9fd1da0769fb39bb88af97882c1e243d01a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f62667a_505b8609",
        "filename": "src/profiler/profile-generator.cc",
        "patchSetId": 3
      },
      "lineNbr": 499,
      "author": {
        "id": 1305811
      },
      "writtenOn": "2019-04-30T19:56:49Z",
      "side": 1,
      "message": "\u003e Ah, so it\u0027s not about just stop collecting samples into the array, but in fact it\u0027s like completely stopping the profiler. Right?\n\nThat\u0027s right, yeah.\n\n\u003e If so, then the parameter name is misleading. There\u0027s a notion of samples buffer as opposed to tick count associated with each profile node, and the parameter name reads as it limits just the samples buffer.\n\nGot it, thanks. Suggestions for a more accurate name and semantics? `tick_limit` perhaps?\n\n\u003e Btw, what is the use-case for the change?\n\nFor purposed of the JS Self-Profiling API, we want to be able to prevent profiles from running for an indefinitely long amount of time so that sites don\u0027t accidentally OOM themselves (e.g. if an error is thrown, and the profiler never gets stopped when it\u0027s supposed to).",
      "parentUuid": "f55974c2_37ffb102",
      "revId": "7fe1e9fd1da0769fb39bb88af97882c1e243d01a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d963dae0_43c586cb",
        "filename": "src/profiler/profile-generator.cc",
        "patchSetId": 3
      },
      "lineNbr": 499,
      "author": {
        "id": 1167239
      },
      "writtenOn": "2019-05-03T12:51:10Z",
      "side": 1,
      "message": "So the semantics are that a profile started with max_samples \u003d 10 and record_samples \u003d true will have GetSamplesCount() \u003c\u003d 10 and the sum of GetHitCount() for all nodes in the profile will also be \u003c\u003d 10?\n\nIn that case I think max_samples is an OK name but it unfortunately collides with the v8-profiler notion of samples which refers specifically to full samples saved via record_samples as opposed to just statistical tick data... \n\nSo yeah I\u0027d say go with tick_limit but introduce in the API comments the idea that a profile is made up of many ticks and that this will essentially auto-stop the profile after n ticks, then the profile will stay the same and can be retrieved by calling StopProfiling().",
      "parentUuid": "2f62667a_505b8609",
      "revId": "7fe1e9fd1da0769fb39bb88af97882c1e243d01a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}