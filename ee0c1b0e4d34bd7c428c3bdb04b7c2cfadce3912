{
  "comments": [
    {
      "key": {
        "uuid": "36a9d54e_60f959cf",
        "filename": "src/heap/remembered-set-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 321,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-05-07T15:42:38Z",
      "side": 0,
      "message": "What would be the point of this if we are going to be casting to Tagged_t anyway?",
      "range": {
        "startLine": 321,
        "startChar": 34,
        "endLine": 321,
        "endChar": 55
      },
      "revId": "ee0c1b0e4d34bd7c428c3bdb04b7c2cfadce3912",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "385ffeb2_9dbf25d3",
        "filename": "src/heap/remembered-set-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 321,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-05-07T17:42:43Z",
      "side": 0,
      "message": "Moving comments to patchset 4 and marking as resolved.",
      "parentUuid": "36a9d54e_60f959cf",
      "range": {
        "startLine": 321,
        "startChar": 34,
        "endLine": 321,
        "endChar": 55
      },
      "revId": "ee0c1b0e4d34bd7c428c3bdb04b7c2cfadce3912",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84a83331_cfcb4a41",
        "filename": "src/heap/remembered-set-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 326,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-05-07T15:42:38Z",
      "side": 0,
      "message": "It is a *Compressed* object slot, why store the uncompressed value?",
      "range": {
        "startLine": 326,
        "startChar": 10,
        "endLine": 326,
        "endChar": 57
      },
      "revId": "ee0c1b0e4d34bd7c428c3bdb04b7c2cfadce3912",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d78f868c_e5f17bb7",
        "filename": "src/heap/remembered-set-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 326,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-05-07T17:42:43Z",
      "side": 0,
      "message": "Moving comments to patchset 4 and marking as resolved.",
      "parentUuid": "84a83331_cfcb4a41",
      "range": {
        "startLine": 326,
        "startChar": 10,
        "endLine": 326,
        "endChar": 57
      },
      "revId": "ee0c1b0e4d34bd7c428c3bdb04b7c2cfadce3912",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9d96d62_6a4d245d",
        "filename": "src/heap/remembered-set-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 321,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-05-07T17:42:43Z",
      "side": 0,
      "message": "There is no point of casting to Address if we are going to be casting to Tagged_t anyway",
      "range": {
        "startLine": 321,
        "startChar": 34,
        "endLine": 321,
        "endChar": 55
      },
      "revId": "ee0c1b0e4d34bd7c428c3bdb04b7c2cfadce3912",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2b014d2_cf6ee6dc",
        "filename": "src/heap/remembered-set-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 321,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2020-05-07T20:53:52Z",
      "side": 0,
      "message": "Hello, in Big endianness mode, each entry is full 64 bit, this will cause problem.",
      "parentUuid": "d9d96d62_6a4d245d",
      "range": {
        "startLine": 321,
        "startChar": 34,
        "endLine": 321,
        "endChar": 55
      },
      "revId": "ee0c1b0e4d34bd7c428c3bdb04b7c2cfadce3912",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3501fb39_ea9ecb42",
        "filename": "src/heap/remembered-set-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 321,
      "author": {
        "id": 1002763
      },
      "writtenOn": "2020-05-07T22:13:15Z",
      "side": 0,
      "message": "If the entries are full 64bit on PPC then they should be marked as FULL_OBJECT_SLOT instead of compressed shouldn\u0027t they?",
      "parentUuid": "b2b014d2_cf6ee6dc",
      "range": {
        "startLine": 321,
        "startChar": 34,
        "endLine": 321,
        "endChar": 55
      },
      "revId": "ee0c1b0e4d34bd7c428c3bdb04b7c2cfadce3912",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9e834f8_d166f6cd",
        "filename": "src/heap/remembered-set-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 321,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2020-05-07T22:56:14Z",
      "side": 0,
      "message": "Constant pool entries is pointer size (64 bit) regardless what type the slot is, and the access of constant pool (by generated code) is always loading the full 64 bit value, so accessing half the slot will cause endianess issue. However, I am not sure how/why the type has to be compressed at this point.",
      "parentUuid": "3501fb39_ea9ecb42",
      "range": {
        "startLine": 321,
        "startChar": 34,
        "endLine": 321,
        "endChar": 55
      },
      "revId": "ee0c1b0e4d34bd7c428c3bdb04b7c2cfadce3912",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6f6aa77_466ea7a3",
        "filename": "src/heap/remembered-set-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 321,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-05-08T07:47:00Z",
      "side": 0,
      "message": "COMPRESSED_OBJECT_SLOT should be 32-bit and FULL_OBJECT_SLOT should be 64-bit. Otherwise there is no advantage in having compressed slots.\n\nIt seems that the PPC CL was not complete and is missing the part that changes constant pool entry size to tagged size (32-bit) and updates the instructions to load 32-bit entries.\n\nWould it be possible to switch PPC to use FULL_OBJECT_SLOT until the missing part is implemented?",
      "parentUuid": "a9e834f8_d166f6cd",
      "range": {
        "startLine": 321,
        "startChar": 34,
        "endLine": 321,
        "endChar": 55
      },
      "revId": "ee0c1b0e4d34bd7c428c3bdb04b7c2cfadce3912",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df3a6fb3_54880323",
        "filename": "src/heap/remembered-set-inl.h",
        "patchSetId": 4
      },
      "lineNbr": 321,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2020-05-08T18:52:02Z",
      "side": 0,
      "message": "Hello Ulan, I see. Yes we can do that.",
      "parentUuid": "b6f6aa77_466ea7a3",
      "range": {
        "startLine": 321,
        "startChar": 34,
        "endLine": 321,
        "endChar": 55
      },
      "revId": "ee0c1b0e4d34bd7c428c3bdb04b7c2cfadce3912",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}