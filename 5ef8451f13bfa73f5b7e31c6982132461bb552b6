{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "17de6278_fd80aecd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-09-06T10:33:12Z",
      "side": 1,
      "message": "Skimmed everything and overall lgtm.",
      "revId": "5ef8451f13bfa73f5b7e31c6982132461bb552b6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f69a9d4_8f462b49",
        "filename": "BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-09-06T10:32:40Z",
      "side": 1,
      "message": "Please add a short description, and perhaps a TODO(bug) for when to remove this flag.",
      "revId": "5ef8451f13bfa73f5b7e31c6982132461bb552b6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13eac8d0_8302fda4",
        "filename": "BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 350,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2021-09-06T11:38:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f69a9d4_8f462b49",
      "revId": "5ef8451f13bfa73f5b7e31c6982132461bb552b6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0923efcf_334ed6f6",
        "filename": "src/baseline/baseline-compiler.cc",
        "patchSetId": 3
      },
      "lineNbr": 1197,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-09-06T10:32:40Z",
      "side": 1,
      "message": "I\u0027m tempted to suggest a constant for these -1\u0027s too, but if they\u0027ll be removed soon I\u0027m fine with this.",
      "revId": "5ef8451f13bfa73f5b7e31c6982132461bb552b6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1113d7b0_09457b4a",
        "filename": "src/builtins/builtins-definitions.h",
        "patchSetId": 3
      },
      "lineNbr": 313,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-09-06T10:32:40Z",
      "side": 1,
      "message": "Not too happy with the changes in this list, it\u0027s way less intuitive to have to include the receiver count here. Also, other places add the receiver slot at lower levels and \u0027users\u0027 operate on argc without the receiver.\n\nIs there a way we could preserve kDontAdaptArgumentsSentinel as -1? Then we could keep the list as it was previously.",
      "revId": "5ef8451f13bfa73f5b7e31c6982132461bb552b6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdbce451_e7fd4205",
        "filename": "src/builtins/builtins-definitions.h",
        "patchSetId": 3
      },
      "lineNbr": 313,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2021-09-06T11:38:58Z",
      "side": 1,
      "message": "We also explicitly add the receiver as parameter so IMO it makes sense.\nMaybe it is better/cleaner to replace kArgcReceiverSlots with the actual value 1, once the receiver is always included on all architectures.\nWe would then have e.g. \n```\nTFJ(ReturnReceiver, 1, kReceiver)\n...\nTFJ(MapPrototypeSet, 3, kReceiver, kKey, kValue)\n```\nThat looks cleaner to me than the previous\n```\nTFJ(ReturnReceiver, 0, kReceiver)\n...\nTFJ(MapPrototypeSet, 2, kReceiver, kKey, kValue)\n```\nwhere the argument count we pass doesn\u0027t match the number of arguments.\n\nSo considering this as temporary, is it acceptable?\nAlternatively I could wrap the argc in a JS_FORMAL_PARAMETER_COUNT macro that adds the receiver slot now and change it to the real number when kArgcReceiverSlots is always 1.\n\nAbout kDontAdaptArgumentsSentinel:\na) If we leave the sentinel at -1, we would need to change the (observable) maximum number of allowed formal parameters of a function\nb) with the sentinel being 0, we can simplify the checks in some places. e.g. in masm InvokePrologue we now have 2 conditional jumps (first check if the param count is kDontAdaptArgumentsSentinel and then check if formal \u003e actual and if thats the case, push undefines). We can omit the first conditional jump if the sentinel is 0.\nI didn\u0027t include this optimisation in this CL since it can be done separately and this CL is already big.",
      "parentUuid": "1113d7b0_09457b4a",
      "revId": "5ef8451f13bfa73f5b7e31c6982132461bb552b6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c51ad923_e02914e3",
        "filename": "src/builtins/builtins-definitions.h",
        "patchSetId": 3
      },
      "lineNbr": 313,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-09-06T11:46:15Z",
      "side": 1,
      "message": "Ah, indeed - if the list of arg names matches the argc, passing just the numeric value sg. Let\u0027s do that once you remove the gn flag.",
      "parentUuid": "bdbce451_e7fd4205",
      "revId": "5ef8451f13bfa73f5b7e31c6982132461bb552b6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a1173cf_140f469a",
        "filename": "src/init/bootstrapper.cc",
        "patchSetId": 3
      },
      "lineNbr": 2377,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-09-06T10:32:40Z",
      "side": 1,
      "message": "Wdyt about wrapping the `kArgcReceiverSlots + foo` pattern in an `ActualParameterCount(foo)` function? And change `kArgcReceiverSlots` back to `ActualParameterCount(0)`. \n\n(Maybe someone can think of a better name than ActualParameterCount - JSParameterCount?)",
      "revId": "5ef8451f13bfa73f5b7e31c6982132461bb552b6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e750d83c_5d52568f",
        "filename": "src/init/bootstrapper.cc",
        "patchSetId": 3
      },
      "lineNbr": 2377,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2021-09-06T11:38:58Z",
      "side": 1,
      "message": "I like that! I added SharedFunctionInfo::JSFormalParameterCount()",
      "parentUuid": "2a1173cf_140f469a",
      "revId": "5ef8451f13bfa73f5b7e31c6982132461bb552b6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}