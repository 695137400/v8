{
  "comments": [
    {
      "key": {
        "uuid": "38d1dbf9_88248c08",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-08-17T11:30:26Z",
      "side": 1,
      "message": "Could you also add [api] here, makes it a bit easier for grepping in the future.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "21b574e10023524d62ea445a80a236a8f7bbf9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3703536_f0b1f21d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-09-02T12:03:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "38d1dbf9_88248c08",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "21b574e10023524d62ea445a80a236a8f7bbf9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "115034ca_ab6e62d8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2020-08-17T09:16:21Z",
      "side": 1,
      "message": "Camillo, please take a look. This now has cctest coverage, and conforms more closely to the TC39 proposal.\n\n- I tried to find a way around changing the signature of the ModifyCodeGenerationFromStringsCallback, but couldn\u0027t quite get that to work. Is the changing the API callback signature okay? What steps do I need to follow to get this in?\n- I tried to add tests for use with the deprecated AllowCodeGenerationFromStringsCallback, but that wouldn\u0027t compile (because it\u0027s deprecated). Is it okay to leave that untested?\n\n(Usage in crrev.com/c/2340905)",
      "revId": "21b574e10023524d62ea445a80a236a8f7bbf9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74f96bc5_59c0a795",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-08-17T11:17:32Z",
      "side": 1,
      "message": "Mostly nits.\n\nAs written inline, I think at this point we want to just add a second, new callback so we can deprecate the old one once we hit stage 4 with the proposal.",
      "revId": "21b574e10023524d62ea445a80a236a8f7bbf9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0942a33f_65aee5cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-08-17T11:20:21Z",
      "side": 1,
      "message": "and to answer your second question, it\u0027s ok to not use deprecated APIs.\nIn this case you would probably just want to use the old one instead (if/given that we add a new one with the additional parameter)",
      "revId": "21b574e10023524d62ea445a80a236a8f7bbf9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c7174b1_f183939f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-09-02T12:19:30Z",
      "side": 1,
      "message": "For completion: As mentioned in a separately, it\u0027s ok to not test the old API anymore and simply migrate the tests to the new one.",
      "parentUuid": "115034ca_ab6e62d8",
      "revId": "21b574e10023524d62ea445a80a236a8f7bbf9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4fad3cf_c35e7037",
        "filename": "include/v8.h",
        "patchSetId": 7
      },
      "lineNbr": 7525,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-08-17T11:17:32Z",
      "side": 1,
      "message": "I have to check for a precedence case here. I\u0027m not sure we can change the callback signature without deprecating the old API in some way.\n\nGiven that this is still stage 1, I\u0027d prefer adding a second API with the additional argument.\n\nAn once we get to a clear further stage we can deprecate the old one.",
      "range": {
        "startLine": 7525,
        "startChar": 0,
        "endLine": 7525,
        "endChar": 66
      },
      "revId": "21b574e10023524d62ea445a80a236a8f7bbf9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a325bf3_f2ddace5",
        "filename": "include/v8.h",
        "patchSetId": 7
      },
      "lineNbr": 7525,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2020-09-02T11:59:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4fad3cf_c35e7037",
      "range": {
        "startLine": 7525,
        "startChar": 0,
        "endLine": 7525,
        "endChar": 66
      },
      "revId": "21b574e10023524d62ea445a80a236a8f7bbf9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5a720cb_57e907ec",
        "filename": "src/codegen/compiler.cc",
        "patchSetId": 7
      },
      "lineNbr": 2150,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-08-17T11:17:32Z",
      "side": 1,
      "message": "nit: The plural seems a bit inconsistent here, since everywhere else it\u0027s singular, despite originating from the same callsite.",
      "range": {
        "startLine": 2150,
        "startChar": 9,
        "endLine": 2150,
        "endChar": 27
      },
      "revId": "21b574e10023524d62ea445a80a236a8f7bbf9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40783b3f_8e3d74ca",
        "filename": "src/codegen/compiler.cc",
        "patchSetId": 7
      },
      "lineNbr": 2150,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2020-09-02T11:59:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5a720cb_57e907ec",
      "range": {
        "startLine": 2150,
        "startChar": 9,
        "endLine": 2150,
        "endChar": 27
      },
      "revId": "21b574e10023524d62ea445a80a236a8f7bbf9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0349cf0f_026ac7ab",
        "filename": "src/codegen/compiler.cc",
        "patchSetId": 7
      },
      "lineNbr": 2152,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-08-17T11:17:32Z",
      "side": 1,
      "message": "nit: not needed anymore",
      "range": {
        "startLine": 2152,
        "startChar": 0,
        "endLine": 2152,
        "endChar": 69
      },
      "revId": "21b574e10023524d62ea445a80a236a8f7bbf9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bf86914_17f67401",
        "filename": "src/codegen/compiler.cc",
        "patchSetId": 7
      },
      "lineNbr": 2152,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2020-09-02T11:59:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0349cf0f_026ac7ab",
      "range": {
        "startLine": 2152,
        "startChar": 0,
        "endLine": 2152,
        "endChar": 69
      },
      "revId": "21b574e10023524d62ea445a80a236a8f7bbf9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e34464_dc30af85",
        "filename": "src/codegen/compiler.h",
        "patchSetId": 7
      },
      "lineNbr": 149,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-08-17T11:17:32Z",
      "side": 1,
      "message": "nit: past / present tense here vs. call site.",
      "range": {
        "startLine": 149,
        "startChar": 11,
        "endLine": 149,
        "endChar": 29
      },
      "revId": "21b574e10023524d62ea445a80a236a8f7bbf9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b406d3b_9bb4ed67",
        "filename": "src/codegen/compiler.h",
        "patchSetId": 7
      },
      "lineNbr": 149,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2020-09-02T11:59:35Z",
      "side": 1,
      "message": "Done\n\n(Here \u0026 below: That was my attempt at being super extra pedantically accurate, since at some point we have one or more objects that _is_/_are_ code kind, and later we turn it into a string but remember that it _was_ code kind. That clearly didn\u0027t help legibility... :-)   It\u0027s all \"is_code_kind\" now.)",
      "parentUuid": "87e34464_dc30af85",
      "range": {
        "startLine": 149,
        "startChar": 11,
        "endLine": 149,
        "endChar": 29
      },
      "revId": "21b574e10023524d62ea445a80a236a8f7bbf9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29ba7150_c779a45b",
        "filename": "src/objects/objects.cc",
        "patchSetId": 7
      },
      "lineNbr": 1810,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-08-17T11:17:32Z",
      "side": 1,
      "message": "nit: missing braces for newline nested statement",
      "range": {
        "startLine": 1810,
        "startChar": 0,
        "endLine": 1810,
        "endChar": 71
      },
      "revId": "21b574e10023524d62ea445a80a236a8f7bbf9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6021e3a8_b5d5815a",
        "filename": "src/objects/objects.cc",
        "patchSetId": 7
      },
      "lineNbr": 1810,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2020-09-02T11:59:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "29ba7150_c779a45b",
      "range": {
        "startLine": 1810,
        "startChar": 0,
        "endLine": 1810,
        "endChar": 71
      },
      "revId": "21b574e10023524d62ea445a80a236a8f7bbf9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb8892f3_a287cab0",
        "filename": "src/objects/objects.cc",
        "patchSetId": 7
      },
      "lineNbr": 1815,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-08-17T11:17:32Z",
      "side": 1,
      "message": "nit: ditto",
      "range": {
        "startLine": 1815,
        "startChar": 0,
        "endLine": 1815,
        "endChar": 77
      },
      "revId": "21b574e10023524d62ea445a80a236a8f7bbf9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6139d5ec_0ccfdd52",
        "filename": "src/objects/objects.cc",
        "patchSetId": 7
      },
      "lineNbr": 1815,
      "author": {
        "id": 1117099
      },
      "writtenOn": "2020-09-02T11:59:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cb8892f3_a287cab0",
      "range": {
        "startLine": 1815,
        "startChar": 0,
        "endLine": 1815,
        "endChar": 77
      },
      "revId": "21b574e10023524d62ea445a80a236a8f7bbf9bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}