{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1801c0b7_98a79de2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2021-09-01T19:49:31Z",
      "side": 1,
      "message": "Hi Clemens,\nJust wanted to double check `emit_s128_set_if_nan` stores only when all lanes are NaN correct?",
      "revId": "ee9ff7ee5d5b0c1815814f9a953a89efd0ec9bf0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c552647_cef198c5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2021-09-02T10:40:29Z",
      "side": 1,
      "message": "No, it should store if there is *any* NaN in {src} (see comment in liftoff-assembler.h).\nThibaud, do we have a unit test for this specifically?",
      "parentUuid": "1801c0b7_98a79de2",
      "revId": "ee9ff7ee5d5b0c1815814f9a953a89efd0ec9bf0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7694e777_0d37d38f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1352700
      },
      "writtenOn": "2021-09-02T11:58:39Z",
      "side": 1,
      "message": "We don\u0027t, I can add one.",
      "parentUuid": "3c552647_cef198c5",
      "revId": "ee9ff7ee5d5b0c1815814f9a953a89efd0ec9bf0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "373c2e08_b57125e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2021-09-02T12:32:12Z",
      "side": 1,
      "message": "In that case would it be possible to check if the implementation in Arm is also correct? does `Fmaxv/ Fmaxp` propagate NaN if any of the lanes are NaN?",
      "parentUuid": "7694e777_0d37d38f",
      "revId": "ee9ff7ee5d5b0c1815814f9a953a89efd0ec9bf0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "844b9934_0738d491",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1182309
      },
      "writtenOn": "2021-09-02T13:24:54Z",
      "side": 1,
      "message": "It should do. Most arithmetic operations between two values, where at least one is NaN, will result in a NaN result, and fmax follows this rule. We have an alternative instruction, fmaxnm, explicitly for returning the number when comparing number and NaN.\n\nThe operation of fmaxv/p is specified using the same pseudocode as fmax, and so should result in a NaN result if one or more inputs (vector elements) are NaN. I\u0027ve checked this is the case on a version of the Arm simulator used in V8.\n\nHowever, an explicit test for it would still be good, and I\u0027ll fix any problems it finds in the Arm code.",
      "parentUuid": "373c2e08_b57125e8",
      "revId": "ee9ff7ee5d5b0c1815814f9a953a89efd0ec9bf0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}