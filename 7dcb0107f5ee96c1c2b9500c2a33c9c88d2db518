{
  "comments": [
    {
      "key": {
        "uuid": "cae4b6e5_e328c926",
        "filename": "src/assembler.cc",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-09-19T14:53:40Z",
      "side": 1,
      "message": "Do you know what this comment means? If yes, can you make it so that I also understand it? If no, can you just delete it?",
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1c2c105_dd38c9cd",
        "filename": "src/assembler.cc",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1229013
      },
      "writtenOn": "2017-09-20T15:55:10Z",
      "side": 1,
      "message": "I guess the original meaning is that the address might be not valid when setting it and will be checked (or crash) at runtime. But that should be the case also for the other methods here. So I\u0027ll remove the comment.",
      "parentUuid": "cae4b6e5_e328c926",
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "232874ef_3906d17c",
        "filename": "src/compiler/int64-lowering.cc",
        "patchSetId": 1
      },
      "lineNbr": 268,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-09-19T14:53:40Z",
      "side": 1,
      "message": "Would there be a place to define a kContextParameterIndex, so that we don\u0027t need to use \u00270\u0027?",
      "range": {
        "startLine": 268,
        "startChar": 25,
        "endLine": 268,
        "endChar": 26
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a97c50a4_dbe5fd97",
        "filename": "src/compiler/int64-lowering.cc",
        "patchSetId": 1
      },
      "lineNbr": 268,
      "author": {
        "id": 1229013
      },
      "writtenOn": "2017-09-20T15:55:10Z",
      "side": 1,
      "message": "I put the definition in the wasm-compiler.h, which is already imported by int64-lowering.cc. The GetWasmCallDescriptor method and the rest of the wasm compiler does not use this constant, but at least from outside the wasm compiler, we can use it and rely on the fact that the compiler implementation should place the parameter at this index.",
      "parentUuid": "232874ef_3906d17c",
      "range": {
        "startLine": 268,
        "startChar": 25,
        "endLine": 268,
        "endChar": 26
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "411f24c2_d889b852",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 2197,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-09-19T14:53:40Z",
      "side": 1,
      "message": "Nit: Oxford comma is missing. #GrammarNazi ;P",
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "196d0b9f_ccc48a51",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 2197,
      "author": {
        "id": 1229013
      },
      "writtenOn": "2017-09-20T15:55:10Z",
      "side": 1,
      "message": ":D done",
      "parentUuid": "411f24c2_d889b852",
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea893a94_bbc518e4",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 2208,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-09-19T14:53:40Z",
      "side": 1,
      "message": "Can we use a memmove now instead? I think this would also make it more obvious that index 0 and index 1 should be free in the end. Thereby the DCHECK below would not be necessary.",
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d21f144_7c1f20b1",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 2208,
      "author": {
        "id": 1229013
      },
      "writtenOn": "2017-09-20T15:55:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea893a94_bbc518e4",
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ecbef55_483f357d",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 2644,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-09-19T14:53:40Z",
      "side": 1,
      "message": "I think it is not a good idea to have two variables \"context_address\" and \"context_address_\" which do not only contain independent values but also have different types. Could you come up with better names?",
      "range": {
        "startLine": 2644,
        "startChar": 52,
        "endLine": 2644,
        "endChar": 67
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3189862d_349b0da6",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 2644,
      "author": {
        "id": 1229013
      },
      "writtenOn": "2017-09-20T15:55:10Z",
      "side": 1,
      "message": "instead of context_address_ we now have wasm_context_ (to differentiate it from js_context) for the node, and wasm_context_address for Addresses.",
      "parentUuid": "7ecbef55_483f357d",
      "range": {
        "startLine": 2644,
        "startChar": 52,
        "endLine": 2644,
        "endChar": 67
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20f88175_a83877eb",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 2876,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-09-19T14:53:40Z",
      "side": 1,
      "message": "I think it would be better to say \"count + 1\", the + 5 looks quite weird.",
      "range": {
        "startLine": 2876,
        "startChar": 22,
        "endLine": 2876,
        "endChar": 36
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8710e51_385e4939",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 2876,
      "author": {
        "id": 1229013
      },
      "writtenOn": "2017-09-20T15:55:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20f88175_a83877eb",
      "range": {
        "startLine": 2876,
        "startChar": 22,
        "endLine": 2876,
        "endChar": 36
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63396a2d_4da25bd6",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 2884,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-09-19T14:53:40Z",
      "side": 1,
      "message": "Interesting that the context does not have to be patched here. Could we also make the JsToWasm wrapper such that it does not have to be patched? Does the reason why the JSToWasm wrapper has to be patched also apply to the WasmToWasm wrapper?",
      "range": {
        "startLine": 2884,
        "startChar": 27,
        "endLine": 2884,
        "endChar": 41
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f2642cb_ce551f3d",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 2884,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-09-19T14:53:40Z",
      "side": 1,
      "message": "Sometimes you use jsgraph()-\u003eXXXConstant, sometimes you use the WasmGraphBuilder wrapper. I don\u0027t really see much value in the WasmGraphBuilder wrapper. Could you just use the jsgraph() one everywhere?",
      "range": {
        "startLine": 2884,
        "startChar": 16,
        "endLine": 2884,
        "endChar": 42
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0f0571f_3cfeeb41",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 2884,
      "author": {
        "id": 1229013
      },
      "writtenOn": "2017-09-20T15:55:10Z",
      "side": 1,
      "message": "JsToWasm wrappers are compiled at module compile time and then patched at instantiation, while WasmToWasm are compiled at instance build time.",
      "parentUuid": "63396a2d_4da25bd6",
      "range": {
        "startLine": 2884,
        "startChar": 27,
        "endLine": 2884,
        "endChar": 41
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab70f912_082fa3cd",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 2884,
      "author": {
        "id": 1229013
      },
      "writtenOn": "2017-09-20T15:55:10Z",
      "side": 1,
      "message": "The line at 2882 should be the only occurrence. now all my code should use jsgraph()-\u003eXXX",
      "parentUuid": "7f2642cb_ce551f3d",
      "range": {
        "startLine": 2884,
        "startChar": 16,
        "endLine": 2884,
        "endChar": 42
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "966afc2a_e486ffdb",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 2990,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-09-19T14:53:40Z",
      "side": 1,
      "message": "Nit: I guess you deleted the arguments by accident",
      "range": {
        "startLine": 2990,
        "startChar": 48,
        "endLine": 2990,
        "endChar": 55
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2455fa41_40656b5a",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 2990,
      "author": {
        "id": 1229013
      },
      "writtenOn": "2017-09-20T15:55:10Z",
      "side": 1,
      "message": "Actually it was on purpose for two reasons: first the comment now explains what the \u0027+ 4\u0027 is about, as in the other Build.* methods, second it didn\u0027t fit in one line otherwise :)",
      "parentUuid": "966afc2a_e486ffdb",
      "range": {
        "startLine": 2990,
        "startChar": 48,
        "endLine": 2990,
        "endChar": 55
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7503686_c0c19085",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 3066,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-09-19T14:53:40Z",
      "side": 1,
      "message": "Why is this an IntPtrConstant? Should it not just be an Int32Constant?",
      "range": {
        "startLine": 3066,
        "startChar": 34,
        "endLine": 3066,
        "endChar": 48
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab246a12_f5f0c90c",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 3066,
      "author": {
        "id": 1229013
      },
      "writtenOn": "2017-09-20T15:55:10Z",
      "side": 1,
      "message": "Yes, it works now. I remember TF not generating the correct machine code when one of the input to IntAdd was an IntPtr and the other an Int32, but probably it was fixed in the meantime.",
      "parentUuid": "c7503686_c0c19085",
      "range": {
        "startLine": 3066,
        "startChar": 34,
        "endLine": 3066,
        "endChar": 48
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59335583_831faec1",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 3088,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-09-19T14:53:40Z",
      "side": 1,
      "message": "offsetof returns a size_t, so I guess you need a static_cast here.",
      "range": {
        "startLine": 3088,
        "startChar": 31,
        "endLine": 3088,
        "endChar": 39
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b8e4a01_1afa120c",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 3088,
      "author": {
        "id": 1229013
      },
      "writtenOn": "2017-09-20T15:55:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "59335583_831faec1",
      "range": {
        "startLine": 3088,
        "startChar": 31,
        "endLine": 3088,
        "endChar": 39
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba7eb961_bc8d631b",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 4127,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-09-19T14:53:40Z",
      "side": 1,
      "message": "origin is not used in this function.",
      "range": {
        "startLine": 4127,
        "startChar": 38,
        "endLine": 4127,
        "endChar": 64
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7f8a18b_836fa285",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 4127,
      "author": {
        "id": 1229013
      },
      "writtenOn": "2017-09-20T15:55:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba7eb961_bc8d631b",
      "range": {
        "startLine": 4127,
        "startChar": 38,
        "endLine": 4127,
        "endChar": 64
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f2ecfec_428e5695",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 4142,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-09-19T14:53:40Z",
      "side": 1,
      "message": "Would it still work if you pass an empty handle here instead? I don\u0027t think we need the CEntryStub in the WasmToWasm wrapper.",
      "range": {
        "startLine": 4142,
        "startChar": 27,
        "endLine": 4142,
        "endChar": 59
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66d5303b_b56bbb94",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 4142,
      "author": {
        "id": 1229013
      },
      "writtenOn": "2017-09-20T15:55:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f2ecfec_428e5695",
      "range": {
        "startLine": 4142,
        "startChar": 27,
        "endLine": 4142,
        "endChar": 59
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af2bfe05_d5ecf836",
        "filename": "src/compiler/wasm-compiler.h",
        "patchSetId": 1
      },
      "lineNbr": 525,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-09-19T14:53:40Z",
      "side": 1,
      "message": "Since you don\u0027t add tail calls for now, can you remove the flag again?",
      "range": {
        "startLine": 525,
        "startChar": 38,
        "endLine": 525,
        "endChar": 66
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0dc66dfb_2fa04470",
        "filename": "src/compiler/wasm-compiler.h",
        "patchSetId": 1
      },
      "lineNbr": 525,
      "author": {
        "id": 1229013
      },
      "writtenOn": "2017-09-20T15:55:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af2bfe05_d5ecf836",
      "range": {
        "startLine": 525,
        "startChar": 38,
        "endLine": 525,
        "endChar": 66
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60539e52_2bf9fb7f",
        "filename": "src/compiler/wasm-linkage.cc",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-09-19T14:53:40Z",
      "side": 1,
      "message": "Why \"on the stack\"? Did you mean \"as the first parameter\"?",
      "range": {
        "startLine": 226,
        "startChar": 57,
        "endLine": 226,
        "endChar": 69
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7a57b85_24a478c0",
        "filename": "src/compiler/wasm-linkage.cc",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1229013
      },
      "writtenOn": "2017-09-20T15:55:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "60539e52_2bf9fb7f",
      "range": {
        "startLine": 226,
        "startChar": 57,
        "endLine": 226,
        "endChar": 69
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b655923_a8cdaecc",
        "filename": "src/wasm/function-body-decoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-09-19T14:53:40Z",
      "side": 1,
      "message": "I think \"context parameter\" would be more telling than \"context address\".",
      "range": {
        "startLine": 103,
        "startChar": 15,
        "endLine": 103,
        "endChar": 22
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1dc6b61_a77324b1",
        "filename": "src/wasm/function-body-decoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1229013
      },
      "writtenOn": "2017-09-20T15:55:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b655923_a8cdaecc",
      "range": {
        "startLine": 103,
        "startChar": 15,
        "endLine": 103,
        "endChar": 22
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ccbbc01a_8db1ec8d",
        "filename": "src/wasm/function-body-decoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 467,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-09-19T14:53:40Z",
      "side": 1,
      "message": "I guess you can remove the decoder parameter here again, can you not?",
      "range": {
        "startLine": 467,
        "startChar": 23,
        "endLine": 467,
        "endChar": 30
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9bd0c4b_15afb569",
        "filename": "src/wasm/function-body-decoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 467,
      "author": {
        "id": 1229013
      },
      "writtenOn": "2017-09-20T15:55:10Z",
      "side": 1,
      "message": "correct",
      "parentUuid": "ccbbc01a_8db1ec8d",
      "range": {
        "startLine": 467,
        "startChar": 23,
        "endLine": 467,
        "endChar": 30
      },
      "revId": "7dcb0107f5ee96c1c2b9500c2a33c9c88d2db518",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}