{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "62495e80_357d92a0",
        "filename": "src/heap/embedder-tracing.cc",
        "patchSetId": 15
      },
      "lineNbr": 222,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2021-11-30T14:04:35Z",
      "side": 1,
      "message": "I think I would prefer if we would use PushEmbedder here instead and don\u0027t expose PushToCppHeap to keep MarkingWorklists::Local API a bit smaller and easier to understand.",
      "revId": "cd209ed73e2f6ee8e0417dbc83c522564f130cce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2782ad66_8da5c54d",
        "filename": "src/heap/embedder-tracing.cc",
        "patchSetId": 15
      },
      "lineNbr": 222,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2021-11-30T16:54:09Z",
      "side": 1,
      "message": "Are you sure?\nIt will be less efficient since PushEmbedder (1) it needs to branch on CppHeap, and (2) calling PushEmbedder convert js_object to HeapObject that we then need to recast back to JSObject.",
      "parentUuid": "62495e80_357d92a0",
      "revId": "cd209ed73e2f6ee8e0417dbc83c522564f130cce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fa98322_95718891",
        "filename": "src/heap/embedder-tracing.cc",
        "patchSetId": 15
      },
      "lineNbr": 222,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2021-11-30T18:51:41Z",
      "side": 1,
      "message": "I would expect this to be simple enough to be optimized away by the compiler.",
      "parentUuid": "2782ad66_8da5c54d",
      "revId": "cd209ed73e2f6ee8e0417dbc83c522564f130cce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec32747e_48ef615c",
        "filename": "src/heap/embedder-tracing.cc",
        "patchSetId": 15
      },
      "lineNbr": 222,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2021-11-30T19:28:49Z",
      "side": 1,
      "message": "PushEmbedder() is the the wrong call on MarkingWorklist. That will enqueue in the old lists which we only use for EmbedderHeapTracer.\n\nWe need to somehow go through CppMarkingState. I think using the marking worklists is the right way. Alternatively, CppHeap can also have a local marking state to use that to push.",
      "parentUuid": "5fa98322_95718891",
      "revId": "cd209ed73e2f6ee8e0417dbc83c522564f130cce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9d5cf3e_b98f5109",
        "filename": "src/heap/embedder-tracing.cc",
        "patchSetId": 15
      },
      "lineNbr": 222,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2021-11-30T20:16:43Z",
      "side": 1,
      "message": "In the current version of this CL, PushEmbedder will enqueue the object in the right worklist since it checks whether CppHeap is active. We use PushEmbedder in the marker as well for both CppHeap and embedder heap tracing.",
      "parentUuid": "ec32747e_48ef615c",
      "revId": "cd209ed73e2f6ee8e0417dbc83c522564f130cce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83ec5e9e_262edb1b",
        "filename": "src/heap/marking-worklist.h",
        "patchSetId": 15
      },
      "lineNbr": 174,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2021-11-30T16:54:08Z",
      "side": 1,
      "message": "Could we name this PublishEmbedder instead? Would be really nice if MarkingWorklists::Local only uses the term \"embedder\" in its interface.",
      "revId": "cd209ed73e2f6ee8e0417dbc83c522564f130cce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1b54b95_23e03570",
        "filename": "src/heap/marking-worklist.h",
        "patchSetId": 15
      },
      "lineNbr": 174,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2021-11-30T17:03:46Z",
      "side": 1,
      "message": "CppHeap is part of V8 now and I think we do want to treat it that way. It\u0027s not an embedder concept.\n\nIf it wasn\u0027t for Blink, we\u0027d likely set up a CppHeap parallel to V8\u0027s heap.",
      "parentUuid": "83ec5e9e_262edb1b",
      "revId": "cd209ed73e2f6ee8e0417dbc83c522564f130cce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "838e96e6_efe23509",
        "filename": "src/heap/marking-worklist.h",
        "patchSetId": 15
      },
      "lineNbr": 174,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2021-11-30T17:08:50Z",
      "side": 1,
      "message": "Also \"embedder\" usually tells me EmebedderHeapTracer and CppHeap doesn\u0027t implement that anymore.",
      "parentUuid": "e1b54b95_23e03570",
      "revId": "cd209ed73e2f6ee8e0417dbc83c522564f130cce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b29bd66b_93d1e38f",
        "filename": "src/heap/marking-worklist.h",
        "patchSetId": 15
      },
      "lineNbr": 174,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2021-11-30T18:51:41Z",
      "side": 1,
      "message": "We can totally come up with something else then Embedder - maybe Wrapper or so. But I would definitely prefer if we would only expose one concept here instead of both CppHeap \u0026 the embedder heap tracing since at least at the moment it seems so trivial to do so.\n\nIMHO it\u0027s a bit inconsistent that we mainly push using PushEmbedder to CppHeap but then publish the worklist using PublishToCppHeap. IsEmbedderEmpty() checks the CppHeap worklist as well.",
      "parentUuid": "838e96e6_efe23509",
      "revId": "cd209ed73e2f6ee8e0417dbc83c522564f130cce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d155e01c_6a108a1c",
        "filename": "src/heap/marking-worklist.h",
        "patchSetId": 15
      },
      "lineNbr": 174,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2021-11-30T19:28:49Z",
      "side": 1,
      "message": "We want the fastest possible dispatch for CppHeap but also need to support EmbedderHeapTracer. We should avoid branching for each object as we moved Oilpan into V8 to enable fast paths, not treat it as a generic embedder.\n\nEventually, when others want to support multiplexing with the EmbedderHeapTracer, I think we have to support 3 marking mechanisms:\n1. JS\n2. CppHeap\n3. EmbedderHeapTracer\n\n1+2 should be as fast as possible. 3. should be supported. We would aim to get rid of 3. by having embedders migrate to Oilpan.",
      "parentUuid": "b29bd66b_93d1e38f",
      "revId": "cd209ed73e2f6ee8e0417dbc83c522564f130cce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "537125c0_c41bdecb",
        "filename": "src/heap/marking-worklist.h",
        "patchSetId": 15
      },
      "lineNbr": 174,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2021-11-30T19:40:21Z",
      "side": 1,
      "message": "Looking a bit more into this we could actually just push either a HeapObject, or the void* because EmbedderHeapTracerWorklist is the same type [1].\n\nThis list would then either processed by EmbedderHeapTracer or CppHeap. There\u0027s \n\n[1] https://source.chromium.org/chromium/chromium/src/+/main:v8/src/heap/marking-worklist.h;drc\u003da3c79da4072f57e63b943f12866f26d6a8ee89c7;bpv\u003d1;bpt\u003d1;l\u003d22",
      "parentUuid": "d155e01c_6a108a1c",
      "revId": "cd209ed73e2f6ee8e0417dbc83c522564f130cce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}