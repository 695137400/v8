{
  "comments": [
    {
      "key": {
        "uuid": "c5850d14_1975cd60",
        "filename": "tools/run_perf.py",
        "patchSetId": 1
      },
      "lineNbr": 858,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-06-21T07:15:23Z",
      "side": 1,
      "message": "Since we don\u0027t have this output on Android, we need to differentiate somehow to not make the regexp for MaxMemory fail.\n1) One (dirty) option would be a sentinel here. E.g.:\nif runnable.process_size:\n  stdout + \"\\nMaxMemory: 0\\n\"\n\n2) Or maybe optional tests? E.g. if we add a field \"optional\", it should not report an error if the regexp doesn\u0027t match.\n\n3) Another option might be to not expose the MaxMemory in the json files, but hard-code it here, only on desktop platform. E.g. when process_size is set, automatically add a trace called MaxMemory.\n\nwdyt? any other ideas?",
      "revId": "463187ec2ed662e2b6845bfc07d5c96609b99498",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c03cc28_1bed3216",
        "filename": "tools/run_perf.py",
        "patchSetId": 1
      },
      "lineNbr": 858,
      "author": {
        "id": 1125279
      },
      "writtenOn": "2017-06-21T23:20:08Z",
      "side": 1,
      "message": "For starts, option 1, while dirty, is quick. Option 2 would hide an actual error to report; and option 3 - I suspect running time will add noise; I would prefer us not adding it for all tests, just to those where some noise is fine. \n\nWhich segways to your other question; I\u0027d want to see how this behaves on bots (noise-wise), with the wasm compile benchmarks, then regroup and decide what to do next. A possibility may be that we only use it for long-running benchmarks, like these compile ones, where I suspect time\u0027s noise to not matter much to runtime measurements.",
      "parentUuid": "c5850d14_1975cd60",
      "revId": "463187ec2ed662e2b6845bfc07d5c96609b99498",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98ceaca4_3d8d18aa",
        "filename": "tools/run_perf.py",
        "patchSetId": 1
      },
      "lineNbr": 858,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-06-22T08:31:53Z",
      "side": 1,
      "message": "Regarding 3 I thought we\u0027d still set the flag on the tests where we want it. But we wouldn\u0027t specify a trace with regexp. That could be done automatically.\n\nWe could also do option 1 and add a filter to remove the zero-trace on Android again. Hack on a hack.\n\nOne additional problem with the current design is how this trace influences the total calculation. Maybe doing max mem measurements should for now disable total calculation by default. It\u0027s first done on the bot infrastructure, but it makes a geometric mean. And zeros are not so helpful there...",
      "parentUuid": "9c03cc28_1bed3216",
      "revId": "463187ec2ed662e2b6845bfc07d5c96609b99498",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}