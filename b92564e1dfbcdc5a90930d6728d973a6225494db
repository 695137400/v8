{
  "comments": [
    {
      "key": {
        "uuid": "0a08f7cd_d3f80aec",
        "filename": "src/inspector/string-16.cc",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 1000379
      },
      "writtenOn": "2020-02-05T19:08:04Z",
      "side": 1,
      "message": "Should we rename this to fromUTF16, since it works for both LE and BE?",
      "revId": "b92564e1dfbcdc5a90930d6728d973a6225494db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e71fd2f_e495f0a5",
        "filename": "src/inspector/string-16.cc",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2020-02-05T22:20:11Z",
      "side": 1,
      "message": "We can definitely do so, however we will also need to undo the name changes in StringUtil under Chromium as well (due to third_party / upstream separation) done by this CL: https://chromium-review.googlesource.com/c/deps/inspector_protocol/+/1680051\n\nJohannes would that be ok?",
      "parentUuid": "0a08f7cd_d3f80aec",
      "revId": "b92564e1dfbcdc5a90930d6728d973a6225494db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83c6e24b_ea31f51c",
        "filename": "src/inspector/string-16.cc",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 1000379
      },
      "writtenOn": "2020-02-05T22:31:25Z",
      "side": 1,
      "message": "Can we rename String16::fromUTF16LE and leave StringUtil::fromUTF16LE as is? I find it strange that our String16 has a strange method, but StringUtil api for inspector_protocol can do whatever.",
      "parentUuid": "2e71fd2f_e495f0a5",
      "revId": "b92564e1dfbcdc5a90930d6728d973a6225494db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cb3f627_0245e717",
        "filename": "src/inspector/string-16.cc",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 1323125
      },
      "writtenOn": "2020-02-05T22:44:52Z",
      "side": 1,
      "message": "No issues, I have now renamed String16::fromUTF16LE to String16::fromUTF16",
      "parentUuid": "83c6e24b_ea31f51c",
      "revId": "b92564e1dfbcdc5a90930d6728d973a6225494db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25ea89ab_ac67e12f",
        "filename": "src/inspector/string-16.cc",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 1280850
      },
      "writtenOn": "2020-02-05T23:26:25Z",
      "side": 1,
      "message": "Seems good to me, what Dmitry says. Thanks both of you.\n\nReason StringUtil has the fromUTF16LE name is that it converts between wire format (serialized devtools messages, always LE\u003dlittle endian) and local habits of the machine (almost always LE). Doing that should allow machines with different endianess habits habits debug each other (for example). Whether or not it works in practice, I think we only know from PRs such as these because we do not have big endian machines in the try bots.",
      "parentUuid": "2cb3f627_0245e717",
      "revId": "b92564e1dfbcdc5a90930d6728d973a6225494db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}