{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "236b7e62_6e7c60b9",
        "filename": "src/utils.h",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2017-07-24T14:05:57Z",
      "side": 1,
      "message": "An alternative implementation to this would be to use a branch-free version. On my x64 it beats both other implementations. The one I have measured is the following ...\n\ntemplate \u003ctypename T,\n          typename \u003d typename std::enable_if\u003cstd::is_integral\u003cT\u003e::value\u003e::type\u003e\ntypename std::make_unsigned\u003cT\u003e::type AbsC(T a) {\n  typedef typename std::make_unsigned\u003cT\u003e::type unsignedT;\n  unsignedT x \u003d static_cast\u003cunsignedT\u003e(a);\n  unsignedT y \u003d static_cast\u003cunsignedT\u003e(a \u003e\u003e 31);\n  return (x ^ y) - y;\n}\n\nI uploaded my experimental CL to reproduce the measurements here: https://chromium-review.googlesource.com/c/582952/\n\nAFAICT the above code should also avoid the undefined behavior of the unary minus operator. Ilija, can you confirm that this would also fix the bug you see in the \"Int32DivWithConstant\" unit test?\n\nDisclosure: This is taken from \"Hacker\u0027s Delight, Second Edition\", page 18.\n\nClemens, let me know what you think. Is it worth sacrificing readability for this branch-free version? WDYT?",
      "range": {
        "startLine": 195,
        "startChar": 11,
        "endLine": 195,
        "endChar": 25
      },
      "revId": "079e2d19291a6f106406c63bc26d3e3533db4d59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e9b90ce_c2edf4b1",
        "filename": "src/utils.h",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-07-24T14:17:58Z",
      "side": 1,
      "message": "I like this version much more, as it avoids all the ugly special cases, and even executes faster.\nIlija, can you check whether this version fixes the errors you are seeing on mips?\nIf it does, I vote for landing this version instead, with two changes:\n- adding a comment to explain that this is taken from HD\n- constraining it to be used with signed input values only (otherwise it would produce wrong results).",
      "parentUuid": "236b7e62_6e7c60b9",
      "range": {
        "startLine": 195,
        "startChar": 11,
        "endLine": 195,
        "endChar": 25
      },
      "revId": "079e2d19291a6f106406c63bc26d3e3533db4d59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:approval_code-owners"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "079e2d19291a6f106406c63bc26d3e3533db4d59",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "079e2d19291a6f106406c63bc26d3e3533db4d59",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "079e2d19291a6f106406c63bc26d3e3533db4d59",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "079e2d19291a6f106406c63bc26d3e3533db4d59",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}