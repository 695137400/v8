{
  "comments": [
    {
      "key": {
        "uuid": "973a018d_41bd8f25",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-08-04T17:03:56Z",
      "side": 1,
      "message": "Sathya, PTAL. Once you are happy I will send it over to Georg for review.\nAn alternate fix for this would be to hold feedback_slot as a strong pointer. This reload is on the slow path after the runtime call, so didn\u0027t want to touch the fast path by adding code to change weak pointer to a strong one. Maybe later, once we have all checks in we can evaluate this again. ",
      "revId": "8a6e10ab923c13c3c0a7a634c19ddae255727193",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0098df52_969113bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2020-08-05T08:15:22Z",
      "side": 1,
      "message": "Can we add a test for this?",
      "revId": "8a6e10ab923c13c3c0a7a634c19ddae255727193",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f400d622_32d7a313",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-08-05T12:11:46Z",
      "side": 1,
      "message": "I thought about this, this requires a GC to be triggered when we try to migrate the instance. It isn\u0027t possible to write a mjsunit test for this. I will attempt writing a cctest for it but from what I remember simulating a heap was a bit hard.",
      "parentUuid": "0098df52_969113bc",
      "revId": "8a6e10ab923c13c3c0a7a634c19ddae255727193",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "577b2d41_df2360c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-08-05T12:11:46Z",
      "side": 1,
      "message": "Thanks Sathya!\n",
      "revId": "8a6e10ab923c13c3c0a7a634c19ddae255727193",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8ced0a0_fd74fb80",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-08-05T16:44:52Z",
      "side": 1,
      "message": "Done!",
      "parentUuid": "f400d622_32d7a313",
      "revId": "8a6e10ab923c13c3c0a7a634c19ddae255727193",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42c0512a_41110c83",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-08-06T10:10:08Z",
      "side": 1,
      "message": "Would --gc-interval\u003d1 help for an mjsunit test?",
      "parentUuid": "b8ced0a0_fd74fb80",
      "revId": "8a6e10ab923c13c3c0a7a634c19ddae255727193",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e500badb_e9c02221",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1145189
      },
      "writtenOn": "2020-08-06T15:30:50Z",
      "side": 1,
      "message": "Yes, --gc-interval\u003d1 and --global-gc would work. That triggers a major gc on every allocation but it made the test super slow. Without --global-gc, we only trigger a scavenge since the allocation happens in new space. I left it as a cctest so we can control better when to trigger a major GC.",
      "parentUuid": "42c0512a_41110c83",
      "revId": "8a6e10ab923c13c3c0a7a634c19ddae255727193",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}