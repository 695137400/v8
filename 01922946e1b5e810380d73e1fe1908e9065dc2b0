{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3dce62bf_70d0a1c4",
        "filename": "BUILD.gn",
        "patchSetId": 26
      },
      "lineNbr": 4234,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-11-10T22:16:09Z",
      "side": 1,
      "message": "nit: only add this if v8_enable_system_instrumentation is enabled.",
      "revId": "01922946e1b5e810380d73e1fe1908e9065dc2b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31037a52_fd595577",
        "filename": "src/codegen/compiler.cc",
        "patchSetId": 26
      },
      "lineNbr": 1332,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-11-10T22:16:09Z",
      "side": 1,
      "message": "We usually don\u0027t divert to the external API for code in v8::internal.\nJust use the v8::internal methods directly:\n\n  isolate-\u003eGetOrRegisterRecorderContextId(isolate-\u003enative_context())",
      "range": {
        "startLine": 1331,
        "startChar": 0,
        "endLine": 1332,
        "endChar": 68
      },
      "revId": "01922946e1b5e810380d73e1fe1908e9065dc2b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42a4d8bf_c207e861",
        "filename": "src/flags/flag-definitions.h",
        "patchSetId": 26
      },
      "lineNbr": 1706,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-11-10T22:16:09Z",
      "side": 1,
      "message": "we can use #ifdef V8_ENABLE_SYSTEM_INTSRUMENTATION directly everywhere",
      "range": {
        "startLine": 1700,
        "startChar": 0,
        "endLine": 1706,
        "endChar": 0
      },
      "revId": "01922946e1b5e810380d73e1fe1908e9065dc2b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c82234c_dda5ed1d",
        "filename": "src/logging/metrics.h",
        "patchSetId": 26
      },
      "lineNbr": 90,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-11-10T22:16:09Z",
      "side": 1,
      "message": "ContextId is a uintptr and thus trivially copyable, I don\u0027t think we need a refernce here, existing code avoids this as well.",
      "range": {
        "startLine": 90,
        "startChar": 45,
        "endLine": 90,
        "endChar": 46
      },
      "revId": "01922946e1b5e810380d73e1fe1908e9065dc2b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04948a5b_6b16548b",
        "filename": "src/logging/metrics.h",
        "patchSetId": 26
      },
      "lineNbr": 92,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-11-10T22:16:09Z",
      "side": 1,
      "message": "let\u0027s use recorder_ \u003d\u003d nullptr to indicate that we don\u0027t have to do anything in this TimedScope:\n\n ...\n record_(recorder_-\u003eHasRecorder() ? recorder_ : nullptr),\n ...\n\nThen we can use a very fast nullptr check in the destructor.",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 92,
        "endChar": 28
      },
      "revId": "01922946e1b5e810380d73e1fe1908e9065dc2b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b732b83_74f8c718",
        "filename": "src/logging/metrics.h",
        "patchSetId": 26
      },
      "lineNbr": 97,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-11-10T22:16:09Z",
      "side": 1,
      "message": "This code is only necessary for the main constructor. All other ones get here via the delegate constructor.",
      "range": {
        "startLine": 95,
        "startChar": 4,
        "endLine": 97,
        "endChar": 5
      },
      "revId": "01922946e1b5e810380d73e1fe1908e9065dc2b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8bf371d_b7e632ad",
        "filename": "src/logging/metrics.h",
        "patchSetId": 26
      },
      "lineNbr": 117,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-11-10T22:16:09Z",
      "side": 1,
      "message": "if (!recorder_) return;",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 117,
        "endChar": 36
      },
      "revId": "01922946e1b5e810380d73e1fe1908e9065dc2b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "505bff89_d0665821",
        "filename": "src/logging/metrics.h",
        "patchSetId": 26
      },
      "lineNbr": 118,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-11-10T22:16:09Z",
      "side": 1,
      "message": "Please add a test for the case where there is no recorder. A simplified version of TriggerMainThreadMetricsEvent will do.",
      "range": {
        "startLine": 118,
        "startChar": 0,
        "endLine": 118,
        "endChar": 13
      },
      "revId": "01922946e1b5e810380d73e1fe1908e9065dc2b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23e89ca3_42124017",
        "filename": "src/logging/metrics.h",
        "patchSetId": 26
      },
      "lineNbr": 131,
      "author": {
        "id": 1132654
      },
      "writtenOn": "2020-11-10T22:16:09Z",
      "side": 1,
      "message": "Let\u0027s keep this for now, given that this code is going to be rather performance critical, and we\u0027re certain that Recorder\u0027s lifetime is bound to the i::Isolate we could just use a raw pointer here.",
      "range": {
        "startLine": 131,
        "startChar": 0,
        "endLine": 131,
        "endChar": 44
      },
      "revId": "01922946e1b5e810380d73e1fe1908e9065dc2b0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}