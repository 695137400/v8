{
  "comments": [
    {
      "key": {
        "uuid": "d3ece799_ec9dd390",
        "filename": "src/compiler/code-assembler.cc",
        "patchSetId": 3
      },
      "lineNbr": 994,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-10-24T13:07:28Z",
      "side": 1,
      "message": "Oh man.. reading this comment again still hurts, we could remove one level of indirection here.",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f6091e4_528184ab",
        "filename": "src/compiler/code-assembler.cc",
        "patchSetId": 3
      },
      "lineNbr": 994,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2018-10-24T15:18:01Z",
      "side": 1,
      "message": "Yeah.. TF is not good yet at generating code for external references.",
      "parentUuid": "d3ece799_ec9dd390",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0ae5d87_0d878ac8",
        "filename": "src/constants-arch.h",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-10-24T13:07:28Z",
      "side": 1,
      "message": "Maybe:\n\n #else \n #error Unsupported target architecture.",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d35f4a4a_f8c6a7e9",
        "filename": "src/constants-arch.h",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2018-10-24T15:18:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f0ae5d87_0d878ac8",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f2fef80_f0e3ac14",
        "filename": "src/disassembler.cc",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-10-24T13:07:28Z",
      "side": 1,
      "message": "Please update the comment (in the .h) to say \u0027root-register-relative\u0027 to clarify that the bias is already included.",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "269b29f7_6750d5a6",
        "filename": "src/disassembler.cc",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2018-10-24T15:18:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f2fef80_f0e3ac14",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "326750a5_c39f15b9",
        "filename": "src/disassembler.cc",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-10-24T13:07:28Z",
      "side": 1,
      "message": "IMO we should keep exposing size data from IsolateData. Callers shouldn\u0027t need these implementation details.. Was there a reason to hide it?",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02dc6ce0_69468797",
        "filename": "src/disassembler.cc",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2018-10-24T15:18:01Z",
      "side": 1,
      "message": "My motivation was: \n1) the IsolateData should only care about predictable layout of itself and once we found a starting offset of the respective sub-table we should deal with the sub-table directly regardless of what the IsolateData thinks about the sub-table size.\n2) in order to avoid confusion between offsets in the IsolateData object itself and root-register-relative offsets.",
      "parentUuid": "326750a5_c39f15b9",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55b37e3a_93ab6311",
        "filename": "src/disassembler.cc",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-10-25T07:10:57Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "02dc6ce0_69468797",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2de84dca_acdcb204",
        "filename": "src/ia32/macro-assembler-ia32.cc",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-10-24T13:07:28Z",
      "side": 1,
      "message": "This doesn\u0027t look right, it was expected to point at roots_, now it points at roots_ + bias.",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e412444_ffec629a",
        "filename": "src/ia32/macro-assembler-ia32.cc",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2018-10-24T15:18:01Z",
      "side": 1,
      "message": "Ah true. Thanks!",
      "parentUuid": "2de84dca_acdcb204",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d84bc18d_e7e615b2",
        "filename": "src/isolate-data.h",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-10-24T13:07:28Z",
      "side": 1,
      "message": "These helpers duplicate functionality we already have in TurboAssembler, can we remove those?",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "debbd938_2baebc49",
        "filename": "src/isolate-data.h",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2018-10-24T15:18:01Z",
      "side": 1,
      "message": "I was planning to do that in a follow-up CL.",
      "parentUuid": "d84bc18d_e7e615b2",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2b2959b_7ccbbf62",
        "filename": "src/isolate-data.h",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-10-25T07:10:57Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "debbd938_2baebc49",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79cf40af_bf7f6b85",
        "filename": "src/isolate-data.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-10-24T13:07:28Z",
      "side": 1,
      "message": "Is it the DCHECK that\u0027s blocking constexpr\u0027ification?",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c8bf331_9ef938ba",
        "filename": "src/isolate-data.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2018-10-24T15:18:01Z",
      "side": 1,
      "message": "Yes. I think we may drop this check once we switch to Builtins::Name instead of raw ints.",
      "parentUuid": "79cf40af_bf7f6b85",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efdc5224_432e4c95",
        "filename": "src/isolate-data.h",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-10-24T13:07:28Z",
      "side": 1,
      "message": "I don\u0027t think this one is needed, Builtins::Name will implicitly cast to int.",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c5dc103_7302ea5a",
        "filename": "src/isolate-data.h",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2018-10-24T15:18:01Z",
      "side": 1,
      "message": "I think we should eventually switch to using Builtins::Name instead of raw ints as we did for root indices.",
      "parentUuid": "efdc5224_432e4c95",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b955d083_7c208dcc",
        "filename": "src/isolate-data.h",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-10-25T07:10:57Z",
      "side": 1,
      "message": "Personally I\u0027ve always preferred using ints as builtin indices over the Name enum. It\u0027s just so clunky to write and use. I use it only when referring to a specific builtin by name. I guess we may be able to improve this with some refactoring love..",
      "parentUuid": "7c5dc103_7302ea5a",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d801e670_95d0c63f",
        "filename": "src/isolate-data.h",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-10-24T13:07:28Z",
      "side": 1,
      "message": "IMO this renaming adds confusion. Having parts of the codebase refer to \u0027base\u0027 and other parts to \u0027root\u0027 doesn\u0027t seem like a good state to be in :)",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df233416_93a97e13",
        "filename": "src/isolate-data.h",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2018-10-24T15:18:01Z",
      "side": 1,
      "message": "After offline discussions we decided to name the thing \"isolate_root\" and keep the kRootRegister name.",
      "parentUuid": "d801e670_95d0c63f",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8104101_97725c71",
        "filename": "src/isolate-data.h",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-10-25T07:10:57Z",
      "side": 1,
      "message": "Ack thanks, sgtm.",
      "parentUuid": "df233416_93a97e13",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca2d5f35_b91f2158",
        "filename": "src/isolate.h",
        "patchSetId": 3
      },
      "lineNbr": 1005,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2018-10-24T13:07:28Z",
      "side": 1,
      "message": "Nit: we could make this more general and just say \u0027isolate-specific data\u0027. Also please document that this is what kRootRegister is set to. \n\nI\u0027d kinda prefer not mixing \u0027base\u0027 and \u0027root\u0027 terms, but no very strong opinion.",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "264c6b8d_4b623754",
        "filename": "src/isolate.h",
        "patchSetId": 3
      },
      "lineNbr": 1005,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2018-10-24T15:18:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca2d5f35_b91f2158",
      "revId": "0618bd1bc8a48bcd9abd3b4c33bcbfdfea82bb05",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}