{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "405b1a9f_ca4c16a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2024-08-20T09:33:42Z",
      "side": 1,
      "message": "@dlehmann@chromium.org: PTAL. There is similar code in `call_ref` and `call_indirect`. As mentioned, I\u0027ll try to rewrite this using `Variable`s to get rid of this manual maintenance stuff but that isn\u0027t something we should abuse as a fix imo (and we certainly can\u0027t backmerge it).",
      "revId": "5a356e2c2ed764e83bc1f3205ec9e64fe5f4f5ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d7e1e20_763e8919",
        "filename": "test/mjsunit/regress/wasm/regress-360044696.js",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 1557311
      },
      "writtenOn": "2024-08-20T09:53:44Z",
      "side": 1,
      "message": "Just to double check my understanding: `main22` tail (ref) calls `callee_017`, which calls `main22` again with a different index into the table, which thus tail ref calls `callee_118` the second time. Because of the flags both callees get inlined in the tiered-up version of `main22`, and the inlinee bodies have different `InstanceCache` state (specifically `managed_object_maps`), which breaks without your fix. Nice find!",
      "revId": "5a356e2c2ed764e83bc1f3205ec9e64fe5f4f5ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}