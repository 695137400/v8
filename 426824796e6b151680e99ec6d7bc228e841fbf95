{
  "comments": [
    {
      "key": {
        "uuid": "b3689aad_a91918aa",
        "filename": "src/inspector/injected-script.cc",
        "patchSetId": 10
      },
      "lineNbr": 56,
      "author": {
        "id": 1115861
      },
      "writtenOn": "2018-03-08T18:19:20Z",
      "side": 1,
      "message": "nit: use auto\u0026 to avoid string copy.",
      "revId": "426824796e6b151680e99ec6d7bc228e841fbf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "201ce51a_17a14031",
        "filename": "src/inspector/injected-script.cc",
        "patchSetId": 10
      },
      "lineNbr": 56,
      "author": {
        "id": 1230559
      },
      "writtenOn": "2018-03-08T22:06:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b3689aad_a91918aa",
      "revId": "426824796e6b151680e99ec6d7bc228e841fbf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "762fe94f_ab22cdea",
        "filename": "src/inspector/injected-script.cc",
        "patchSetId": 10
      },
      "lineNbr": 550,
      "author": {
        "id": 1115861
      },
      "writtenOn": "2018-03-08T18:19:20Z",
      "side": 1,
      "message": "What\u0027s the point of wrapping it with BigInt? Isn\u0027t it already bigint within the parentheses. Same for Number.",
      "revId": "426824796e6b151680e99ec6d7bc228e841fbf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef2615c7_41fe52db",
        "filename": "src/inspector/injected-script.cc",
        "patchSetId": 10
      },
      "lineNbr": 550,
      "author": {
        "id": 1230559
      },
      "writtenOn": "2018-03-08T22:06:30Z",
      "side": 1,
      "message": "Good point.  The git blame trace for Number-wrapping goes back to the original import of V8 inspector.  My best guess is that it\u0027s to safely ensure that `Infinity` and `NaN` aren\u0027t defined with some other values in the current scope.  `Infinity` is not writable/configurable, so `var Infinity \u003d 42` doesn\u0027t work, but our wrapping would protect against something like `((Infinity) \u003d\u003e { /** Infinity is now 5 */ })(5)`.\n\nBigInt primitives are not valid identifiers, so I\u0027ll remove their wrapping.",
      "parentUuid": "762fe94f_ab22cdea",
      "revId": "426824796e6b151680e99ec6d7bc228e841fbf95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}