{
  "comments": [
    {
      "key": {
        "uuid": "d0784066_c585f482",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 7
      },
      "lineNbr": 1080,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-06-16T12:47:09Z",
      "side": 1,
      "message": "nit: trailing full stop please. (And maybe s/over/instead of/?)",
      "range": {
        "startLine": 1080,
        "startChar": 46,
        "endLine": 1080,
        "endChar": 47
      },
      "revId": "97ab1e05229b8dd0d60d19335cd79f6fd61583bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2c262d8_f00c4834",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 7
      },
      "lineNbr": 1080,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2020-06-16T13:55:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0784066_c585f482",
      "range": {
        "startLine": 1080,
        "startChar": 46,
        "endLine": 1080,
        "endChar": 47
      },
      "revId": "97ab1e05229b8dd0d60d19335cd79f6fd61583bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f53f2a38_1c031576",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 7
      },
      "lineNbr": 1088,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2020-06-15T08:16:19Z",
      "side": 1,
      "message": "I think for now you can really list all possible values, i.e. \"anyfunc\" and \"externref\"",
      "revId": "97ab1e05229b8dd0d60d19335cd79f6fd61583bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d736cfd7_1e341ebb",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 7
      },
      "lineNbr": 1088,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2020-06-15T08:45:15Z",
      "side": 1,
      "message": "Please see comment below.",
      "parentUuid": "f53f2a38_1c031576",
      "revId": "97ab1e05229b8dd0d60d19335cd79f6fd61583bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78859665_d65219d6",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 7
      },
      "lineNbr": 1088,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2020-06-16T09:29:49Z",
      "side": 1,
      "message": "Same question as below: is it possible to make a table of a GC type?",
      "parentUuid": "d736cfd7_1e341ebb",
      "revId": "97ab1e05229b8dd0d60d19335cd79f6fd61583bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bad363e8_475b4d97",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 7
      },
      "lineNbr": 1088,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-06-16T12:47:09Z",
      "side": 1,
      "message": "Yes. Per the \"reference types\" proposal, `elemtype ::\u003d \u003creftype\u003e`, so that includes the new GC ref types.",
      "parentUuid": "78859665_d65219d6",
      "revId": "97ab1e05229b8dd0d60d19335cd79f6fd61583bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21566476_815cf48b",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 7
      },
      "lineNbr": 1214,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-06-16T12:47:09Z",
      "side": 1,
      "message": "again",
      "range": {
        "startLine": 1214,
        "startChar": 51,
        "endLine": 1214,
        "endChar": 52
      },
      "revId": "97ab1e05229b8dd0d60d19335cd79f6fd61583bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a9db690_9209cfdc",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 7
      },
      "lineNbr": 1214,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2020-06-16T13:55:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "21566476_815cf48b",
      "range": {
        "startLine": 1214,
        "startChar": 51,
        "endLine": 1214,
        "endChar": 52
      },
      "revId": "97ab1e05229b8dd0d60d19335cd79f6fd61583bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7cb2abe_98cb47ac",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 7
      },
      "lineNbr": 1270,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2020-06-15T08:16:19Z",
      "side": 1,
      "message": "Even though this error message sounds nicer, the original one gave more actionable information to the developer. Consider you are the developer, and you read these two error messages. After which one would you know what you should do? That being said, if you find an error message that is as actionable as the old one, but sounds as nice as the new one, I will agree with it.",
      "revId": "97ab1e05229b8dd0d60d19335cd79f6fd61583bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78f14f8b_87b8fa5c",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 7
      },
      "lineNbr": 1270,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2020-06-15T08:45:15Z",
      "side": 1,
      "message": "My idea when changing this messages, and for that matter of all my current CLs, is to generalize V8 behavior regarding wasm types so it works when we introduce the new types in the upcoming ValueType upheaval. In this position, can \u0027value\u0027 only be one of those four types? If so, I should revert the change.",
      "parentUuid": "f7cb2abe_98cb47ac",
      "revId": "97ab1e05229b8dd0d60d19335cd79f6fd61583bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4bf8571_e77c71d6",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 7
      },
      "lineNbr": 1270,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2020-06-16T09:29:49Z",
      "side": 1,
      "message": "Hmm, it could be that the value here could also be externref and anyfunc. However, I don\u0027t know how a GC type could be used here. Can you create a global with a GC type?",
      "parentUuid": "78f14f8b_87b8fa5c",
      "revId": "97ab1e05229b8dd0d60d19335cd79f6fd61583bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f01d74bf_78ce65d4",
        "filename": "src/wasm/wasm-js.cc",
        "patchSetId": 7
      },
      "lineNbr": 1270,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2020-06-16T12:47:09Z",
      "side": 1,
      "message": "You can definitely make a global with an RTT (and, in fact, the expectation is that this will be a common use case). I\u0027m not sure whether you can make one with a struct or array; last I checked the proposal contained no definitive statement either way, though of course I may have missed it.",
      "parentUuid": "d4bf8571_e77c71d6",
      "revId": "97ab1e05229b8dd0d60d19335cd79f6fd61583bf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}