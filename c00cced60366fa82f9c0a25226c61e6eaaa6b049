{
  "comments": [
    {
      "key": {
        "uuid": "0d154301_bf667612",
        "filename": "test/mjsunit/wasm/js-api.js",
        "patchSetId": 2
      },
      "lineNbr": 899,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-10-30T15:45:09Z",
      "side": 1,
      "message": "What does this test? That subclassing is not allowed? Or that this fails the same way as calling WebAssembly.Module() directly would fail?\nIf it\u0027s the latter, shouldn\u0027t we have some positive tests also?\nIf it\u0027s the first, we should at least check the error type, maybe also the message.",
      "revId": "c00cced60366fa82f9c0a25226c61e6eaaa6b049",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59e4ea14_54de96b2",
        "filename": "test/mjsunit/wasm/js-api.js",
        "patchSetId": 2
      },
      "lineNbr": 899,
      "author": {
        "id": 1119499
      },
      "writtenOn": "2017-10-30T15:47:54Z",
      "side": 1,
      "message": "At the moment it just tests that the class can even be defined. If we want to make this a more thorough test, it should take arguments and pass those arguments to super, which should be correct module arguments.\n\nWe should probably add such a test in the future and make it part of the WASM spec compliance tests.",
      "parentUuid": "0d154301_bf667612",
      "revId": "c00cced60366fa82f9c0a25226c61e6eaaa6b049",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2944a1ba_05c9c97a",
        "filename": "test/mjsunit/wasm/js-api.js",
        "patchSetId": 2
      },
      "lineNbr": 899,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-10-30T15:51:44Z",
      "side": 1,
      "message": "Can we track somewhere that this happens eventually? In the current state, it\u0027s really hard to see what these checks are supposed to test.",
      "parentUuid": "59e4ea14_54de96b2",
      "revId": "c00cced60366fa82f9c0a25226c61e6eaaa6b049",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}