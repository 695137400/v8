{
  "comments": [
    {
      "key": {
        "uuid": "7d41b9f4_afa57870",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 11
      },
      "lineNbr": 2977,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2018-01-24T12:33:09Z",
      "side": 1,
      "message": "The last case seems to assume source-\u003eIsSimd128Register(). How about adding the DCHECK in the else-case?\n\nAnother possibility would be to have the if(source-\u003eIsSimd128Register()) and put UNREACHABLE in the final else case. This would add code in the release build, but would make sure that one of the cases is taken.\n\nThis argument applies to several conditionals in your CL.",
      "revId": "ced77d312a502f80d12b7da6540a24b421175404",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6677a761_daecac57",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 11
      },
      "lineNbr": 2977,
      "author": {
        "id": 1183769
      },
      "writtenOn": "2018-01-24T14:40:58Z",
      "side": 1,
      "message": "Hi Sigurd, thanks for taking a look!\n\nIt\u0027s very easy to forget DCHECKS here and there, how about adding all of them inside `InferMove` and `InferSwap`? That way we could check operands are type-consistent in one place for all backends that use them.\n\n\nIt would look like this I suppose:\n```\nCodeGenerator::MoveType::Type CodeGenerator::MoveType::InferMove(                                                                                                                                                                                                                \n    InstructionOperand* source, InstructionOperand* destination) {                                                                                                                                                                                                               \n  if (source-\u003eIsConstant()) {                                                                                                                                                                                                                                                    \n    if (destination-\u003eIsAnyRegister()) {                                                                                                                                                                                                                                          \n      DCHECK(destination-\u003eIsRegister() || destination-\u003eIsFloatRegister() ||                                                                                                                                                                                                      \n             destination-\u003eIsDoubleRegister());                                                                                                                                                                                                                                   \n      return MoveType::kConstantToRegister;                                                                                                                                                                                                                                      \n    } else {                                                                                                                                                                                                                                                                     \n      DCHECK(destination-\u003eIsStackSlot() || destination-\u003eIsFloatStackSlot() ||                                                                                                                                                                                                    \n             destination-\u003eIsDoubleStackSlot());                                                                                                                                                                                                                                  \n      return MoveType::kConstantToStack;                                                                                                                                                                                                                                         \n    }                                                                                                                                                                                                                                                                            \n  }                                                                                                                                                                                                                                                                              \n  if (source-\u003eIsAnyRegister()) {                                                                                                                                                                                                                                                 \n    if (destination-\u003eIsAnyRegister()) {                                                                                                                                                                                                                                          \n#ifdef DEBUG                                                                                                                                                                                                                                                                     \n      if (source-\u003eIsRegister()) {                                                                                                                                                                                                                                                \n        DCHECK(destination-\u003eIsRegister());                                                                                                                                                                                                                                       \n      } else if (source-\u003eIsFloatRegister()) {                                                                                                                                                                                                                                    \n        DCHECK(destination-\u003eIsFloatRegister());                                                                                                                                                                                                                                  \n      } else if (source-\u003eIsDoubleRegister()) {                                                                                                                                                                                                                                   \n        DCHECK(destination-\u003eIsDoubleRegister());                                                                                                                                                                                                                                 \n      } else {                                                                                                                                                                                                                                                                   \n        DCHECK(source-\u003eIsSimd128Register());                                                                                                                                                                                                                                     \n        DCHECK(destination-\u003eIsSimd128Register());                                                                                                                                                                                                                                \n      }                                                                                                                                                                                                                                                                          \n#endif                                                                                                                                                                                                                                                                           \n      return MoveType::kRegisterToRegister;                                                                                                                                                                                                                                      \n    } else {                                                                                                                                                                                                                                                                     \n      DCHECK(destination-\u003eIsAnyStackSlot());                                                                                                                                                                                                                                     \n#ifdef DEBUG                                                                                                                                                                                                                                                                     \n      if (source-\u003eIsRegister()) {                                                                                                                                                                                                                                                \n        DCHECK(destination-\u003eIsStackSlot());                                                                                                                                                                                                                                      \n      } else if (source-\u003eIsFloatRegister()) {                                                                                                                                                                                                                                    \n        DCHECK(destination-\u003eIsFloatStackSlot());                                                                                                                                                                                                                                 \n      } else if (source-\u003eIsDoubleRegister()) {                                                                                                                                                                                                                                   \n        DCHECK(destination-\u003eIsDoubleStackSlot());                                                                                                                                                                                                                                \n      } else {                                                                                                                                                                                                                                                                   \n        DCHECK(source-\u003eIsSimd128Register());                                                                                                                                                                                                                                     \n        DCHECK(destination-\u003eIsSimd128StackSlot());                                                                                                                                                                                                                               \n      }                                                                                                                                                                                                                                                                          \n#endif                                                                                                                                                                                                                                                                           \n      return MoveType::kRegisterToStack;                                                                                                                                                                                                                                         \n    }                                                                                                                                                                                                                                                                            \n  } else {                                                                                                                                                                                                                                                                       \n    DCHECK(source-\u003eIsAnyStackSlot());                                                                                                                                                                                                                                            \n    if (destination-\u003eIsAnyRegister()) {                                                                                                                                                                                                                                          \n#ifdef DEBUG                                                                                                                                                                                                                                                                     \n      if (destination-\u003eIsRegister()) {                                                                                                                                                                                                                                           \n        DCHECK(source-\u003eIsStackSlot());                                                                                                                                                                                                                                           \n      } else if (destination-\u003eIsFloatRegister()) {                                                                                                                                                                                                                               \n        DCHECK(source-\u003eIsFloatStackSlot());                                                                                                                                                                                                                                      \n      } else if (destination-\u003eIsDoubleRegister()) {                                                                                                                                                                                                                              \n        DCHECK(source-\u003eIsDoubleStackSlot());                                                                                                                                                                                                                                     \n      } else {                                                                                                                                                                                                                                                                   \n        DCHECK(source-\u003eIsSimd128Register());                                                                                                                                                                                                                                     \n        DCHECK(destination-\u003eIsSimd128StackSlot());                                                                                                                                                                                                                               \n      }                                                                                                                                                                                                                                                                          \n#endif                                                                                                                                                                                                                                                                           \n      return MoveType::kStackToRegister;\n    } else {                                                                                                                                                                                                                                                                     \n      DCHECK(destination-\u003eIsAnyStackSlot());                                                                                                                                                                                                                                     \n#ifdef DEBUG                                                                                                                                                                                                                                                                     \n      if (destination-\u003eIsStackSlot()) {                                                                                                                                                                                                                                          \n        DCHECK(source-\u003eIsStackSlot());                                                                                                                                                                                                                                           \n      } else if (destination-\u003eIsFloatStackSlot()) {                                                                                                                                                                                                                              \n        DCHECK(source-\u003eIsFloatStackSlot());                                                                                                                                                                                                                                      \n      } else if (destination-\u003eIsDoubleStackSlot()) {                                                                                                                                                                                                                             \n        DCHECK(source-\u003eIsDoubleStackSlot());                                                                                                                                                                                                                                     \n      } else {                                                                                                                                                                                                                                                                   \n        DCHECK(source-\u003eIsSimd128StackSlot());                                                                                                                                                                                                                                    \n        DCHECK(destination-\u003eIsSimd128StackSlot());                                                                                                                                                                                                                               \n      }                                                                                                                                                                                                                                                                          \n#endif                                                                                                                                                                                                                                                                           \n      return MoveType::kStackToStack;                                                                                                                                                                                                                                            \n    }                                                                                                                                                                                                                                                                            \n  }                                                                                                                                                                                                                                                                              \n}\n```\n\nThat\u0027s pretty verbose... maybe that\u0027s too much strain on the eyes? What do you think?",
      "parentUuid": "7d41b9f4_afa57870",
      "revId": "ced77d312a502f80d12b7da6540a24b421175404",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b10a189_4080d96c",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 11
      },
      "lineNbr": 2977,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2018-01-24T15:31:55Z",
      "side": 1,
      "message": "I think having the check is a good idea, but it needs to be more concise. :)\n\nIf you want you can implement\n\n```\nbool InstructionOperand::\n  IsCompatibleLocation(InstructionOperand*) const\n\n```\n\nwhich makes sure that either both are non-float registers, or they have the same representation. You can use that helper in a short DCHECK then.\n\nAlso\n\n```\nif (destination-\u003eIsAnyRegister()) {                                                                                                                                                                                                                                          \n      DCHECK(destination-\u003eIsRegister() || destination-\u003eIsFloatRegister() ||                                                                                                                                                                                                      \n             destination-\u003eIsDoubleRegister());       \n```\n\nis not necessary as it would check the implementation of IsAnyRegister, which we don\u0027t need to test here. The DCHECK in the associated else branch is also not needed I think.",
      "parentUuid": "6677a761_daecac57",
      "revId": "ced77d312a502f80d12b7da6540a24b421175404",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21b3280c_89655592",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 11
      },
      "lineNbr": 2977,
      "author": {
        "id": 1183769
      },
      "writtenOn": "2018-01-26T14:58:48Z",
      "side": 1,
      "message": "Sounds good! Done",
      "parentUuid": "2b10a189_4080d96c",
      "revId": "ced77d312a502f80d12b7da6540a24b421175404",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4891d9c2_07768424",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 11
      },
      "lineNbr": 2998,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2018-01-24T12:33:09Z",
      "side": 1,
      "message": "See above.",
      "revId": "ced77d312a502f80d12b7da6540a24b421175404",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd1e6aa4_03c8ec19",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 11
      },
      "lineNbr": 2998,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2018-01-24T15:31:55Z",
      "side": 1,
      "message": "Actually, I just realized that ToSimd128Register does the DCHECK, so no check necessary here.",
      "parentUuid": "4891d9c2_07768424",
      "revId": "ced77d312a502f80d12b7da6540a24b421175404",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8150de2d_19d7e3d7",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 11
      },
      "lineNbr": 2998,
      "author": {
        "id": 1183769
      },
      "writtenOn": "2018-01-26T14:58:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cd1e6aa4_03c8ec19",
      "revId": "ced77d312a502f80d12b7da6540a24b421175404",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ccc68f09_75921bfc",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 11
      },
      "lineNbr": 3033,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2018-01-24T12:33:09Z",
      "side": 1,
      "message": "I\u0027d like DCHECK(destination-\u003eIsDoubleRegister()) here.",
      "revId": "ced77d312a502f80d12b7da6540a24b421175404",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "667a6708_9999b2b3",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 11
      },
      "lineNbr": 3033,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2018-01-24T15:31:55Z",
      "side": 1,
      "message": "Actually, I just realized that ToDoubleRegister does the DCHECK, so no check necessary here.",
      "parentUuid": "ccc68f09_75921bfc",
      "revId": "ced77d312a502f80d12b7da6540a24b421175404",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f33055cb_8401795e",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 11
      },
      "lineNbr": 3033,
      "author": {
        "id": 1183769
      },
      "writtenOn": "2018-01-26T14:58:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "667a6708_9999b2b3",
      "revId": "ced77d312a502f80d12b7da6540a24b421175404",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09112d42_a787d471",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 11
      },
      "lineNbr": 3099,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2018-01-24T12:33:09Z",
      "side": 1,
      "message": "See above.",
      "revId": "ced77d312a502f80d12b7da6540a24b421175404",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c396ad4_7d01dfed",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 11
      },
      "lineNbr": 3099,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2018-01-24T15:31:55Z",
      "side": 1,
      "message": "Actually, I just realized that ToSimd128Register does the DCHECK, so no check necessary here.",
      "parentUuid": "09112d42_a787d471",
      "revId": "ced77d312a502f80d12b7da6540a24b421175404",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8bd16b0_d25b14dd",
        "filename": "src/compiler/arm/code-generator-arm.cc",
        "patchSetId": 11
      },
      "lineNbr": 3099,
      "author": {
        "id": 1183769
      },
      "writtenOn": "2018-01-26T14:58:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1c396ad4_7d01dfed",
      "revId": "ced77d312a502f80d12b7da6540a24b421175404",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9156e9a9_8e0eb80a",
        "filename": "src/compiler/arm64/code-generator-arm64.cc",
        "patchSetId": 11
      },
      "lineNbr": 2544,
      "author": {
        "id": 1119600
      },
      "writtenOn": "2018-01-24T12:33:09Z",
      "side": 1,
      "message": "Which cases does the else handle? All stack slots that are not Simd128?",
      "revId": "ced77d312a502f80d12b7da6540a24b421175404",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e66b29d5_7a53d41f",
        "filename": "src/compiler/arm64/code-generator-arm64.cc",
        "patchSetId": 11
      },
      "lineNbr": 2544,
      "author": {
        "id": 1183769
      },
      "writtenOn": "2018-01-24T14:40:58Z",
      "side": 1,
      "message": "Yes, since the smallest a slot can be is the size of a pointer, we have a single path for Word32, Word64/Ptr, Float32 and Float64. Handy!",
      "parentUuid": "9156e9a9_8e0eb80a",
      "revId": "ced77d312a502f80d12b7da6540a24b421175404",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9156dc05_93043e3e",
        "filename": "src/compiler/arm64/code-generator-arm64.cc",
        "patchSetId": 11
      },
      "lineNbr": 2544,
      "author": {
        "id": 1183769
      },
      "writtenOn": "2018-01-26T14:58:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e66b29d5_7a53d41f",
      "revId": "ced77d312a502f80d12b7da6540a24b421175404",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd786c20_1a5ae4ff",
        "filename": "src/compiler/code-generator.cc",
        "patchSetId": 11
      },
      "lineNbr": 531,
      "author": {
        "id": 1183769
      },
      "writtenOn": "2018-01-24T14:53:05Z",
      "side": 1,
      "message": "I just realized this case is not supported. A swap has to be canonicalized to have the register as the source and never the destination. I\u0027ll remove this case and add a DCHECK(destination-\u003eIsAnyStackSlot());",
      "revId": "ced77d312a502f80d12b7da6540a24b421175404",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b88d0f94_61b5d336",
        "filename": "src/compiler/code-generator.cc",
        "patchSetId": 11
      },
      "lineNbr": 531,
      "author": {
        "id": 1183769
      },
      "writtenOn": "2018-01-26T14:58:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fd786c20_1a5ae4ff",
      "revId": "ced77d312a502f80d12b7da6540a24b421175404",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}