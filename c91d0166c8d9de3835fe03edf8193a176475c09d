{
  "comments": [
    {
      "key": {
        "uuid": "97ca6e38_f29ba0f6",
        "filename": "src/code-stub-assembler.cc",
        "patchSetId": 3
      },
      "lineNbr": 2310,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2017-08-29T06:46:32Z",
      "side": 1,
      "message": "I wonder why structs should always be kPretenured.. It places additional stress on the GC; and promise capabilities don\u0027t seem long-lived (or are they?). I\u0027d suggest preserving the usual pattern of passing in AllocationFlags here, and keeping them in new space for promise capabilities.",
      "revId": "c91d0166c8d9de3835fe03edf8193a176475c09d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63b95336_89fbc9b8",
        "filename": "src/code-stub-assembler.cc",
        "patchSetId": 3
      },
      "lineNbr": 2310,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2017-08-30T01:39:49Z",
      "side": 1,
      "message": "That was my naive intuition as well. But heap.cc does \n  AllocationResult allocation \u003d Allocate(map, OLD_SPACE);\n\nand in heap.h:\n  // Allocates a new utility object in the old generation.\n  MUST_USE_RESULT AllocationResult AllocateStruct(InstanceType type);\n\n\nI wasn\u0027t convinced that my naive intuition was better than the GC team\u0027s (potentially) measured approach.",
      "revId": "c91d0166c8d9de3835fe03edf8193a176475c09d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d977ec9_0253a9dc",
        "filename": "src/code-stub-assembler.cc",
        "patchSetId": 3
      },
      "lineNbr": 2310,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2017-08-30T07:39:23Z",
      "side": 1,
      "message": "After chatting with a couple of people, the history behind the unconditional OLD_SPACE struct allocation is unclear. But it doesn\u0027t seem to make sense anymore now that we have plenty of short-lived structs. \n\nmlippautz@ will change AllocateStruct (https://crbug.com/v8/6771), and please also add an AllocationFlag here. Nice find!",
      "parentUuid": "63b95336_89fbc9b8",
      "revId": "c91d0166c8d9de3835fe03edf8193a176475c09d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06be12a6_de2233de",
        "filename": "src/code-stub-assembler.cc",
        "patchSetId": 3
      },
      "lineNbr": 2316,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2017-08-29T06:46:32Z",
      "side": 1,
      "message": "WDYT about reusing and renaming InitializeJSObjectBody instead? Maybe just to InitializeObjectBody?",
      "revId": "c91d0166c8d9de3835fe03edf8193a176475c09d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b5bfac2_3e2230b2",
        "filename": "src/code-stub-assembler.cc",
        "patchSetId": 3
      },
      "lineNbr": 2316,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2017-08-30T01:39:49Z",
      "side": 1,
      "message": "JSObject::InitializeBody seems more involved than whats currently implemented in CSA and I was worried that it might be changed later to match the c++ version, without updating AllocateStruct. I\u0027m happy to just inline InitalizeStructBody into AllocateStruct if that\u0027s better.",
      "parentUuid": "06be12a6_de2233de",
      "revId": "c91d0166c8d9de3835fe03edf8193a176475c09d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f2a9d9e_7167072d",
        "filename": "src/code-stub-assembler.cc",
        "patchSetId": 3
      },
      "lineNbr": 2316,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2017-08-30T07:39:23Z",
      "side": 1,
      "message": "Ah I see, thanks for the explanation, makes sense. Let\u0027s keep InitializeStructBody.",
      "parentUuid": "2b5bfac2_3e2230b2",
      "revId": "c91d0166c8d9de3835fe03edf8193a176475c09d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07150a4b_37fed83c",
        "filename": "src/code-stub-assembler.h",
        "patchSetId": 3
      },
      "lineNbr": 698,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2017-08-29T06:46:32Z",
      "side": 1,
      "message": "Nit: Please move this above AllocateJSObjectFromMap to match the .cc file. Also, if we do end up keeping InitializeStructBody, we\u0027ll need to change the default value for start_offset :)",
      "revId": "c91d0166c8d9de3835fe03edf8193a176475c09d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee9c5940_be35e451",
        "filename": "src/code-stub-assembler.h",
        "patchSetId": 3
      },
      "lineNbr": 698,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2017-08-30T01:39:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07150a4b_37fed83c",
      "revId": "c91d0166c8d9de3835fe03edf8193a176475c09d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6cc17330_75381c8d",
        "filename": "src/code-stub-assembler.h",
        "patchSetId": 3
      },
      "lineNbr": 698,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2017-08-30T05:20:04Z",
      "side": 1,
      "message": "For future ref, can you point to this in the style guide? I can\u0027t seem to find this in the style guide.",
      "parentUuid": "ee9c5940_be35e451",
      "revId": "c91d0166c8d9de3835fe03edf8193a176475c09d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7f4c76d_c999d1e5",
        "filename": "src/code-stub-assembler.h",
        "patchSetId": 3
      },
      "lineNbr": 698,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2017-08-30T07:39:23Z",
      "side": 1,
      "message": "It\u0027s not in any style guide, at least not as far as I\u0027m aware. IMHO it just makes the code organization nicer. I don\u0027t feel too strongly about it though :)",
      "parentUuid": "6cc17330_75381c8d",
      "revId": "c91d0166c8d9de3835fe03edf8193a176475c09d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5e37cae_a4dbdac9",
        "filename": "src/objects-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 581,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2017-08-29T06:46:32Z",
      "side": 1,
      "message": "Nit: Please alpha-sort",
      "revId": "c91d0166c8d9de3835fe03edf8193a176475c09d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56b8b8f2_56188df2",
        "filename": "src/objects-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 581,
      "author": {
        "id": 1158954
      },
      "writtenOn": "2017-08-30T01:39:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5e37cae_a4dbdac9",
      "revId": "c91d0166c8d9de3835fe03edf8193a176475c09d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}