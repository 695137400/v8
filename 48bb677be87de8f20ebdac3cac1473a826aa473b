{
  "comments": [
    {
      "key": {
        "uuid": "ea341a64_bb9dfa69",
        "filename": "src/objects/lookup-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2020-04-15T12:42:42Z",
      "side": 1,
      "message": "If we\u0027re still in ACCESS_CHECK here, can we assumed !HasAccess()? It seems like the embedder doesn\u0027t want additional calls...",
      "revId": "48bb677be87de8f20ebdac3cac1473a826aa473b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8995a09_01560a1f",
        "filename": "src/objects/lookup-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2020-04-15T13:37:17Z",
      "side": 1,
      "message": "I don\u0027t yet understand the full context of this fix, but LookupIterator::UpdateProtector seems called when defining or deleting a property.  Blink never define nor delete a property in AccessCheckCallback.  So, maybe we can return early in this case.",
      "parentUuid": "ea341a64_bb9dfa69",
      "revId": "48bb677be87de8f20ebdac3cac1473a826aa473b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "512bb234_b06815bd",
        "filename": "src/objects/lookup-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1184114
      },
      "writtenOn": "2020-04-17T11:28:10Z",
      "side": 1,
      "message": "Yuki: The callback is called to check whether we can proceed deleting / adding / ..., and right after the check succeeds we will do that, even if the callback itself doesn\u0027t. My question was around whether it\u0027s a problem that we\u0027d perform additional calls, since we have tests that verify how often exactly it\u0027s called. I guess that\u0027s mostly for performance reasons; and maybe we should keep it this way (we could also cache the result of HasAccess but that has other risks...)\n\nI think we\u0027re probably simply calling UpdateProtector too aggressively, even if e.g., delete won\u0027t actually delete anything. It\u0027s called e.g., at the beginning of DeleteProperty, while we could move it further down.",
      "parentUuid": "a8995a09_01560a1f",
      "revId": "48bb677be87de8f20ebdac3cac1473a826aa473b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9263f12b_d35b206d",
        "filename": "src/objects/lookup-inl.h",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1002507
      },
      "writtenOn": "2020-04-17T11:33:22Z",
      "side": 1,
      "message": "Thanks for the explanation.  Your idea sounds nice to me.  It\u0027s nice to make the call less frequent by moving the call.",
      "parentUuid": "512bb234_b06815bd",
      "revId": "48bb677be87de8f20ebdac3cac1473a826aa473b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}