{
  "comments": [
    {
      "key": {
        "uuid": "24dac87f_01281730",
        "filename": "src/heap/basic-memory-chunk.h",
        "patchSetId": 11
      },
      "lineNbr": 115,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2019-10-29T06:55:06Z",
      "side": 1,
      "message": "This is subtle since the size can decrease. It currently happens in Page::ShrinkToHighWaterMark and LargeObjectSpace::FreeUnmarkedObjects.\n\nA potential bug is that we leak the buckets because we pass buckets() to slot-set deletion function. I think it currently works because in Page::ShrinkToHighWaterMark the remembered set must be empty (can you assert that?) and LargeObjectSpace::FreeUnmarkedObjects explicitly clears the remembered set in the trimmed area.\n\nI wonder if in debug mode we want to track the original_buckets in the slot set and the assert that all buckets from buckets() to original_buckets are nullptr.",
      "range": {
        "startLine": 115,
        "startChar": 9,
        "endLine": 115,
        "endChar": 68
      },
      "revId": "9e1c6e1159c481cb6dda535a6c217447f72adee9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "126d727d_89bb596c",
        "filename": "src/heap/basic-memory-chunk.h",
        "patchSetId": 11
      },
      "lineNbr": 115,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2019-10-29T15:41:43Z",
      "side": 1,
      "message": "Good catch! I\u0027ve updated SlotSet to also store initial_buckets. In debug-mode we can check that those bucket-pointers are null.",
      "parentUuid": "24dac87f_01281730",
      "range": {
        "startLine": 115,
        "startChar": 9,
        "endLine": 115,
        "endChar": 68
      },
      "revId": "9e1c6e1159c481cb6dda535a6c217447f72adee9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5daac84_fff6927f",
        "filename": "src/heap/remembered-set.h",
        "patchSetId": 11
      },
      "lineNbr": 33,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2019-10-29T06:55:06Z",
      "side": 1,
      "message": "Nit: unrelated to the CL, but could you please change this to slot_set to be consistent with other functions?",
      "range": {
        "startLine": 33,
        "startChar": 30,
        "endLine": 33,
        "endChar": 35
      },
      "revId": "9e1c6e1159c481cb6dda535a6c217447f72adee9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "219d3e61_c09424c4",
        "filename": "src/heap/slot-set.h",
        "patchSetId": 11
      },
      "lineNbr": 27,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2019-10-29T06:55:06Z",
      "side": 1,
      "message": "Nit: the comment is out-dated now.",
      "range": {
        "startLine": 27,
        "startChar": 43,
        "endLine": 27,
        "endChar": 51
      },
      "revId": "9e1c6e1159c481cb6dda535a6c217447f72adee9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c91e680_1d555c17",
        "filename": "src/heap/slot-set.h",
        "patchSetId": 11
      },
      "lineNbr": 27,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2019-10-29T15:41:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "219d3e61_c09424c4",
      "range": {
        "startLine": 27,
        "startChar": 43,
        "endLine": 27,
        "endChar": 51
      },
      "revId": "9e1c6e1159c481cb6dda535a6c217447f72adee9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}