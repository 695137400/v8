{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "801cd05e_ee0b00e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1411293
      },
      "writtenOn": "2022-06-07T09:38:00Z",
      "side": 1,
      "message": "Jakob: PTAL overall.\nMaya: Please approve pipeline.cc.",
      "revId": "796ad3667073c882da05e1dbfdafa3435edfdb8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "682ec298_a267205d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2022-06-07T10:09:41Z",
      "side": 1,
      "message": "src/compiler LGTM, thanks!",
      "revId": "796ad3667073c882da05e1dbfdafa3435edfdb8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87ef8eb3_38be6bc0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2022-06-07T11:01:16Z",
      "side": 1,
      "message": "LGTM with a few comments/questions.",
      "revId": "796ad3667073c882da05e1dbfdafa3435edfdb8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b72e97a3_401ce465",
        "filename": "src/compiler/wasm-compiler.cc",
        "patchSetId": 4
      },
      "lineNbr": 2990,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2022-06-07T11:01:16Z",
      "side": 1,
      "message": "I\u0027m surprised by this. Clearly the generated code assumes that the functions vector has been populated -- we\u0027re not doing any lazy initialization *here*. Doesn\u0027t that imply that we *can* use LoadImmutable? In particular, if we load the same entry twice, we should be able to deduplicate the second load against the first, right?",
      "range": {
        "startLine": 2989,
        "startChar": 5,
        "endLine": 2990,
        "endChar": 24
      },
      "revId": "796ad3667073c882da05e1dbfdafa3435edfdb8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4383652_aed89581",
        "filename": "src/heap/factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 3087,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2022-06-07T11:01:16Z",
      "side": 1,
      "message": "I think you can drop this entirely: `proxy_constructor_map()` already returns a `Handle\u003cMap\u003e`.\n\nAgain twice below.",
      "range": {
        "startLine": 3087,
        "startChar": 12,
        "endLine": 3087,
        "endChar": 30
      },
      "revId": "796ad3667073c882da05e1dbfdafa3435edfdb8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "575872c1_eada5264",
        "filename": "src/wasm/baseline/liftoff-compiler.cc",
        "patchSetId": 4
      },
      "lineNbr": 5300,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2022-06-07T11:01:16Z",
      "side": 1,
      "message": "I don\u0027t think these two lines should move. It\u0027s perfectly fine if `instance_size` chooses the `kReturnRegister0` if that happens to be free, right?",
      "range": {
        "startLine": 5299,
        "startChar": 4,
        "endLine": 5300,
        "endChar": 34
      },
      "revId": "796ad3667073c882da05e1dbfdafa3435edfdb8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5de137b_638af750",
        "filename": "src/wasm/baseline/x64/liftoff-assembler-x64.h",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2022-06-07T11:01:16Z",
      "side": 1,
      "message": "Ha, I also have a patch in the making that updates this comment. I\u0027ll rebase ðŸ˜Š",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 72,
        "endChar": 42
      },
      "revId": "796ad3667073c882da05e1dbfdafa3435edfdb8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}