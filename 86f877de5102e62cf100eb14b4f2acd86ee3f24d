{
  "comments": [
    {
      "key": {
        "uuid": "df11d5ff_e52459c4",
        "filename": "src/handler-table.cc",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-05-09T11:59:27Z",
      "side": 1,
      "message": "Hello Jakob and Michael, I found this is failing on ppc. The issue comes from constant pool alignment will potentially increase handler_table_size. From GDB, I read  handler_table_offset_ in code-generator.cc:308 is 8036, after emitting 6 handlers, pc_offset() becomes 8084. But constant_pool_offset will re-align pc_offset to 8088. Therefore, when we compute handler_table_size \u003d constant_pool_offset - handler_table_offset, handler table becomes 4 bytes larger. How would you recommend to fix this? Can I align handler_table_offset to 8 bytes on 64-bit platform too, so that we can avoid alignment later when emitting constant pool?",
      "range": {
        "startLine": 41,
        "startChar": 2,
        "endLine": 41,
        "endChar": 74
      },
      "revId": "86f877de5102e62cf100eb14b4f2acd86ee3f24d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf6bcf7a_e498dcb0",
        "filename": "src/handler-table.cc",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2019-05-09T13:17:07Z",
      "side": 1,
      "message": "And the constant pool alignment comes from here: https://cs.chromium.org/chromium/src/v8/src/constant-pool.cc?l\u003d189\u0026rcl\u003d7a0e48289084b3dd77fdb1f042a5a7485674b7b3\n\nIt is only the DCHECK that fails, right? We still count the number of entries correctly in L35, since the maximal padding (\u003d 7 bytes) is less than kReturnEntrySize * sizeof(int32_t) (\u003d 8 bytes).",
      "parentUuid": "df11d5ff_e52459c4",
      "range": {
        "startLine": 41,
        "startChar": 2,
        "endLine": 41,
        "endChar": 74
      },
      "revId": "86f877de5102e62cf100eb14b4f2acd86ee3f24d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a5c3294_aecdf011",
        "filename": "src/handler-table.cc",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-05-09T14:21:32Z",
      "side": 1,
      "message": "Yes to both questions. And the number of entries should be still correct.",
      "parentUuid": "cf6bcf7a_e498dcb0",
      "range": {
        "startLine": 41,
        "startChar": 2,
        "endLine": 41,
        "endChar": 74
      },
      "revId": "86f877de5102e62cf100eb14b4f2acd86ee3f24d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "697a3280_3a88220a",
        "filename": "src/handler-table.cc",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1118575
      },
      "writtenOn": "2019-05-09T14:54:53Z",
      "side": 1,
      "message": "If it is only the DCHECK that fails, then we could DCHECK that the alignemt padding is \u003c\u003d 4 bytes and also static_assert(4 \u003c\u003d kReturnEntrySize * sizeof(int32_t)) so that we make sure the padding will never kick us to the next entry. Would that make sense? WDYT?",
      "parentUuid": "5a5c3294_aecdf011",
      "range": {
        "startLine": 41,
        "startChar": 2,
        "endLine": 41,
        "endChar": 74
      },
      "revId": "86f877de5102e62cf100eb14b4f2acd86ee3f24d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d099fe1_5682811d",
        "filename": "src/handler-table.cc",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1155482
      },
      "writtenOn": "2019-05-09T14:59:54Z",
      "side": 1,
      "message": "DCHECK_LE(4, handler_table_size % (kReturnEntrySize * sizeof(int32_t))); should works fine.",
      "parentUuid": "697a3280_3a88220a",
      "range": {
        "startLine": 41,
        "startChar": 2,
        "endLine": 41,
        "endChar": 74
      },
      "revId": "86f877de5102e62cf100eb14b4f2acd86ee3f24d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}