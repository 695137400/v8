{
  "comments": [
    {
      "key": {
        "uuid": "824b36ba_a0aaec55",
        "filename": "tools/testrunner/standard_runner.py",
        "patchSetId": 18
      },
      "lineNbr": 196,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T03:02:36Z",
      "side": 1,
      "message": "Why again? Why deprecate?",
      "range": {
        "startLine": 196,
        "startChar": 48,
        "endLine": 196,
        "endChar": 53
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4dafadc_5e2d93c0",
        "filename": "tools/testrunner/standard_runner.py",
        "patchSetId": 18
      },
      "lineNbr": 196,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-12-21T10:01:13Z",
      "side": 1,
      "message": "I thought the conclusion was that we discontinue to move V8 to the flakiness surface. But no real need for this TODO here. Will remove.\n\nI\u0027m just somewhat happy that the option and the underlying results processor are dead and untested code ATM. This just might cause bit rot.",
      "parentUuid": "824b36ba_a0aaec55",
      "range": {
        "startLine": 196,
        "startChar": 48,
        "endLine": 196,
        "endChar": 53
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa74739c_a0e2ff45",
        "filename": "tools/testrunner/standard_runner.py",
        "patchSetId": 18
      },
      "lineNbr": 196,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T14:06:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d4dafadc_5e2d93c0",
      "range": {
        "startLine": 196,
        "startChar": 48,
        "endLine": 196,
        "endChar": 53
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90de7c45_d0e3e978",
        "filename": "tools/testrunner/standard_runner.py",
        "patchSetId": 18
      },
      "lineNbr": 546,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T03:02:36Z",
      "side": 1,
      "message": "Assert would prevent all tests from being run. Or is this behavior not desired on the bots? Printing may still be useful for users running this locally.",
      "range": {
        "startLine": 546,
        "startChar": 46,
        "endLine": 546,
        "endChar": 52
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45e82249_1eab8e97",
        "filename": "tools/testrunner/standard_runner.py",
        "patchSetId": 18
      },
      "lineNbr": 546,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-12-21T10:01:13Z",
      "side": 1,
      "message": "These values should just never be wrong. And if they are ever, we need to fix asap. Aka critical error.\n\nAnother option would be a larger refactoring of this code, so that we can provide a return code !\u003d 0 in the end. Updated the TODO.",
      "parentUuid": "90de7c45_d0e3e978",
      "range": {
        "startLine": 546,
        "startChar": 46,
        "endLine": 546,
        "endChar": 52
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5dd6ffff_08eb00bb",
        "filename": "tools/testrunner/standard_runner.py",
        "patchSetId": 18
      },
      "lineNbr": 546,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T14:06:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "45e82249_1eab8e97",
      "range": {
        "startLine": 546,
        "startChar": 46,
        "endLine": 546,
        "endChar": 52
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efe3797a_d79c6d5a",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 67,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T03:02:36Z",
      "side": 1,
      "message": "Not used. Also no need to call os.makedirs(outdir) below. Will be created automatically by os.makedirs(builddir)",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 67,
        "endChar": 42
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf04646c_8e094526",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 67,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-12-21T10:01:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "efe3797a_d79c6d5a",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 67,
        "endChar": 42
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4bc2a58f_57b9d579",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 72,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T03:02:36Z",
      "side": 1,
      "message": "Not needed. Will be created when creating subdirs in the loop below.",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 72,
        "endChar": 25
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc7925e6_16c9a667",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 72,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-12-21T10:01:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4bc2a58f_57b9d579",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 72,
        "endChar": 25
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "752d61b6_35146446",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 78,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T03:02:36Z",
      "side": 1,
      "message": "Can this be a dir? shutil.copy seems to only copy files.",
      "range": {
        "startLine": 78,
        "startChar": 10,
        "endLine": 78,
        "endChar": 15
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78bb5a90_daad6905",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 78,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-12-21T10:01:13Z",
      "side": 1,
      "message": "Not for now. If I ever add one this will fail and I will revisit this.",
      "parentUuid": "752d61b6_35146446",
      "range": {
        "startLine": 78,
        "startChar": 10,
        "endLine": 78,
        "endChar": 15
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0efbe572_1dea03e5",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 78,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T14:06:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "78bb5a90_daad6905",
      "range": {
        "startLine": 78,
        "startChar": 10,
        "endLine": 78,
        "endChar": 15
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad36bd3_ed3b5e35",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 150,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T03:02:36Z",
      "side": 1,
      "message": "Shouldn\u0027t this be before import statement above to allow overriding global var?",
      "range": {
        "startLine": 150,
        "startChar": 4,
        "endLine": 150,
        "endChar": 26
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abaca032_d59bfcc2",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 150,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-12-21T10:01:13Z",
      "side": 1,
      "message": "Done, but seems to not make any difference.",
      "parentUuid": "dad36bd3_ed3b5e35",
      "range": {
        "startLine": 150,
        "startChar": 4,
        "endLine": 150,
        "endChar": 26
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80c3b5ff_5840094b",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 150,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T14:06:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "abaca032_d59bfcc2",
      "range": {
        "startLine": 150,
        "startChar": 4,
        "endLine": 150,
        "endChar": 26
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6194605c_950cf818",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 195,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T03:02:36Z",
      "side": 1,
      "message": "Is this guaranteed? Can it happen that each share will contain 2 variants of an be of the tests?",
      "range": {
        "startLine": 195,
        "startChar": 10,
        "endLine": 195,
        "endChar": 58
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0860a5ff_246db39a",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 195,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-12-21T10:01:13Z",
      "side": 1,
      "message": "This is just capturing the current behavior (like a dumb expectation file). If that behavior changes, we need to change the expectation, as it\u0027s no necessarily wrong. But at least we will see.\n\nThe behavior ATM is: We first enumerate each test and each variant as:\nT1V1\nT1V2\nT2V1\nT2V2\nThen we distribute modulo shard num.",
      "parentUuid": "6194605c_950cf818",
      "range": {
        "startLine": 195,
        "startChar": 10,
        "endLine": 195,
        "endChar": 58
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e67ce482_a3366cca",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 195,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T14:06:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0860a5ff_246db39a",
      "range": {
        "startLine": 195,
        "startChar": 10,
        "endLine": 195,
        "endChar": 58
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0245c4ed_9e0ce459",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 238,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T14:02:31Z",
      "side": 1,
      "message": "Replace all the checks below with comparing to expected JSON after\n - replacing timings with some constant\n - sorting keys",
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "154ac9d7_6800141a",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 254,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T03:02:36Z",
      "side": 1,
      "message": "Reviewed until here. Will continue tomorrow.",
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa489abf_d27ee958",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 258,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T03:02:36Z",
      "side": 1,
      "message": "Nit: typo",
      "range": {
        "startLine": 258,
        "startChar": 4,
        "endLine": 258,
        "endChar": 9
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35ad891c_29338cf9",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 258,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-12-21T10:01:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa489abf_d27ee958",
      "range": {
        "startLine": 258,
        "startChar": 4,
        "endLine": 258,
        "endChar": 9
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfd658fd_4693fd85",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 263,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-12-21T10:48:12Z",
      "side": 1,
      "message": "Unused by the testrunner.",
      "range": {
        "startLine": 263,
        "startChar": 58,
        "endLine": 263,
        "endChar": 74
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3235b098_4729e3b5",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 263,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-12-21T12:59:34Z",
      "side": 1,
      "message": "True, but v8_target_cpu below is and I want to make the test data reasonable. We might want to use it in the future to deduce if we run a simulator.",
      "parentUuid": "dfd658fd_4693fd85",
      "range": {
        "startLine": 263,
        "startChar": 58,
        "endLine": 263,
        "endChar": 74
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b32d797_99dbf7a6",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 263,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-12-21T13:18:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3235b098_4729e3b5",
      "range": {
        "startLine": 263,
        "startChar": 58,
        "endLine": 263,
        "endChar": 74
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98933bc8_f9f15ef6",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 282,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T14:02:31Z",
      "side": 1,
      "message": "Please write this as\n\n\n      expect_text \u003d (\n          \u0027\u003e\u003e\u003e Autodetected:\\n\u0027\n          \u0027asan\\n\u0027\n          \u0027cfi_vptr\\n\u0027\n          \u0027dcheck_always_on\\n\u0027\n          \u0027msan\\n\u0027\n          \u0027no_i18n\\n\u0027\n          \u0027no_snap\\n\u0027\n          \u0027tsan\\n\u0027\n          \u0027ubsan_vptr\\n\u0027\n          \u0027\u003e\u003e\u003e Running tests for ia32.release\u0027)",
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37a41e4f_8ae1e4f4",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 352,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T14:02:31Z",
      "side": 1,
      "message": "Should this assert that the correct mode has been detected? If returncode\u003d\u003d0 is an indicator of that, please add a comment.",
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65de8285_1fc4b6a2",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 397,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T14:02:31Z",
      "side": 1,
      "message": "Would this be different for real tests? If so, please add a TODO to make it more realistic.",
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5df84b6a_4df4e299",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 437,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T14:02:31Z",
      "side": 1,
      "message": "does not crash.",
      "range": {
        "startLine": 437,
        "startChar": 44,
        "endLine": 437,
        "endChar": 45
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2790e470_847e6e45",
        "filename": "tools/unittests/run_tests_test.py",
        "patchSetId": 18
      },
      "lineNbr": 469,
      "author": {
        "id": 1153089
      },
      "writtenOn": "2017-12-21T14:02:31Z",
      "side": 1,
      "message": "This comment probably needs to be updated.",
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "509449bd_25ee2eb1",
        "filename": "tools/unittests/testdata/testroot1/v8_build_config.json",
        "patchSetId": 18
      },
      "lineNbr": 2,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-12-21T10:48:12Z",
      "side": 1,
      "message": "I think this one is unused in the testrunner.",
      "range": {
        "startLine": 2,
        "startChar": 3,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1eb6a9ac_fddc3e29",
        "filename": "tools/unittests/testdata/testroot1/v8_build_config.json",
        "patchSetId": 18
      },
      "lineNbr": 2,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-12-21T12:59:34Z",
      "side": 1,
      "message": "no problem, the file is not meant to only serve the test runner. Rather to capture how the build was configured in ways that might affect the V8 runtime.",
      "parentUuid": "509449bd_25ee2eb1",
      "range": {
        "startLine": 2,
        "startChar": 3,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63147044_3c408387",
        "filename": "tools/unittests/testdata/testroot1/v8_build_config.json",
        "patchSetId": 18
      },
      "lineNbr": 2,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-12-21T13:18:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1eb6a9ac_fddc3e29",
      "range": {
        "startLine": 2,
        "startChar": 3,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eea7f13f_8ad643d7",
        "filename": "tools/unittests/testdata/testroot1/v8_build_config.json",
        "patchSetId": 18
      },
      "lineNbr": 6,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-12-21T10:48:12Z",
      "side": 1,
      "message": "same here",
      "range": {
        "startLine": 6,
        "startChar": 2,
        "endLine": 6,
        "endChar": 29
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38a7ab60_31b22215",
        "filename": "tools/unittests/testdata/testroot1/v8_build_config.json",
        "patchSetId": 18
      },
      "lineNbr": 6,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-12-21T12:59:34Z",
      "side": 1,
      "message": "also no problem. This just reflects how the file loos in prod.",
      "parentUuid": "eea7f13f_8ad643d7",
      "range": {
        "startLine": 6,
        "startChar": 2,
        "endLine": 6,
        "endChar": 29
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6365feed_c66a8266",
        "filename": "tools/unittests/testdata/testroot1/v8_build_config.json",
        "patchSetId": 18
      },
      "lineNbr": 6,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-12-21T13:18:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "38a7ab60_31b22215",
      "range": {
        "startLine": 6,
        "startChar": 2,
        "endLine": 6,
        "endChar": 29
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7bf7099d_7f7830a6",
        "filename": "tools/unittests/testdata/testroot1/v8_build_config.json",
        "patchSetId": 18
      },
      "lineNbr": 13,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-12-21T10:48:12Z",
      "side": 1,
      "message": "same here",
      "range": {
        "startLine": 12,
        "startChar": 3,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29d7ab40_2005dfe0",
        "filename": "tools/unittests/testdata/testroot1/v8_build_config.json",
        "patchSetId": 18
      },
      "lineNbr": 13,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2017-12-21T12:59:34Z",
      "side": 1,
      "message": "v8_current_cpu is used by the correctness fuzzer harness.",
      "parentUuid": "7bf7099d_7f7830a6",
      "range": {
        "startLine": 12,
        "startChar": 3,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c126a266_4332e405",
        "filename": "tools/unittests/testdata/testroot1/v8_build_config.json",
        "patchSetId": 18
      },
      "lineNbr": 13,
      "author": {
        "id": 1246262
      },
      "writtenOn": "2017-12-21T13:18:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "29d7ab40_2005dfe0",
      "range": {
        "startLine": 12,
        "startChar": 3,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "05136d7ef699a189deb613286dc15273a23ac854",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}