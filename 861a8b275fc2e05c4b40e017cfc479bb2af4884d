{
  "comments": [
    {
      "key": {
        "uuid": "a01314e8_2a4ff2c8",
        "filename": "src/wasm/wasm-code-specialization.cc",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-03-31T07:53:07Z",
      "side": 1,
      "message": "what does that mean?",
      "range": {
        "startLine": 142,
        "startChar": 33,
        "endLine": 142,
        "endChar": 59
      },
      "revId": "861a8b275fc2e05c4b40e017cfc479bb2af4884d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bed5142d_bf8b1a29",
        "filename": "src/wasm/wasm-code-specialization.cc",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-03-31T08:45:48Z",
      "side": 1,
      "message": "It explains the DCHECK below. I extended the comment.\nWe need to store the relocate_direct_calls_instance, since there is also the interface where we only patch one code object, then we don\u0027t have that other instance available.\nIf relocate_direct_calls_instance is set, we know that we should patch direct calls.",
      "parentUuid": "a01314e8_2a4ff2c8",
      "range": {
        "startLine": 142,
        "startChar": 33,
        "endLine": 142,
        "endChar": 59
      },
      "revId": "861a8b275fc2e05c4b40e017cfc479bb2af4884d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "795614ae_7781aa4e",
        "filename": "src/wasm/wasm-debug.cc",
        "patchSetId": 2
      },
      "lineNbr": 554,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-03-31T07:53:07Z",
      "side": 1,
      "message": "Can this/Should this happen?",
      "revId": "861a8b275fc2e05c4b40e017cfc479bb2af4884d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "331cf61c_e4d40d4e",
        "filename": "src/wasm/wasm-debug.cc",
        "patchSetId": 2
      },
      "lineNbr": 554,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-03-31T08:45:48Z",
      "side": 1,
      "message": "Yes, it can happen. Instantiation of the WasmDebugInfo currently does not imply creation of the InterpreterHandle.\nThe InterpeterHandle is only created once it is needed (for executing interpreter, or for setting a breakpoint).",
      "parentUuid": "795614ae_7781aa4e",
      "revId": "861a8b275fc2e05c4b40e017cfc479bb2af4884d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "039809e8_720ebc96",
        "filename": "src/wasm/wasm-interpreter.cc",
        "patchSetId": 2
      },
      "lineNbr": 632,
      "author": {
        "id": 1122079
      },
      "writtenOn": "2017-03-30T20:15:11Z",
      "side": 1,
      "message": "This has been fixed, so the TODO can be removed.",
      "range": {
        "startLine": 632,
        "startChar": 25,
        "endLine": 632,
        "endChar": 26
      },
      "revId": "861a8b275fc2e05c4b40e017cfc479bb2af4884d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f928001_707b9fe1",
        "filename": "src/wasm/wasm-interpreter.cc",
        "patchSetId": 2
      },
      "lineNbr": 632,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-03-31T08:45:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "039809e8_720ebc96",
      "range": {
        "startLine": 632,
        "startChar": 25,
        "endLine": 632,
        "endChar": 26
      },
      "revId": "861a8b275fc2e05c4b40e017cfc479bb2af4884d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc7cabcd_2d559755",
        "filename": "src/wasm/wasm-interpreter.cc",
        "patchSetId": 2
      },
      "lineNbr": 644,
      "author": {
        "id": 1122079
      },
      "writtenOn": "2017-03-30T20:15:11Z",
      "side": 1,
      "message": "I\u0027ve been told that realloc is an unsafe allocator, and the array_buffer_allocator should be used instead - does that fit the use cases of the interpreter as well? Leave as is if not.",
      "range": {
        "startLine": 644,
        "startChar": 37,
        "endLine": 644,
        "endChar": 38
      },
      "revId": "861a8b275fc2e05c4b40e017cfc479bb2af4884d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77241ed7_ca998899",
        "filename": "src/wasm/wasm-interpreter.cc",
        "patchSetId": 2
      },
      "lineNbr": 644,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-03-31T08:45:48Z",
      "side": 1,
      "message": "unsafe because it does not abort on failure? That\u0027s true. The same applies to the calloc above.\nThe problem here is that the interpreter currently does not even store an Isolate. In non-testing mode, we can get it from the WasmInstanceObject, but for non-testing, we would have to store it somewhere. This can surely be done, but on the other hand, this code is only executed in testing. I thus consider this not worth changing for now.",
      "parentUuid": "bc7cabcd_2d559755",
      "range": {
        "startLine": 644,
        "startChar": 37,
        "endLine": 644,
        "endChar": 38
      },
      "revId": "861a8b275fc2e05c4b40e017cfc479bb2af4884d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2fba1b5_f6b75592",
        "filename": "test/mjsunit/wasm/interpreter-mixed.js",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1141154
      },
      "writtenOn": "2017-03-31T07:53:07Z",
      "side": 1,
      "message": "I think you should add the functions consistently and define a store_body as well, even when you don\u0027t use it more than once.",
      "revId": "861a8b275fc2e05c4b40e017cfc479bb2af4884d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7abb6391_092a6080",
        "filename": "test/mjsunit/wasm/interpreter-mixed.js",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2017-03-31T08:45:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f2fba1b5_f6b75592",
      "revId": "861a8b275fc2e05c4b40e017cfc479bb2af4884d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}