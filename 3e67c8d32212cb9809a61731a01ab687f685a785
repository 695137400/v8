{
  "comments": [
    {
      "key": {
        "uuid": "191b0348_a6b8091f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2019-05-28T08:05:26Z",
      "side": 1,
      "message": "\u003e It results in Number.prototype.toString producing the\n\u003e correct binary value for all doubles.\n\nPlease add some JS tests asserting this.",
      "revId": "3e67c8d32212cb9809a61731a01ab687f685a785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a924f5a_724c4239",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1348836
      },
      "writtenOn": "2019-05-28T09:18:54Z",
      "side": 1,
      "message": "Yes. Please advise me where in the test directory it would be best to do this.",
      "parentUuid": "191b0348_a6b8091f",
      "revId": "3e67c8d32212cb9809a61731a01ab687f685a785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e581e6f_dc6e63bf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2019-05-28T09:27:54Z",
      "side": 1,
      "message": "test/mjsunit/",
      "parentUuid": "1a924f5a_724c4239",
      "revId": "3e67c8d32212cb9809a61731a01ab687f685a785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffbdaf5e_8c44c29b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-28T11:51:18Z",
      "side": 1,
      "message": "More specifically: there is test/mjsunit/number-tostring.js already, which is large enough that I wouldn\u0027t extend it, so maybe test/mjsunit/number-tostring-subnormal.js. I don\u0027t think you need very many tests there, given that expressing these strings in JavaScript is more cumbersome than in C++, so I\u0027d only add two or so tests there, just to ascertain that the behavior tested in the unittest matches what\u0027s exposed to JavaScript.",
      "parentUuid": "3e581e6f_dc6e63bf",
      "revId": "3e67c8d32212cb9809a61731a01ab687f685a785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f873aea_ac0857a4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2019-05-28T12:45:45Z",
      "side": 1,
      "message": "+1. The tests you describe in the bug report seem good.",
      "parentUuid": "ffbdaf5e_8c44c29b",
      "revId": "3e67c8d32212cb9809a61731a01ab687f685a785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42b03f34_8723431d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1348836
      },
      "writtenOn": "2019-05-28T20:35:25Z",
      "side": 1,
      "message": "Tests added in test/mjsunit/number-tostring-subnormal.js.\nIf there is too many, let me know. Most of the tests are known to fail in v8 before this patch.\nI decided to keep things simple and remove the C++ tests, as I was a bit nervous of how the constants would be parsed across all platforms.",
      "parentUuid": "5f873aea_ac0857a4",
      "revId": "3e67c8d32212cb9809a61731a01ab687f685a785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e15d1fb_ab0799d8",
        "filename": "AUTHORS",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-28T11:51:18Z",
      "side": 1,
      "message": "Please insert this entry after line 129 to maintain alpha-sorting.",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 192,
        "endChar": 38
      },
      "revId": "3e67c8d32212cb9809a61731a01ab687f685a785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53c70f6e_99569985",
        "filename": "AUTHORS",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1348836
      },
      "writtenOn": "2019-05-28T20:35:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e15d1fb_ab0799d8",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 192,
        "endChar": 38
      },
      "revId": "3e67c8d32212cb9809a61731a01ab687f685a785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "816ec637_a47b2689",
        "filename": "test/unittests/numbers/conversions-unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2019-05-28T08:05:26Z",
      "side": 1,
      "message": "Please add comments explaining these magic numbers.",
      "revId": "3e67c8d32212cb9809a61731a01ab687f685a785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "006902ea_673be060",
        "filename": "test/unittests/numbers/conversions-unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2019-05-28T11:51:18Z",
      "side": 1,
      "message": "I think the variable names are enough explanation :-)",
      "parentUuid": "816ec637_a47b2689",
      "revId": "3e67c8d32212cb9809a61731a01ab687f685a785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d267ad3d_134bdff5",
        "filename": "test/unittests/numbers/conversions-unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1214214
      },
      "writtenOn": "2019-05-28T12:45:45Z",
      "side": 1,
      "message": "I respectfully disagree. Clarifying that e.g. `max_normal_double` represents `2^1024` helps to understand whatâ€™s going on, and is worth a comment, IMHO. Same for the other numbers here.",
      "parentUuid": "006902ea_673be060",
      "revId": "3e67c8d32212cb9809a61731a01ab687f685a785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc82d187_ec459199",
        "filename": "test/unittests/numbers/conversions-unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1348836
      },
      "writtenOn": "2019-05-28T20:35:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d267ad3d_134bdff5",
      "revId": "3e67c8d32212cb9809a61731a01ab687f685a785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}