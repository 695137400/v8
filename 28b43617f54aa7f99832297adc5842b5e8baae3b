{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ea7c0efb_9b65fdd8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2023-10-11T10:26:53Z",
      "side": 1,
      "message": "overall looks good modulo `ArrayList::ToFixedArray` and `serialized_objects` storages",
      "revId": "28b43617f54aa7f99832297adc5842b5e8baae3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74c5ea46_0a042916",
        "filename": "src/codegen/code-stub-assembler.cc",
        "patchSetId": 10
      },
      "lineNbr": 5437,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2023-10-11T10:26:53Z",
      "side": 1,
      "message": "You might want to consider using memmove-like loop + `WriteBarrierForRange`.",
      "revId": "28b43617f54aa7f99832297adc5842b5e8baae3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ee9e841_b3382bdf",
        "filename": "src/objects/fixed-array.h",
        "patchSetId": 10
      },
      "lineNbr": 557,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2023-10-11T10:26:53Z",
      "side": 1,
      "message": "I wonder, wouldn\u0027t it be nice if the TaggedArrayBase could also derive from the all-static Shape class to make all the offset constants be automatically introduced to the derived object class.\nThat would solve the `ArrayList::Shape::kBlahOffset` vs. `ArrayList::kBlahOffset` issue.",
      "range": {
        "startLine": 557,
        "startChar": 52,
        "endLine": 557,
        "endChar": 66
      },
      "revId": "28b43617f54aa7f99832297adc5842b5e8baae3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3961f78a_4c722ce1",
        "filename": "src/roots/roots.h",
        "patchSetId": 10
      },
      "lineNbr": 356,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2023-10-11T10:26:53Z",
      "side": 1,
      "message": "I think it would be cleaner if we introduce a canonical `empty_array_list` object and define this field as an `ArrayList`.",
      "range": {
        "startLine": 356,
        "startChar": 4,
        "endLine": 356,
        "endChar": 14
      },
      "revId": "28b43617f54aa7f99832297adc5842b5e8baae3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6178ea0e_45ea0a42",
        "filename": "src/snapshot/snapshot.cc",
        "patchSetId": 10
      },
      "lineNbr": 960,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2023-10-11T10:26:53Z",
      "side": 1,
      "message": "While we are here... Do we actually need to do this? Maybe it would be better to stick with always storing data in ArrayList? If the goal is to save space then we could have just right-trimmed the ArrayList and update the capacity.\n\nI think this ToFixedArray list approach was necessary only for further calls to `AddToSet(FixedArray)` which needed to skip the first element containing `length`. Maybe we could clean this up and switch to `ArrayList` completely?",
      "range": {
        "startLine": 960,
        "startChar": 34,
        "endLine": 960,
        "endChar": 57
      },
      "revId": "28b43617f54aa7f99832297adc5842b5e8baae3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a39db7cd_7a4693e3",
        "filename": "src/snapshot/startup-serializer.cc",
        "patchSetId": 10
      },
      "lineNbr": 172,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2023-10-11T10:26:53Z",
      "side": 1,
      "message": "... and this could have been adapted to accept ArrayLists.",
      "range": {
        "startLine": 172,
        "startChar": 2,
        "endLine": 172,
        "endChar": 11
      },
      "revId": "28b43617f54aa7f99832297adc5842b5e8baae3b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}