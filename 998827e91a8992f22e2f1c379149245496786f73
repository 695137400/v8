{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c6b4d6c3_f85275b1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-02-09T07:41:06Z",
      "side": 1,
      "message": "Still lgtm with comments, ty",
      "revId": "998827e91a8992f22e2f1c379149245496786f73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8692fe40_abaeab6d",
        "filename": "src/codegen/x64/register-x64.h",
        "patchSetId": 12
      },
      "lineNbr": 156,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-02-09T07:41:06Z",
      "side": 1,
      "message": "two nits: I\u0027m new-school and really prefer explicit !\u003d 0 comparisons over the implicit int-bool cast. And second, instead of identical definitions in each arch file, could this go into register-arch.h?",
      "revId": "998827e91a8992f22e2f1c379149245496786f73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cf888d5_26cc6211",
        "filename": "src/compiler/linkage.cc",
        "patchSetId": 12
      },
      "lineNbr": 92,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-02-09T07:41:06Z",
      "side": 1,
      "message": "Trying to wrap my head around this; does it make sense to think about both caller and callee slots as aligned? If so, wdyt of rephrasing this section to\n\n int callee_slots_above_sp \u003d PadArguments(...);\n int tail_caller_slots_above_sp \u003d PadArguments(...);\n int stack_param_delta \u003d callee_slots_above_sp - tail_caller_slots_above_sp;\n DCHECK(!ShouldPadArguments(stack_param_delta));\n return stack_param_delta;\n\nIs that an improvement? It avoids the +\u003d and -\u003d below at least.",
      "revId": "998827e91a8992f22e2f1c379149245496786f73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb749444_f50e5204",
        "filename": "src/deoptimizer/deoptimizer.cc",
        "patchSetId": 12
      },
      "lineNbr": 1042,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-02-09T07:41:06Z",
      "side": 1,
      "message": "and here",
      "range": {
        "startLine": 1042,
        "startChar": 24,
        "endLine": 1042,
        "endChar": 31
      },
      "revId": "998827e91a8992f22e2f1c379149245496786f73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17dc2de1_2cfa1dd6",
        "filename": "src/deoptimizer/deoptimizer.cc",
        "patchSetId": 12
      },
      "lineNbr": 1389,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-02-09T07:41:06Z",
      "side": 1,
      "message": "missed one?",
      "range": {
        "startLine": 1389,
        "startChar": 22,
        "endLine": 1389,
        "endChar": 29
      },
      "revId": "998827e91a8992f22e2f1c379149245496786f73",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}