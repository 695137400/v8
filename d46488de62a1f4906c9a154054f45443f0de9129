{
  "comments": [
    {
      "key": {
        "uuid": "f175a190_f7033e43",
        "filename": "src/compiler/heap-refs.h",
        "patchSetId": 8
      },
      "lineNbr": 567,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2019-07-23T18:13:23Z",
      "side": 1,
      "message": "Please remove.",
      "revId": "d46488de62a1f4906c9a154054f45443f0de9129",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffd07e38_1c4cb625",
        "filename": "src/compiler/js-call-reducer.cc",
        "patchSetId": 8
      },
      "lineNbr": 581,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2019-07-23T18:13:23Z",
      "side": 1,
      "message": "Your serialized_own_descriptor definition doesn\u0027t check if the descriptor is actually an own descriptor, so it doesn\u0027t do what its name suggests. There are several options:\n1. CHECK that property in serialized_own_descriptor. Then you\u0027ll have to move the NumberOfOwnDescriptors comparison from here to BEFORE the serialized_own_descriptor call.\n2. Rename serialized_own_descriptor to serialized_descriptor. Then you don\u0027t have to move the NumberOfOwnDescriptors comparison but it still feels more natural to do so.\n3. Change serialized_own_descriptor to return false if the index is not an own. Then you don\u0027t need the NumberOfOwnDescriptors comparison here at all.",
      "revId": "d46488de62a1f4906c9a154054f45443f0de9129",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27f9cd42_939d847e",
        "filename": "src/compiler/js-call-reducer.cc",
        "patchSetId": 8
      },
      "lineNbr": 599,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2019-07-23T18:13:23Z",
      "side": 1,
      "message": "Let\u0027s try to make those more readable. Maybe like this:\n\n    ReadOnlyRoots roots(isolate());\n    StringRef length_string(broker(), roots.length_string_handle())));\n    StringRef name_string(broker(), roots.name_string_handle())));\n\n    if (!receiver_map.GetPropertyKey(JSFunction::kLengthDescriptorIndex) \n             .equals(length_string) ||   \n        !receiver_map.GetStrongValue(JSFunction::kLengthDescriptorIndex)\n             .IsAccessorInfo()) ||\n        !receiver_map.GetPropertyKey(JSFunction::kNameDescriptorIndex)\n             .equals(name_string) ||\n        !receiver_map.GetStrongValue(JSFunction::kNameDescriptorIndex)\n             .IsAccessorInfo()) {\n      return inference.NoChange();\n    }",
      "revId": "d46488de62a1f4906c9a154054f45443f0de9129",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1eb37793_3842bf33",
        "filename": "src/compiler/js-heap-broker.cc",
        "patchSetId": 8
      },
      "lineNbr": 313,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2019-07-23T18:13:23Z",
      "side": 1,
      "message": "Please expand the comment by saying what this is keyed on now.",
      "revId": "d46488de62a1f4906c9a154054f45443f0de9129",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b39e94d_2ccfe90f",
        "filename": "src/compiler/serializer-for-background-compilation.cc",
        "patchSetId": 8
      },
      "lineNbr": 1775,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2019-07-23T18:13:23Z",
      "side": 1,
      "message": "int min_nof_descriptors \u003d i::Max(JSFunction::kLengthDescriptorIndex,\n                                JSFunction::kNameDescriptorIndex) + 1;\nif (map.NumberOfOwnDescriptors() \u003e\u003d min_nof_descriptors) {\n  map.SerializeOwnDescriptor(JSFunction::kLengthDescriptorIndex);\n  map.SerializeOwnDescriptor(JSFunction::kNameDescriptorIndex);\n}",
      "revId": "d46488de62a1f4906c9a154054f45443f0de9129",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca3f8095_6d6d0959",
        "filename": "src/compiler/serializer-for-background-compilation.cc",
        "patchSetId": 8
      },
      "lineNbr": 1777,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2019-07-23T18:13:23Z",
      "side": 1,
      "message": "namespace { ... }",
      "revId": "d46488de62a1f4906c9a154054f45443f0de9129",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c95580fb_caac4ef0",
        "filename": "src/compiler/serializer-for-background-compilation.cc",
        "patchSetId": 8
      },
      "lineNbr": 1783,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2019-07-23T18:13:23Z",
      "side": 1,
      "message": "function",
      "range": {
        "startLine": 1783,
        "startChar": 18,
        "endLine": 1783,
        "endChar": 22
      },
      "revId": "d46488de62a1f4906c9a154054f45443f0de9129",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}