{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "35b8ce63_214afa81",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2022-07-26T08:33:40Z",
      "side": 1,
      "message": "This seems like a very rare pattern. Have you encountered that in a few occasions? I\u0027m curious to lern where and why we even generate that.",
      "revId": "ca2cc58678c7b3dba3c84fc0eb97ba78fc17993d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5e79c91_5939e74e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1420650
      },
      "writtenOn": "2022-07-26T08:38:11Z",
      "side": 1,
      "message": "~30 Builtins encounter this pattern. The codes in commit message is picked from Builtin_RegExpReplace Block 80. I\u0027ll check how this happens.",
      "parentUuid": "35b8ce63_214afa81",
      "revId": "ca2cc58678c7b3dba3c84fc0eb97ba78fc17993d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82e41281_41020cd1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1420650
      },
      "writtenOn": "2022-07-26T09:26:36Z",
      "side": 1,
      "message": "I think this come from some suboptimal CSA codes. For example in AddSmiHandler, there is a check of whether rhs is Smi:\n\n    // Check if the {rhs} is a smi, and exit the string and bigint check early\n    // if it is.\n    GotoIf(TaggedIsSmi(rhs), \u0026call_with_any_feedback);\n\nHowever, for AddSmiHandler, the rhs is known to be a Smi and it is specified by parameter rhs_known_smi. The Int32Add(x, x) operation is coming from converting a int (which is a bytecode\u0027s operand) to a smi.",
      "parentUuid": "c5e79c91_5939e74e",
      "revId": "ca2cc58678c7b3dba3c84fc0eb97ba78fc17993d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "106d4fd8_d8ab6e49",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2022-07-26T12:00:34Z",
      "side": 1,
      "message": "I see. Makes sense. Thanks for investigating.",
      "parentUuid": "82e41281_41020cd1",
      "revId": "ca2cc58678c7b3dba3c84fc0eb97ba78fc17993d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8354e18a_4a582314",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2022-07-26T12:00:34Z",
      "side": 1,
      "message": "LGTM",
      "revId": "ca2cc58678c7b3dba3c84fc0eb97ba78fc17993d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ebd3228d_02978a14",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1420650
      },
      "writtenOn": "2022-07-26T12:40:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "106d4fd8_d8ab6e49",
      "revId": "ca2cc58678c7b3dba3c84fc0eb97ba78fc17993d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}