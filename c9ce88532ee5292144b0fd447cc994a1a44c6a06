{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d92885d4_8b13fd69",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2022-11-24T18:01:52Z",
      "side": 1,
      "message": "Looks good overall, mostly comments about the tests.\nToon, could you ptal at include/* and src/d8/*, as this CL adds some code to the public fast API and documents some assumptions about External objects?",
      "revId": "c9ce88532ee5292144b0fd447cc994a1a44c6a06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5051ab8_f975e7d0",
        "filename": "src/compiler/effect-control-linearizer.cc",
        "patchSetId": 17
      },
      "lineNbr": 5503,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2022-11-24T18:01:52Z",
      "side": 1,
      "message": "I\u0027d suggest using `MachineRepresentation::PointerRepresentation()` here, to make sure this works the same on 32-bit platforms.",
      "range": {
        "startLine": 5503,
        "startChar": 60,
        "endLine": 5503,
        "endChar": 67
      },
      "revId": "c9ce88532ee5292144b0fd447cc994a1a44c6a06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8b1e697_d602b1ad",
        "filename": "src/d8/d8-test.cc",
        "patchSetId": 17
      },
      "lineNbr": 1030,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2022-11-24T18:01:52Z",
      "side": 1,
      "message": "Is that intentionally returning nullptr? If so, could we rename it to clarify this?",
      "range": {
        "startLine": 1030,
        "startChar": 11,
        "endLine": 1030,
        "endChar": 18
      },
      "revId": "c9ce88532ee5292144b0fd447cc994a1a44c6a06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36b380a7_e1f13d5c",
        "filename": "src/d8/d8-test.cc",
        "patchSetId": 17
      },
      "lineNbr": 1057,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2022-11-24T18:01:52Z",
      "side": 1,
      "message": "Please check `args.Length()` to avoid crashes, same for the functions below that index the `args` struct.",
      "range": {
        "startLine": 1057,
        "startChar": 34,
        "endLine": 1057,
        "endChar": 41
      },
      "revId": "c9ce88532ee5292144b0fd447cc994a1a44c6a06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e82462c_b555fdf6",
        "filename": "test/mjsunit/compiler/fast-api-calls-pointer.js",
        "patchSetId": 17
      },
      "lineNbr": 52,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2022-11-24T18:01:52Z",
      "side": 1,
      "message": "nit: you could use assertFalse/assertTrue here and below.",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 52,
        "endChar": 12
      },
      "revId": "c9ce88532ee5292144b0fd447cc994a1a44c6a06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a6f70e7_8d003bc1",
        "filename": "test/mjsunit/compiler/fast-api-calls-pointer.js",
        "patchSetId": 17
      },
      "lineNbr": 70,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2022-11-24T18:01:52Z",
      "side": 1,
      "message": "That\u0027s good, should we try with other object types that are not External?",
      "range": {
        "startLine": 70,
        "startChar": 32,
        "endLine": 70,
        "endChar": 43
      },
      "revId": "c9ce88532ee5292144b0fd447cc994a1a44c6a06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bf1d504_805b0040",
        "filename": "test/mjsunit/compiler/fast-api-calls-pointer.js",
        "patchSetId": 17
      },
      "lineNbr": 75,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2022-11-24T18:01:52Z",
      "side": 1,
      "message": "Not sure why this assertion holds, isn\u0027t emptyObject an irrelevant, non-External JSObject?",
      "range": {
        "startLine": 75,
        "startChar": 37,
        "endLine": 75,
        "endChar": 48
      },
      "revId": "c9ce88532ee5292144b0fd447cc994a1a44c6a06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d5d0fd6_51180d84",
        "filename": "test/mjsunit/compiler/fast-api-calls-pointer.js",
        "patchSetId": 17
      },
      "lineNbr": 85,
      "author": {
        "id": 1283477
      },
      "writtenOn": "2022-11-24T18:01:52Z",
      "side": 1,
      "message": "Checking for optimized/unoptimized does the job here, but what I believe what we want to check here is actually whether the slow/fast path was called, which might both happen from optimized code. You could ensure that using fast_c_api.fast_call_count()|slow_call_count() - it\u0027s somewhat clumsy to maintain the count expectations in JS, but at least it\u0027s explicit about what TF should have executed.",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 17
      },
      "revId": "c9ce88532ee5292144b0fd447cc994a1a44c6a06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}