{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "214ca1f6_19d716c8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-10-03T12:05:22Z",
      "side": 1,
      "message": "Very nice!",
      "revId": "62c4bc45fcbe64aafa11a3f7ffff0d72b2715d99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6a567c1_8cad467a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2024-10-04T08:53:52Z",
      "side": 1,
      "message": "src/heap LGTM",
      "revId": "62c4bc45fcbe64aafa11a3f7ffff0d72b2715d99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64cd7809_6ab5ffb8",
        "filename": "src/codegen/compiler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1362,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-10-03T12:05:22Z",
      "side": 1,
      "message": "Would it make sense to DCHECK here that the cache doesn\u0027t contain an entry if `leaptiering \u0026\u0026 !IsOsr`?",
      "range": {
        "startLine": 1362,
        "startChar": 0,
        "endLine": 1362,
        "endChar": 57
      },
      "revId": "62c4bc45fcbe64aafa11a3f7ffff0d72b2715d99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2988ffe3_76c9d5db",
        "filename": "src/codegen/compiler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1362,
      "author": {
        "id": 1559107
      },
      "writtenOn": "2024-10-03T12:08:14Z",
      "side": 1,
      "message": "It literally can\u0027t, because the cache is the maybe_optimized_code field. Currently OptimizedCodeCache::Get will run into an UNREACHABLE(). Once leaptiering is ported to non-sandboxed builds I expect to completely refactor this and call it the OsrCodeCache or something.\n\nShall I add a TODO here?",
      "parentUuid": "64cd7809_6ab5ffb8",
      "range": {
        "startLine": 1362,
        "startChar": 0,
        "endLine": 1362,
        "endChar": 57
      },
      "revId": "62c4bc45fcbe64aafa11a3f7ffff0d72b2715d99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1fdeb52_23613e00",
        "filename": "src/codegen/compiler.cc",
        "patchSetId": 2
      },
      "lineNbr": 1362,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-10-03T12:20:17Z",
      "side": 1,
      "message": "Ah that makes sense, thanks! I think it\u0027s fine then since we anyway expect this code to go away",
      "parentUuid": "2988ffe3_76c9d5db",
      "range": {
        "startLine": 1362,
        "startChar": 0,
        "endLine": 1362,
        "endChar": 57
      },
      "revId": "62c4bc45fcbe64aafa11a3f7ffff0d72b2715d99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c698061_9cba4978",
        "filename": "src/objects/feedback-vector.tq",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-10-03T12:05:22Z",
      "side": 1,
      "message": "Really nice that this is gone now! :)",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 72
      },
      "revId": "62c4bc45fcbe64aafa11a3f7ffff0d72b2715d99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "If the author is a V8 committer, code review is required from one other committer (see https://v8.dev/docs/become-committer). Otherwise, code review is required from two committers."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "((uploaderin:cria/project-v8-committers AND label:Code-Review\u003dMAX,user\u003dnon_uploader) OR label:Code-Review\u003dMAX,count\u003e\u003d2) AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"((uploaderin:cria/project-v8-committers AND label:Code-Review=MAX,user=non_uploader) OR label:Code-Review=MAX,count>=2) AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader","uploaderin:cria/project-v8-committers","label:Code-Review=MAX,count>=2"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "62c4bc45fcbe64aafa11a3f7ffff0d72b2715d99",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "62c4bc45fcbe64aafa11a3f7ffff0d72b2715d99",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "62c4bc45fcbe64aafa11a3f7ffff0d72b2715d99",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}