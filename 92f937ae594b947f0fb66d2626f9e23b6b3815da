{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4ce94c22_eee0f1f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2024-04-11T10:02:51Z",
      "side": 1,
      "message": "PTAL ðŸ˜Š",
      "revId": "92f937ae594b947f0fb66d2626f9e23b6b3815da",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee23ce25_a284c0f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-04-11T10:04:57Z",
      "side": 1,
      "message": "LGTM, thanks! :)",
      "revId": "92f937ae594b947f0fb66d2626f9e23b6b3815da",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04d6025a_72b3913c",
        "filename": "test/mjsunit/regress/wasm/regress-333754542.js",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2024-04-11T10:02:51Z",
      "side": 1,
      "message": "I tried, but I couldn\u0027t make it work without the infinite loop, it\u0027s a very brittle repro... ðŸ˜Š\nAnyways, by setting `--no-wasm-lazy-compilation --no-wasm-dynamic-tiering` we enforce eager compilation, so this crashes on the turboshaft test runner without the fix.",
      "revId": "92f937ae594b947f0fb66d2626f9e23b6b3815da",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e10e2a6_1029055a",
        "filename": "test/mjsunit/regress/wasm/regress-333754542.js",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1535927
      },
      "writtenOn": "2024-04-11T10:04:57Z",
      "side": 1,
      "message": "Ack, sounds good :) Anyways, it\u0027s just about a missed optimization in the compiler, so it\u0027s not like it\u0027s critical to have a very robust repro :)",
      "parentUuid": "04d6025a_72b3913c",
      "revId": "92f937ae594b947f0fb66d2626f9e23b6b3815da",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29579899_1b87444e",
        "filename": "test/mjsunit/regress/wasm/regress-333754542.js",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2024-04-11T10:05:35Z",
      "side": 1,
      "message": "Yeah, but making sure that we run this reducer in wasm makes sense. ðŸ˜Š",
      "parentUuid": "8e10e2a6_1029055a",
      "revId": "92f937ae594b947f0fb66d2626f9e23b6b3815da",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "92f937ae594b947f0fb66d2626f9e23b6b3815da",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "92f937ae594b947f0fb66d2626f9e23b6b3815da",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "92f937ae594b947f0fb66d2626f9e23b6b3815da",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}