{
  "comments": [
    {
      "key": {
        "uuid": "59237736_8bf9ba78",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-08-11T14:54:30Z",
      "side": 1,
      "message": "Dominik PTAL at src/handles and src/heap\nGeorg PTAL at the rest",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4fc9235c_d5a1fc86",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-08-11T16:51:46Z",
      "side": 1,
      "message": "very cool!",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d48b8fb_1fa041f7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2020-08-12T07:20:54Z",
      "side": 1,
      "message": "LGTM",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcb15f3a_ee688e14",
        "filename": "src/codegen/compiler.cc",
        "patchSetId": 20
      },
      "lineNbr": 915,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-08-11T16:51:46Z",
      "side": 1,
      "message": "... after PrepareJob.",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcbb002c_88dea7f0",
        "filename": "src/codegen/compiler.cc",
        "patchSetId": 20
      },
      "lineNbr": 915,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-08-12T08:57:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fcb15f3a_ee688e14",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60fe141d_d8569a5f",
        "filename": "src/codegen/compiler.h",
        "patchSetId": 20
      },
      "lineNbr": 451,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-08-11T14:54:30Z",
      "side": 1,
      "message": "Moved to .h so that GenerateCodeForTesting can use it in pipeline.cc.",
      "range": {
        "startLine": 451,
        "startChar": 0,
        "endLine": 451,
        "endChar": 28
      },
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ecd896d8_fb6f21a2",
        "filename": "src/codegen/optimized-compilation-info.h",
        "patchSetId": 20
      },
      "lineNbr": 319,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-08-11T16:51:46Z",
      "side": 1,
      "message": "Nit: remove empty line",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fceab020_23cdfaef",
        "filename": "src/codegen/optimized-compilation-info.h",
        "patchSetId": 20
      },
      "lineNbr": 319,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-08-12T08:57:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ecd896d8_fb6f21a2",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68471f33_ad8bbee2",
        "filename": "src/compiler/js-heap-broker.cc",
        "patchSetId": 20
      },
      "lineNbr": 2452,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-08-11T16:51:46Z",
      "side": 1,
      "message": "Let\u0027s have a shorter name for such a common operation. How about JSHeapBroker::PersistentHandle.",
      "range": {
        "startLine": 2452,
        "startChar": 23,
        "endLine": 2452,
        "endChar": 59
      },
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce64049e_f0c4b579",
        "filename": "src/compiler/js-heap-broker.cc",
        "patchSetId": 20
      },
      "lineNbr": 2452,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-08-12T08:57:48Z",
      "side": 1,
      "message": "WDYT about CanonicalPersistentHandle? Is that still too big?",
      "parentUuid": "68471f33_ad8bbee2",
      "range": {
        "startLine": 2452,
        "startChar": 23,
        "endLine": 2452,
        "endChar": 59
      },
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9f14c35_5c3bd35d",
        "filename": "src/compiler/js-heap-broker.cc",
        "patchSetId": 20
      },
      "lineNbr": 2460,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-08-11T16:51:46Z",
      "side": 1,
      "message": "Nit: DCHECK_NOT_NULL, but the next line will crash anways if its null.",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "554c68dd_797862b1",
        "filename": "src/compiler/js-heap-broker.cc",
        "patchSetId": 20
      },
      "lineNbr": 2460,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-08-12T08:57:48Z",
      "side": 1,
      "message": "Ack. Since the next line will crash if it\u0027s null I am removing the DCHECK here and in FindCanonicalPersistentHandleForTesting then.",
      "parentUuid": "e9f14c35_5c3bd35d",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c47a134_963ec2eb",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 20
      },
      "lineNbr": 158,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-08-11T14:54:30Z",
      "side": 1,
      "message": "Passed as null since it will be patched in later.\nA follow-up CL simplifies the JSHeapBroker constructor.",
      "range": {
        "startLine": 158,
        "startChar": 69,
        "endLine": 158,
        "endChar": 76
      },
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5ea3a40_78519103",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 20
      },
      "lineNbr": 158,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-08-11T16:51:46Z",
      "side": 1,
      "message": "Please do it in this CL or make sure we don\u0027t forget.",
      "parentUuid": "3c47a134_963ec2eb",
      "range": {
        "startLine": 158,
        "startChar": 69,
        "endLine": 158,
        "endChar": 76
      },
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c8dea5d_00728dc9",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 20
      },
      "lineNbr": 158,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-08-12T08:57:48Z",
      "side": 1,
      "message": "I have a CL ready in https://chromium-review.googlesource.com/c/v8/v8/+/2351667. Planning on submitting after this one.",
      "parentUuid": "a5ea3a40_78519103",
      "range": {
        "startLine": 158,
        "startChar": 69,
        "endLine": 158,
        "endChar": 76
      },
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de5daa1a_d9c23122",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 20
      },
      "lineNbr": 775,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-08-11T16:51:46Z",
      "side": 1,
      "message": "How about making these private and exposing only a PrepareForHandleAllocation method, or maybe even having the two values be arguments to InitializeLocalHeap.\n\nIt should be impossible or very hard to forget to set the two things, and similarly for setting only one but not the other.",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb4d83ce_3f0b4df3",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 20
      },
      "lineNbr": 775,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-08-12T08:57:48Z",
      "side": 1,
      "message": "Done, made it part of InitializeLocalHeap.",
      "parentUuid": "de5daa1a_d9c23122",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98e627b8_fdc47648",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 20
      },
      "lineNbr": 784,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-08-11T16:51:46Z",
      "side": 1,
      "message": "Same here.",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b8959eb_5ef71a15",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 20
      },
      "lineNbr": 784,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-08-12T08:57:48Z",
      "side": 1,
      "message": "Done, made it part of TearDownLocalHeap",
      "parentUuid": "98e627b8_fdc47648",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f1797ef_edc93cff",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 20
      },
      "lineNbr": 3054,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-08-11T14:54:30Z",
      "side": 1,
      "message": "Emulating the proper pipeline, we call CreateGraph on different places depending on is_concurrent_inlining.",
      "range": {
        "startLine": 3054,
        "startChar": 6,
        "endLine": 3054,
        "endChar": 62
      },
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7eff826d_72c1b068",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 20
      },
      "lineNbr": 3054,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-08-11T16:51:46Z",
      "side": 1,
      "message": "Please add that comment to the file.",
      "parentUuid": "3f1797ef_edc93cff",
      "range": {
        "startLine": 3054,
        "startChar": 6,
        "endLine": 3054,
        "endChar": 62
      },
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6210146_c14001a6",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 20
      },
      "lineNbr": 3054,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-08-12T08:57:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7eff826d_72c1b068",
      "range": {
        "startLine": 3054,
        "startChar": 6,
        "endLine": 3054,
        "endChar": 62
      },
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bf84d4_9a7ac2d0",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 20
      },
      "lineNbr": 3069,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-08-11T14:54:30Z",
      "side": 1,
      "message": "This is the border case that I talked in the CL description and in optimized-compilation-info.h where the JSHeapBroker is kept alive.",
      "range": {
        "startLine": 3069,
        "startChar": 1,
        "endLine": 3069,
        "endChar": 2
      },
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "684b5b24_a85a5ab8",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 20
      },
      "lineNbr": 3076,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-08-11T16:51:46Z",
      "side": 1,
      "message": "I can live with some ugliness in the testing pipeline.",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42972513_0011e7af",
        "filename": "src/compiler/pipeline.cc",
        "patchSetId": 20
      },
      "lineNbr": 3076,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-08-12T08:57:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "684b5b24_a85a5ab8",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "631f3aa0_98d8b5cc",
        "filename": "src/handles/handles.cc",
        "patchSetId": 20
      },
      "lineNbr": 144,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2020-08-12T07:20:54Z",
      "side": 1,
      "message": "Couldn\u0027t this use CanonicalHandlesMap instead?",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fcf6220_0d50c00a",
        "filename": "src/handles/handles.cc",
        "patchSetId": 20
      },
      "lineNbr": 144,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-08-12T08:57:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "631f3aa0_98d8b5cc",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eedcd293_24b34c43",
        "filename": "src/handles/handles.cc",
        "patchSetId": 20
      },
      "lineNbr": 159,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-08-11T16:51:46Z",
      "side": 1,
      "message": "These comments better go into the header, above the constructor.",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e70e4099_0a1439f5",
        "filename": "src/handles/handles.cc",
        "patchSetId": 20
      },
      "lineNbr": 159,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-08-12T08:57:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eedcd293_24b34c43",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5146f00f_cd2db170",
        "filename": "src/heap/local-heap.h",
        "patchSetId": 20
      },
      "lineNbr": 48,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2020-08-11T16:51:46Z",
      "side": 1,
      "message": "I know it\u0027s old code, but is this intentionally checked here AND inside EnsurePersistentHandles?",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c7abc99_8498e8a7",
        "filename": "src/heap/local-heap.h",
        "patchSetId": 20
      },
      "lineNbr": 48,
      "author": {
        "id": 1327869
      },
      "writtenOn": "2020-08-12T08:57:48Z",
      "side": 1,
      "message": "+Dominik since I think he implemented this.",
      "parentUuid": "5146f00f_cd2db170",
      "revId": "fa23214aece87020b3c43e34065d3ca773658efc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}