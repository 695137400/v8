{
  "comments": [
    {
      "key": {
        "uuid": "f7b77144_f0d7accb",
        "filename": "src/regexp/regexp-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2020-03-10T11:00:35Z",
      "side": 1,
      "message": "Consider ZoneDeque which uses the RecyclingZoneAllocator (otherwise each grow/shrink will allocate a fresh region).",
      "revId": "7036e4fd99e5c8f399be22edfc99852d2bd0cf93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d55510a_4092e7d4",
        "filename": "src/regexp/regexp-compiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 1399096
      },
      "writtenOn": "2020-03-11T21:23:39Z",
      "side": 1,
      "message": "Hmm. Nodes are only ever removed via pop_back, which can\u0027t reallocate (pop_back is guaranteed not to invalidate iterators: http://www.cplusplus.com/reference/vector/vector/pop_back/). So we\u0027re only reallocating when we grow, which means our new allocation is larger than anything we\u0027ve previously allocated, so I\u0027m not sure I see how the RecyclingZoneAllocator helps.",
      "parentUuid": "f7b77144_f0d7accb",
      "revId": "7036e4fd99e5c8f399be22edfc99852d2bd0cf93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}