{
  "comments": [
    {
      "key": {
        "uuid": "22a81751_952c5507",
        "filename": "src/ast/prettyprinter.cc",
        "patchSetId": 5
      },
      "lineNbr": 395,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2017-04-19T20:04:59Z",
      "side": 1,
      "message": "Call printing could be a bit better, but it looks pretty good ¯\\_(ツ)_/¯",
      "revId": "b8bf76706b7c3f05cbcceca3f803304cabb7a32f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "358bbe4b_6f119d6e",
        "filename": "src/interpreter/interpreter.cc",
        "patchSetId": 5
      },
      "lineNbr": 208,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2017-04-19T20:04:59Z",
      "side": 1,
      "message": "I agree this belongs somewhere else, I just haven\u0027t decided where yet. A new function in ast.cc?",
      "revId": "b8bf76706b7c3f05cbcceca3f803304cabb7a32f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1306542_a1301d4a",
        "filename": "src/interpreter/interpreter.cc",
        "patchSetId": 5
      },
      "lineNbr": 208,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2017-04-19T20:31:20Z",
      "side": 1,
      "message": "also, at this point, not necessarily in the correct Context/Isolate, so the allocations below do the wrong thing.\n\nHow could this be done better? Lazily allocating these would be nice, but would require re-parsing the parent closure on the first run.",
      "parentUuid": "358bbe4b_6f119d6e",
      "revId": "b8bf76706b7c3f05cbcceca3f803304cabb7a32f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5767c321_a7469990",
        "filename": "src/interpreter/interpreter.cc",
        "patchSetId": 5
      },
      "lineNbr": 208,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2017-04-20T19:08:10Z",
      "side": 1,
      "message": "I\u0027ve found that this isn\u0027t the problem with the test (though it\u0027s probably still a problem).\n\nWith the lazy allocation of these literals, there\u0027s still a problem in stress-runs, because the same SFI and cache can be used in multiple Contexts. So the cached items that have been constructed inherit from the incorrect Array.prototype.\n\nSo, I\u0027m at a loss to ensure that this situation can\u0027t happen",
      "parentUuid": "f1306542_a1301d4a",
      "revId": "b8bf76706b7c3f05cbcceca3f803304cabb7a32f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa77787e_a20a8727",
        "filename": "test/debugger/debug/es6/debug-stepin-string-template.js",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2017-04-19T20:04:59Z",
      "side": 1,
      "message": "from my POV, this change is good, I don\u0027t think it made sense for the column position to be at 44 on the first step. I expect it\u0027s actually really hard to notice in the Chrome devtools, though.",
      "revId": "b8bf76706b7c3f05cbcceca3f803304cabb7a32f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}