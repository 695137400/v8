{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7a04380f_88e56698",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2023-03-23T17:56:24Z",
      "side": 1,
      "message": "PTAL. Just noticed that we can get a bit better fuzzer coverage here. No specific context.",
      "revId": "9e6938d99627cb8452b8d293974cab42ec105735",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0befd481_4530cb6d",
        "filename": "tools/clusterfuzz/trials/clusterfuzz_trials_config.json",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2023-03-23T18:03:24Z",
      "side": 1,
      "message": "Are these flags in conflict with any other flags from this list? In this case they could be listed with the contradicts key. If there are, and they are not listed, they just lead to d8 running into the contradiction DCHECK for a certain percentage.\n\nThere is:\nDEFINE_NEG_IMPLICATION(fuzzing, liftoff_only)\n\nNot that we pass --fuzzing on all fuzzers in all cases. Guess this might then always fail? Not sure why there\u0027s this neg implication.",
      "range": {
        "startLine": 29,
        "startChar": 17,
        "endLine": 29,
        "endChar": 33
      },
      "revId": "9e6938d99627cb8452b8d293974cab42ec105735",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d881021_559b4c51",
        "filename": "tools/clusterfuzz/trials/clusterfuzz_trials_config.json",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2023-03-23T18:32:34Z",
      "side": 1,
      "message": "Ah, good point. The implication is probably there because the fuzzer could hit a case that Liftoff cannot handle, in particular if e.g. SSE is disabled. `--liftoff-only` would disallow the fallback to TurboFan then, which is problematic.\n\nCan we replace this by `--no-wasm-tier-up --no-wasm-dynamic-tiering`, or does that not work? If we can\u0027t specify two flags here, then I\u0027ll just drop this line and only add a `--no-liftoff` trial, which is the more important one anyway.",
      "parentUuid": "0befd481_4530cb6d",
      "range": {
        "startLine": 29,
        "startChar": 17,
        "endLine": 29,
        "endChar": 33
      },
      "revId": "9e6938d99627cb8452b8d293974cab42ec105735",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da58e2c7_c16257b8",
        "filename": "tools/clusterfuzz/trials/clusterfuzz_trials_config.json",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1115956
      },
      "writtenOn": "2023-03-23T20:41:03Z",
      "side": 1,
      "message": "I think it might just work to use the string \"--no-wasm-tier-up --no-wasm-dynamic-tiering\" as app_args in this config.\n\nCF code here suggests that this works, as in the end everything is just joined to a string anyways:\nhttps://github.com/google/clusterfuzz/blob/63a987ca1f37eaae31b0aa4ba9cab55f4d35e588/src/clusterfuzz/_internal/bot/tasks/trials.py#L101\n\nOnly the contradicts checking won\u0027t work intuitively anymore, since we don\u0027t split this string for that. E.g. if you have a contradiction to one of the flags in the string \"A B\", then I think you\u0027d need to list the whole string \"A B\" in the respective contradicts list.\n\nBut I assume there\u0027s no contradiction to any other flag in this list?\n\nLet\u0027s look a few days after this has landed into the CF crash stats and check if the contradiction cases have gone up.\n\nBtw, I assume it\u0027s WAI that liftoff-only and no-liftoff don\u0027t contradict each other? I.e. I assume no-liftoff takes precedence then?",
      "parentUuid": "8d881021_559b4c51",
      "range": {
        "startLine": 29,
        "startChar": 17,
        "endLine": 29,
        "endChar": 33
      },
      "revId": "9e6938d99627cb8452b8d293974cab42ec105735",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fab3aaee_be27287f",
        "filename": "tools/clusterfuzz/trials/clusterfuzz_trials_config.json",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2023-03-24T13:05:36Z",
      "side": 1,
      "message": "Contradictions shouldn\u0027t be necessary, that should be fine.\nBut as this all sounds a bit uncertain, let\u0027s do the follow:\nI uploaded another CL to only add the `--no-liftoff` config, which should be fine in any case: https://crrev.com/c/4370022\n\nAfter this landed, we can try landing this updated CL, which uses `--no-wasm-tier-up --no-wasm-dynamic-tiering` instead of `--liftoff-only`. If this fails for any reason, we can revert and forget about this, it\u0027s not that important. Way more important is the `--no-liftoff` configuration.",
      "parentUuid": "da58e2c7_c16257b8",
      "range": {
        "startLine": 29,
        "startChar": 17,
        "endLine": 29,
        "endChar": 33
      },
      "revId": "9e6938d99627cb8452b8d293974cab42ec105735",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a46dbd46_a28ee750",
        "filename": "tools/clusterfuzz/trials/clusterfuzz_trials_config.json",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2023-03-28T13:42:18Z",
      "side": 1,
      "message": "Landing this follow-up now.",
      "parentUuid": "fab3aaee_be27287f",
      "range": {
        "startLine": 29,
        "startChar": 17,
        "endLine": 29,
        "endChar": 33
      },
      "revId": "9e6938d99627cb8452b8d293974cab42ec105735",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}