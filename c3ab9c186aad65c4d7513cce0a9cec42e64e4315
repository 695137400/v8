{
  "comments": [
    {
      "key": {
        "uuid": "742f0d0d_ab114c88",
        "filename": "test/cctest/wasm/test-run-wasm-simd.cc",
        "patchSetId": 8
      },
      "lineNbr": 2140,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2019-07-22T10:50:19Z",
      "side": 1,
      "message": "AFAIK we have the policy to not randomize tests, as this makes reproduction and flake bisection a lot harder. Can we integrate this into the wasm-compile fuzzer instead?\nSee https://cs.chromium.org/chromium/src/v8/test/fuzzer/wasm-compile.cc.",
      "revId": "c3ab9c186aad65c4d7513cce0a9cec42e64e4315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f16e72d2_9a0dfd38",
        "filename": "test/cctest/wasm/test-run-wasm-simd.cc",
        "patchSetId": 8
      },
      "lineNbr": 2179,
      "author": {
        "id": 1249724
      },
      "writtenOn": "2019-07-19T02:50:11Z",
      "side": 1,
      "message": "nit: not sure on style here, should the declaration and assignment be combined?\nSimdOp operand_op \u003d opcodes[rng-\u003eNextInt(static_cast\u003cint\u003e(num_opcodes))];",
      "range": {
        "startLine": 2179,
        "startChar": 4,
        "endLine": 2179,
        "endChar": 18
      },
      "revId": "c3ab9c186aad65c4d7513cce0a9cec42e64e4315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5a5e02c_9b67793c",
        "filename": "test/cctest/wasm/test-run-wasm-simd.cc",
        "patchSetId": 8
      },
      "lineNbr": 2223,
      "author": {
        "id": 1249724
      },
      "writtenOn": "2019-07-19T02:50:11Z",
      "side": 1,
      "message": "I see kI8x16Add defined in enum SimdOp but not used anywhere here. Did you intend to test it here as well? BuildSimdProgram by default only tests kS8x16Shuffle, maybe change the signature to void BuildSimdProgram(std::vector\u003cbyte\u003e* buffer, SimdOp op) so you test both opcode here.",
      "range": {
        "startLine": 2223,
        "startChar": 4,
        "endLine": 2223,
        "endChar": 20
      },
      "revId": "c3ab9c186aad65c4d7513cce0a9cec42e64e4315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaf23931_ea033849",
        "filename": "test/cctest/wasm/test-run-wasm-simd.cc",
        "patchSetId": 8
      },
      "lineNbr": 2223,
      "author": {
        "id": 1122079
      },
      "writtenOn": "2019-07-19T16:54:36Z",
      "side": 1,
      "message": "IIUC, this gets used because BuildSimdProgram starts with a shuffle, which assigns S128 operand types, and when depth \u003c kMaxTreeDepth, everything in simd_ops[] should be added to the code buffer. Though it may be nice to separate out the code generation into it\u0027s own method so this is more clear.",
      "parentUuid": "d5a5e02c_9b67793c",
      "range": {
        "startLine": 2223,
        "startChar": 4,
        "endLine": 2223,
        "endChar": 20
      },
      "revId": "c3ab9c186aad65c4d7513cce0a9cec42e64e4315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccadee92_c2c6114e",
        "filename": "test/cctest/wasm/test-run-wasm-simd.cc",
        "patchSetId": 8
      },
      "lineNbr": 2223,
      "author": {
        "id": 1249724
      },
      "writtenOn": "2019-07-20T00:50:50Z",
      "side": 1,
      "message": "Makes sense, thanks!",
      "parentUuid": "eaf23931_ea033849",
      "range": {
        "startLine": 2223,
        "startChar": 4,
        "endLine": 2223,
        "endChar": 20
      },
      "revId": "c3ab9c186aad65c4d7513cce0a9cec42e64e4315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc76b346_d1bdc06c",
        "filename": "test/cctest/wasm/test-run-wasm-simd.cc",
        "patchSetId": 8
      },
      "lineNbr": 2226,
      "author": {
        "id": 1249724
      },
      "writtenOn": "2019-07-19T02:50:11Z",
      "side": 1,
      "message": "I see that you changed int8_t to byte in some other tests in this file, is there a reason int8_t is used here?",
      "range": {
        "startLine": 2226,
        "startChar": 15,
        "endLine": 2226,
        "endChar": 21
      },
      "revId": "c3ab9c186aad65c4d7513cce0a9cec42e64e4315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0d6f571_0fe1582a",
        "filename": "test/cctest/wasm/test-run-wasm-simd.cc",
        "patchSetId": 8
      },
      "lineNbr": 2226,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2019-07-22T10:50:19Z",
      "side": 1,
      "message": "Good question! I was actually wondering about the other change: Why do we change the standard type int8_t to \"byte\", which is a typedef that not everyone might be familiar with?",
      "parentUuid": "dc76b346_d1bdc06c",
      "range": {
        "startLine": 2226,
        "startChar": 15,
        "endLine": 2226,
        "endChar": 21
      },
      "revId": "c3ab9c186aad65c4d7513cce0a9cec42e64e4315",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}