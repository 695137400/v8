{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2c73f137_e317bae2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1313365
      },
      "writtenOn": "2024-08-28T05:59:17Z",
      "side": 1,
      "message": "Could you please review this CL?",
      "revId": "cc9da02a71ad980789e78e21e0faac670ad71c39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7cacba7b_7d990dbd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2024-08-28T07:51:12Z",
      "side": 1,
      "message": "Can you please CC me on the bug so I have some context?",
      "revId": "cc9da02a71ad980789e78e21e0faac670ad71c39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3afa1fce_7347456f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1313365
      },
      "writtenOn": "2024-08-28T07:57:36Z",
      "side": 1,
      "message": "Sorry, I added you to CC of the bug just now.",
      "parentUuid": "7cacba7b_7d990dbd",
      "revId": "cc9da02a71ad980789e78e21e0faac670ad71c39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c15f4080_31bdf153",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2024-08-28T08:46:20Z",
      "side": 1,
      "message": "I am no expert in this area, but I am not convinced that this is the correct fix.\n\nWhat I am wondering: Why is the tag thats read ignored? It is just assumed that this tag is a `String` and therefore followed by a `Varint`? Isn\u0027t that the actual problem?",
      "revId": "cc9da02a71ad980789e78e21e0faac670ad71c39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18254bbb_a27aa682",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2024-08-28T08:46:20Z",
      "side": 1,
      "message": "Thanks!",
      "parentUuid": "3afa1fce_7347456f",
      "revId": "cc9da02a71ad980789e78e21e0faac670ad71c39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45fd74f3_579300e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1313365
      },
      "writtenOn": "2024-08-29T01:56:37Z",
      "side": 1,
      "message": "Thanks for your review! Yes, both bounds check and tag check can avoid the bug. I checked previous logic (before https://chromium-review.googlesource.com/c/v8/v8/+/5672333), we did bounds check then tag check before actually access the parsing stream (in my removed function ````ValueDeserializer::ReadExpectedString()````). I added tag check and changed the order to tag check first.",
      "parentUuid": "c15f4080_31bdf153",
      "revId": "cc9da02a71ad980789e78e21e0faac670ad71c39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a7836a5_fbbada90",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1468500
      },
      "writtenOn": "2024-08-29T07:55:00Z",
      "side": 1,
      "message": "Thanks! This version LGTM",
      "parentUuid": "45fd74f3_579300e2",
      "revId": "cc9da02a71ad980789e78e21e0faac670ad71c39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e4a61ae_eafb1846",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1313365
      },
      "writtenOn": "2024-08-29T08:00:14Z",
      "side": 1,
      "message": "Thanks for your review!",
      "parentUuid": "6a7836a5_fbbada90",
      "revId": "cc9da02a71ad980789e78e21e0faac670ad71c39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}