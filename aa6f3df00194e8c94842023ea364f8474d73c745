{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4a217aa3_ed231817",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1325508
      },
      "writtenOn": "2022-11-11T19:43:50Z",
      "side": 1,
      "message": "Hello Leszek, would you please take a look? Thanks!",
      "revId": "aa6f3df00194e8c94842023ea364f8474d73c745",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee31c335_f9ad1270",
        "filename": "include/v8-script.h",
        "patchSetId": 1
      },
      "lineNbr": 503,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2022-11-14T12:13:41Z",
      "side": 1,
      "message": "Streaming compilation happens, in practice, at the same time as resource loading, so SourceTextAvailable will not normally be called before streaming completes.\n\nWith this in mind, I\u0027m wondering if it wouldn\u0027t be preferable to do the isolate cache lookup internally, as part of `ScriptCompiler::Compile(StreamedSource*,...)`, rather than exposing the more complex API.\n\nOTOH, the symmetry with ConsumeCachedCode is valuable, and this API does provide more flexibility (e.g. for inline script streaming). I\u0027m wondering what your design thoughts here are.",
      "range": {
        "startLine": 503,
        "startChar": 9,
        "endLine": 503,
        "endChar": 28
      },
      "revId": "aa6f3df00194e8c94842023ea364f8474d73c745",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}