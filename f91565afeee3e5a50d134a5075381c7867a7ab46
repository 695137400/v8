{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3eb5d18a_6e664c2f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1315011
      },
      "writtenOn": "2024-01-24T23:28:00Z",
      "side": 1,
      "message": "Creating a more JSPI-specific flag.",
      "revId": "f91565afeee3e5a50d134a5075381c7867a7ab46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08a0e186_05546162",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2024-01-25T15:46:25Z",
      "side": 1,
      "message": "LGTM with a comment.",
      "revId": "f91565afeee3e5a50d134a5075381c7867a7ab46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e24a491d_3528d93d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1315011
      },
      "writtenOn": "2024-01-25T18:38:42Z",
      "side": 1,
      "message": "Thanks.\nI am aware of the need to reflect the implications in dynamic code.",
      "parentUuid": "08a0e186_05546162",
      "revId": "f91565afeee3e5a50d134a5075381c7867a7ab46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd3ba276_dcafb3e7",
        "filename": "src/flags/flag-definitions.h",
        "patchSetId": 2
      },
      "lineNbr": 1519,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2024-01-25T15:46:25Z",
      "side": 1,
      "message": "Keep in mind that Origin Trials don\u0027t take these flag implications into account. So if you want to enable JSPI via OT, you\u0027ll need to ensure via some other mechanism that type reflection also gets enabled (for example, check `Isolate::IsWasmJSPIEnabled()` and if so, toggle the type_reflection bit in some appropriate `enabled_features` list).",
      "range": {
        "startLine": 1519,
        "startChar": 0,
        "endLine": 1519,
        "endChar": 77
      },
      "revId": "f91565afeee3e5a50d134a5075381c7867a7ab46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f0ff166_ae6a7442",
        "filename": "src/flags/flag-definitions.h",
        "patchSetId": 2
      },
      "lineNbr": 1519,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-01-25T16:16:51Z",
      "side": 1,
      "message": "Please also keep in mind that we should never enable experimental features via OT. They should leave the experimental phase prior to any live trials.",
      "parentUuid": "bd3ba276_dcafb3e7",
      "range": {
        "startLine": 1519,
        "startChar": 0,
        "endLine": 1519,
        "endChar": 77
      },
      "revId": "f91565afeee3e5a50d134a5075381c7867a7ab46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a64f20e_6af5c370",
        "filename": "src/flags/flag-definitions.h",
        "patchSetId": 2
      },
      "lineNbr": 1519,
      "author": {
        "id": 1315011
      },
      "writtenOn": "2024-01-25T18:38:42Z",
      "side": 1,
      "message": "Please elaborate. We have had several OTs with experimental flags (e.g., wasm GC)",
      "parentUuid": "8f0ff166_ae6a7442",
      "range": {
        "startLine": 1519,
        "startChar": 0,
        "endLine": 1519,
        "endChar": 77
      },
      "revId": "f91565afeee3e5a50d134a5075381c7867a7ab46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4276892_61710461",
        "filename": "src/flags/flag-definitions.h",
        "patchSetId": 2
      },
      "lineNbr": 1519,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-01-26T09:19:54Z",
      "side": 1,
      "message": "Experimental features aren\u0027t covered by our bug bounty program and we assume that \"stability and security will suffer\" when enabling them, so we never want to enable any such code for users. There\u0027ve been a couple of instances in the past where we failed to do this (e.g. WasmGC) and this has caused quite a bit of trouble (to the point where Chrome Security folks are questioning the whole --experimental VRP opt-out), so please get Chrome Security/VRP teams involved if you\u0027re planning to launch anything that\u0027s not covered by the bug bounty via OTs or similar.",
      "parentUuid": "0a64f20e_6af5c370",
      "range": {
        "startLine": 1519,
        "startChar": 0,
        "endLine": 1519,
        "endChar": 77
      },
      "revId": "f91565afeee3e5a50d134a5075381c7867a7ab46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "f91565afeee3e5a50d134a5075381c7867a7ab46",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "f91565afeee3e5a50d134a5075381c7867a7ab46",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "f91565afeee3e5a50d134a5075381c7867a7ab46",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f91565afeee3e5a50d134a5075381c7867a7ab46",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}