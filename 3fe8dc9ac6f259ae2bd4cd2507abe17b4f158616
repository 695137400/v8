{
  "comments": [
    {
      "key": {
        "uuid": "46ec2bd2_bacebac2",
        "filename": "src/heap/cppgc/asm/x64/push_registers_win.S",
        "patchSetId": 35
      },
      "lineNbr": 16,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-03-30T11:47:59Z",
      "side": 1,
      "message": "72?",
      "range": {
        "startLine": 16,
        "startChar": 32,
        "endLine": 16,
        "endChar": 34
      },
      "revId": "3fe8dc9ac6f259ae2bd4cd2507abe17b4f158616",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf930e34_98c66d30",
        "filename": "src/heap/cppgc/stack.cc",
        "patchSetId": 35
      },
      "lineNbr": 29,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-03-30T11:47:59Z",
      "side": 1,
      "message": "This is not consistent with IteratePointersImpl that does not include start_start_",
      "range": {
        "startLine": 29,
        "startChar": 19,
        "endLine": 29,
        "endChar": 20
      },
      "revId": "3fe8dc9ac6f259ae2bd4cd2507abe17b4f158616",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ed94b72_12b26829",
        "filename": "src/heap/cppgc/stack.cc",
        "patchSetId": 35
      },
      "lineNbr": 62,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-03-30T12:44:14Z",
      "side": 1,
      "message": "Why do we really need to scan the fake stack? Everything that is reachable should be reachable from the regular stack. Maybe this is an opportunity to rethink this.\n(I would understand why we would need it if we were compacting while there are pointers on the stack, but given that we don\u0027t I\u0027m not sure why we will miss live objects if we don\u0027t scan it.)",
      "range": {
        "startLine": 62,
        "startChar": 12,
        "endLine": 62,
        "endChar": 43
      },
      "revId": "3fe8dc9ac6f259ae2bd4cd2507abe17b4f158616",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a8f2577_d0e19901",
        "filename": "src/heap/cppgc/stack.cc",
        "patchSetId": 35
      },
      "lineNbr": 73,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-03-30T11:47:59Z",
      "side": 1,
      "message": "Nit: real_stack_slot would be easier to understand for me.",
      "range": {
        "startLine": 73,
        "startChar": 10,
        "endLine": 73,
        "endChar": 20
      },
      "revId": "3fe8dc9ac6f259ae2bd4cd2507abe17b4f158616",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bfb0591_8c518363",
        "filename": "src/heap/cppgc/stack.cc",
        "patchSetId": 35
      },
      "lineNbr": 78,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-03-30T11:47:59Z",
      "side": 1,
      "message": "Should this be a strict \u003e ?",
      "range": {
        "startLine": 78,
        "startChar": 52,
        "endLine": 78,
        "endChar": 53
      },
      "revId": "3fe8dc9ac6f259ae2bd4cd2507abe17b4f158616",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9643e78b_e7bac222",
        "filename": "src/heap/cppgc/stack.cc",
        "patchSetId": 35
      },
      "lineNbr": 81,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-03-30T11:47:59Z",
      "side": 1,
      "message": "Ditto?",
      "range": {
        "startLine": 81,
        "startChar": 22,
        "endLine": 81,
        "endChar": 23
      },
      "revId": "3fe8dc9ac6f259ae2bd4cd2507abe17b4f158616",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a91cb83e_0abc98ac",
        "filename": "src/heap/cppgc/stack.cc",
        "patchSetId": 35
      },
      "lineNbr": 99,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-03-30T11:47:59Z",
      "side": 1,
      "message": "Shouldn\u0027t we round up here?",
      "range": {
        "startLine": 99,
        "startChar": 7,
        "endLine": 99,
        "endChar": 61
      },
      "revId": "3fe8dc9ac6f259ae2bd4cd2507abe17b4f158616",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "984086fb_55c11269",
        "filename": "src/heap/cppgc/stack.h",
        "patchSetId": 35
      },
      "lineNbr": 15,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-03-30T12:44:14Z",
      "side": 1,
      "message": "nit: const void*",
      "range": {
        "startLine": 15,
        "startChar": 28,
        "endLine": 15,
        "endChar": 32
      },
      "revId": "3fe8dc9ac6f259ae2bd4cd2507abe17b4f158616",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97f2c901_6e9cd26e",
        "filename": "src/heap/cppgc/stack.h",
        "patchSetId": 35
      },
      "lineNbr": 24,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-03-30T12:44:14Z",
      "side": 1,
      "message": "Please use \"const void*\" here and below.\nNone of this is supposed to change the stack (with the exception of the embedded asm), so we can make everything const.",
      "range": {
        "startLine": 24,
        "startChar": 17,
        "endLine": 24,
        "endChar": 21
      },
      "revId": "3fe8dc9ac6f259ae2bd4cd2507abe17b4f158616",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "237dd451_720cd7c8",
        "filename": "src/heap/cppgc/stack.h",
        "patchSetId": 35
      },
      "lineNbr": 29,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-03-30T12:44:14Z",
      "side": 1,
      "message": "stack?",
      "range": {
        "startLine": 29,
        "startChar": 35,
        "endLine": 29,
        "endChar": 39
      },
      "revId": "3fe8dc9ac6f259ae2bd4cd2507abe17b4f158616",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0dd1b21_689eabbe",
        "filename": "src/heap/cppgc/stack.h",
        "patchSetId": 35
      },
      "lineNbr": 29,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-03-30T12:44:14Z",
      "side": 1,
      "message": "double space",
      "range": {
        "startLine": 29,
        "startChar": 56,
        "endLine": 29,
        "endChar": 57
      },
      "revId": "3fe8dc9ac6f259ae2bd4cd2507abe17b4f158616",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7ab7839_0950cade",
        "filename": "test/unittests/heap/cppgc/stack_unittest.cc",
        "patchSetId": 35
      },
      "lineNbr": 56,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-03-30T12:44:14Z",
      "side": 1,
      "message": "nit: you can move this outside \"#ifdef V8_OS_WIN\"",
      "range": {
        "startLine": 56,
        "startChar": 8,
        "endLine": 56,
        "endChar": 35
      },
      "revId": "3fe8dc9ac6f259ae2bd4cd2507abe17b4f158616",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdc38867_4e01de44",
        "filename": "test/unittests/heap/cppgc/stack_unittest.cc",
        "patchSetId": 35
      },
      "lineNbr": 114,
      "author": {
        "id": 1356087
      },
      "writtenOn": "2020-03-30T12:44:14Z",
      "side": 1,
      "message": "If you keep count of how many times you found the needle rather than if you found it, you could verify that keeping it on stack adds another location where it is found.",
      "range": {
        "startLine": 114,
        "startChar": 5,
        "endLine": 114,
        "endChar": 13
      },
      "revId": "3fe8dc9ac6f259ae2bd4cd2507abe17b4f158616",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}