{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2de23ad5_37d8ea96",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1115935
      },
      "writtenOn": "2023-12-07T18:51:45Z",
      "side": 1,
      "message": "PTAL:\nNikos to check whether I\u0027m holding `SetMarkerIfNeededAndCallback` right. I understand that usually we\u0027d want the exact same marker to be in place for both the preceding GC run and the subsequent snapshot taking, but that seems difficult to achieve in this case (see the two call sites of `WriteSnapshotToDiskAfterGC` in heap.cc: neither of them has easy access to the previous marker), and this approximation appears to be good enough in manual testing.\n\nMichael for OWNERS (technically inherited from ENG_REVIEW_OWNERS, but seems appropriate for a heap-related patch).",
      "revId": "f8eed25aa51673ca3740047e99d7cbd7a0d0aaaa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8188484_f6bdc616",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2023-12-08T08:11:40Z",
      "side": 1,
      "message": "lgtm, with one comment expressing some reservation. :-)",
      "revId": "f8eed25aa51673ca3740047e99d7cbd7a0d0aaaa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5d5c215_00fd96f0",
        "filename": "src/profiler/heap-profiler.cc",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 1147189
      },
      "writtenOn": "2023-12-08T08:11:40Z",
      "side": 1,
      "message": "As you mention in the other comment, snapshot generation and the filling of references should use the same part of the stack (see https://crrev.com/c/4813324). If what you have here is \"good enough\", let\u0027s try it, but I won\u0027t be surprised if there are failures in the CSS build. I don\u0027t expect anything to go wrong in the production builds.\n\nFor the call site at `CollectAllAvailableGarbage`, I think we know from the start whether snapshot generation will be required or not, so in that case we could conditionally wrap the GC and the snapshot generation. For `CollectGarbage`, we do not know from the start, so we\u0027d have to always wrap the main part of the GC, the epilogue callbacks and the potential snapshot generation.\n\nI suggest we land this now and see if it needs to be fixed.",
      "revId": "f8eed25aa51673ca3740047e99d7cbd7a0d0aaaa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}