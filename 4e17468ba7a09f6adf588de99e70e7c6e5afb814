{
  "comments": [
    {
      "key": {
        "uuid": "3d2e2305_e8c97b8d",
        "filename": "src/code-stub-assembler.cc",
        "patchSetId": 6
      },
      "lineNbr": 1142,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2017-08-01T14:02:29Z",
      "side": 1,
      "message": "Igor: do you have an opinion on this? Is it worth having this, or better to just remove the assertion (or otherwise move this to a CSA subclass not included in the main v8 library) --- also, is the approach here good, or is there a better/simpler way that I\u0027ve missed?",
      "revId": "4e17468ba7a09f6adf588de99e70e7c6e5afb814",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06f5b266_dbcd987a",
        "filename": "src/code-stub-assembler.cc",
        "patchSetId": 6
      },
      "lineNbr": 1142,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2017-08-01T14:15:56Z",
      "side": 1,
      "message": "No strong opinion from me. The code could be simplified slightly with Select(TaggedIsSmi, { Int32Constant(1) }, { DoesntHaveInstanceType() }).",
      "parentUuid": "3d2e2305_e8c97b8d",
      "revId": "4e17468ba7a09f6adf588de99e70e7c6e5afb814",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e171cdb5_1f7cb525",
        "filename": "src/code-stub-assembler.cc",
        "patchSetId": 6
      },
      "lineNbr": 1142,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2017-08-01T14:24:59Z",
      "side": 1,
      "message": "I had tried something like that, but ran into issues with Int32Constant and DoesntHaveInstanceType having different representations. I don\u0027t think Int32Constant() is compatible with kRepBit currently.",
      "parentUuid": "06f5b266_dbcd987a",
      "revId": "4e17468ba7a09f6adf588de99e70e7c6e5afb814",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1733e6cb_5d2301c5",
        "filename": "src/code-stub-assembler.cc",
        "patchSetId": 6
      },
      "lineNbr": 1142,
      "author": {
        "id": 1162379
      },
      "writtenOn": "2017-08-01T15:11:39Z",
      "side": 1,
      "message": "I guess it works if instead of Int32Constant(), the TaggedIsSmi() node is reused (it doesn\u0027t get re-added to the graph, so I don\u0027t think this should affect generated code... will have to see though)\n\nThe assertion condition looks like this on x64:\n\n```\n0x11f58f41ad27    27  f6c301         testb rbx,0x1\n0x11f58f41ad2a    2a  0f94c2         setzl dl\n0x11f58f41ad2d    2d  0fb6d2         movzxbl rdx,rdx\n0x11f58f41ad30    30  83fa00         cmpl rdx,0x0\n0x11f58f41ad33    33  0f850e000000   jnz 0x11f58f41ad47  (AsyncGeneratorResolve)\n0x11f58f41ad39    39  488b53ff       REX.W movq rdx,[rbx-0x1]\n0x11f58f41ad3d    3d  807a0bd1       cmpb [rdx+0xb],0xd1\n0x11f58f41ad41    41  0f95c2         setnzl dl\n0x11f58f41ad44    44  0fb6d2         movzxbl rdx,rdx\n0x11f58f41ad47    47  83fa00         cmpl rdx,0x0\n0x11f58f41ad4a    4a  0f8442010000   jz 0x11f58f41ae92  (AsyncGeneratorResolve)\n```\n\nI think it should be possible to get code like\n\n```\ntestb rbx,0x1\njnz \u003clater\u003e\nmovq rdx, [rbx-0x1]\ncmpb [rdx+0xb], \u003cinstance_type\u003e\n\u003clater\u003e:\njz \u003cfail_assertion\u003e\n```\n\nbut since it\u0027s debug-only code, I guess the fatness doesn\u0027t matter too much.\n\nIn either case, it looks equivalent to the code the non-Select version was generating.",
      "parentUuid": "e171cdb5_1f7cb525",
      "revId": "4e17468ba7a09f6adf588de99e70e7c6e5afb814",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}