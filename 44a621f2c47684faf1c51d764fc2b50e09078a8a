{
  "comments": [
    {
      "key": {
        "uuid": "9ba8db2d_77b2138d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2020-08-26T16:21:35Z",
      "side": 1,
      "message": "PTAL as well!",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "255f212e_58dbe34f",
        "filename": "src/execution/isolate-data.h",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2020-08-26T16:21:35Z",
      "side": 1,
      "message": "AFAIU with v8::Locker there might be multiple active stacks/threads, we don\u0027t need to support this in this prototype though. It seems the stack starts needs to go into ThreadLocalTop for that.",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4f4591b_1af02395",
        "filename": "src/execution/isolate-data.h",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-28T10:00:47Z",
      "side": 1,
      "message": "+1, ThreadLocalTop seems like a the best option.",
      "parentUuid": "255f212e_58dbe34f",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fecb3611_9b8bddfb",
        "filename": "src/execution/isolate-data.h",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1366119
      },
      "writtenOn": "2020-08-28T14:15:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b4f4591b_1af02395",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00482520_e19c9f58",
        "filename": "src/execution/isolate-data.h",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-28T10:00:47Z",
      "side": 1,
      "message": "These fields are accessed from generated code. That\u0027s why we need this macro that defines field offset.\n\nIt seems that Stack is accessed only from C++, so it should not be defined in IsolateData.\n\nPlease move it to ThreadLocalTop or (as a quick fix) to Isolate.",
      "range": {
        "startLine": 139,
        "startChar": 4,
        "endLine": 139,
        "endChar": 23
      },
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "199048b3_5e29a349",
        "filename": "src/execution/isolate-data.h",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1366119
      },
      "writtenOn": "2020-08-28T14:15:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "00482520_e19c9f58",
      "range": {
        "startLine": 139,
        "startChar": 4,
        "endLine": 139,
        "endChar": 23
      },
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "051fa068_0f583142",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4470,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-28T10:00:47Z",
      "side": 1,
      "message": "Can we get a separate file for conservative stack scanning?",
      "range": {
        "startLine": 4470,
        "startChar": 6,
        "endLine": 4470,
        "endChar": 30
      },
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4d2c3dd_b7260ad1",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4470,
      "author": {
        "id": 1366119
      },
      "writtenOn": "2020-08-28T14:15:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "051fa068_0f583142",
      "range": {
        "startLine": 4470,
        "startChar": 6,
        "endLine": 4470,
        "endChar": 30
      },
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd6d5ffd_80a0bbb7",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4476,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-28T10:00:47Z",
      "side": 1,
      "message": "\"Mark\" is specific to the marking visitor. \"VisitConservativelyIfPointer\" seems more appropriate here.",
      "range": {
        "startLine": 4476,
        "startChar": 4,
        "endLine": 4476,
        "endChar": 31
      },
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4527315c_a0ae83ac",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4476,
      "author": {
        "id": 1366119
      },
      "writtenOn": "2020-08-28T14:15:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "dd6d5ffd_80a0bbb7",
      "range": {
        "startLine": 4476,
        "startChar": 4,
        "endLine": 4476,
        "endChar": 31
      },
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d620b94_24c21b6b",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4481,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2020-08-26T16:21:35Z",
      "side": 1,
      "message": "Are you sure about \"address \u003e\u003d page-\u003earea_end()\"? Couldn\u0027t there be a pointer to the end of the object that we then miss?",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15c69bf6_411b1cd2",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4481,
      "author": {
        "id": 1366119
      },
      "writtenOn": "2020-08-28T14:15:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9d620b94_24c21b6b",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4926878_59ba76e8",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4491,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2020-08-26T16:21:35Z",
      "side": 1,
      "message": "Here we treat obj_end as part of object.",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11687786_60d6f8b7",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4491,
      "author": {
        "id": 1366119
      },
      "writtenOn": "2020-08-28T14:15:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f4926878_59ba76e8",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cce2b5f5_86ae4a8a",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4496,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2020-08-26T16:21:35Z",
      "side": 1,
      "message": "Manually adding kHeapObjectTag is a bit uncommon, I think you could use obj.ptr() instead to create the FullObjectSlot.",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe56c9c3_2a6385af",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4496,
      "author": {
        "id": 1366119
      },
      "writtenOn": "2020-08-28T14:15:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cce2b5f5_86ae4a8a",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2c505eb_10776611",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4498,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-28T10:00:47Z",
      "side": 1,
      "message": "Pinning is only required for the marking visitor, other visitors could work without pinning (e.g. a verifying visitor). Pinning for those visitors maybe even incorrect because there is not corresponding code that clears the pin.\n\nThis should move to the delegate_ somehow. Add a TODO?",
      "range": {
        "startLine": 4498,
        "startChar": 4,
        "endLine": 4498,
        "endChar": 50
      },
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0022c140_ee025d14",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4498,
      "author": {
        "id": 1366119
      },
      "writtenOn": "2020-08-28T14:15:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b2c505eb_10776611",
      "range": {
        "startLine": 4498,
        "startChar": 4,
        "endLine": 4498,
        "endChar": 50
      },
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39d6fec4_a674070a",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4499,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-28T10:00:47Z",
      "side": 1,
      "message": "Please add a DCHECK that the delegate_ did not change the value of the slot.",
      "range": {
        "startLine": 4499,
        "startChar": 4,
        "endLine": 4499,
        "endChar": 31
      },
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc4f6f1e_3fc980e1",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4499,
      "author": {
        "id": 1366119
      },
      "writtenOn": "2020-08-28T14:15:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "39d6fec4_a674070a",
      "range": {
        "startLine": 4499,
        "startChar": 4,
        "endLine": 4499,
        "endChar": 31
      },
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee4eefe9_f7ab0a70",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4501,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2020-08-26T16:21:35Z",
      "side": 1,
      "message": "Doesn\u0027t FullObjectSlot get the address of the slot as argument? What if that address get\u0027s dereferenced?",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4691118_8d532a87",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4501,
      "author": {
        "id": 1366119
      },
      "writtenOn": "2020-08-28T14:15:37Z",
      "side": 1,
      "message": "In the direct handles CL FullObjectSlot are intended to still have indirection. This is why I pass the address of the base_ptr instead of e.g. obj.ptr(), since I expect that it will be dereferenced along the way. This is also why I manually tag it in that rather hacky way above.",
      "parentUuid": "ee4eefe9_f7ab0a70",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3946b480_9c4eaaf8",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4507,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2020-08-26T16:21:35Z",
      "side": 1,
      "message": "There should be a filler object between top() and limit(), can we let it just mark that object? Asking because with LocalHeap other threads have LABs as well and we wouldn\u0027t iterate them here either.",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11f6513e_0cb60a9a",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4507,
      "author": {
        "id": 1366119
      },
      "writtenOn": "2020-08-28T14:15:37Z",
      "side": 1,
      "message": "This check simply ensures that address is within the Page Payload. Do you mean we should have a further check to ensure that we don\u0027t mark filler objects which exist inside the page too?",
      "parentUuid": "3946b480_9c4eaaf8",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5104517e_22a97184",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4513,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2020-08-26T16:21:35Z",
      "side": 1,
      "message": "Couldn\u0027t we let FindBasePtr handle the case of an empty bitmap? It would only need to compare CountLeadingZeros to kBitsInCell. With this solution we would iterate the bitmap for an almost empty page basically twice.",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fc1d548_36a46aae",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4513,
      "author": {
        "id": 1366119
      },
      "writtenOn": "2020-08-28T14:15:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5104517e_22a97184",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0839a5f4_b37003b8",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4521,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2020-08-26T16:21:35Z",
      "side": 1,
      "message": "Same question about object boundaries as above.",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "558b9969_384b9c8d",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4522,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2020-08-26T16:21:35Z",
      "side": 1,
      "message": "Large objects don\u0027t move anyways, why is it pinned here?",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6ef86ae_119da87f",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4522,
      "author": {
        "id": 1366119
      },
      "writtenOn": "2020-08-28T14:15:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "558b9969_384b9c8d",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97d9dd86_b363a8f1",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4523,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-28T10:00:47Z",
      "side": 1,
      "message": "Please add a DCHECK that the delegate_ did not change the value of the slot.",
      "range": {
        "startLine": 4523,
        "startChar": 8,
        "endLine": 4523,
        "endChar": 36
      },
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "032a6511_872bc234",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4523,
      "author": {
        "id": 1366119
      },
      "writtenOn": "2020-08-28T14:15:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "97d9dd86_b363a8f1",
      "range": {
        "startLine": 4523,
        "startChar": 8,
        "endLine": 4523,
        "endChar": 36
      },
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14127c1b_03413841",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4608,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2020-08-26T16:21:35Z",
      "side": 1,
      "message": "Isolate::Iterate visits other stuff as well, the conservative scan might have to go there.",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63b190ea_60f9e152",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4608,
      "author": {
        "id": 1002405
      },
      "writtenOn": "2020-08-28T10:00:47Z",
      "side": 1,
      "message": "+1, either Isolate::Iterate or IterateStackRoots.",
      "parentUuid": "14127c1b_03413841",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bd32181_47db093f",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 4608,
      "author": {
        "id": 1366119
      },
      "writtenOn": "2020-08-28T14:15:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "63b190ea_60f9e152",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b80a700e_2d026177",
        "filename": "test/cctest/heap/test-mark-compact.cc",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 1366119
      },
      "writtenOn": "2020-08-25T23:50:47Z",
      "side": 1,
      "message": "This is unsatisfying. I\u0027m happy to take suggestions on better ways to manage this. Unfortunately these tests won\u0027t pass with the current handle approach.",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4560876_232d0767",
        "filename": "test/cctest/heap/test-mark-compact.cc",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 1357035
      },
      "writtenOn": "2020-08-26T16:21:35Z",
      "side": 1,
      "message": "Right, maybe these tests should go into that CL then?",
      "parentUuid": "b80a700e_2d026177",
      "revId": "44a621f2c47684faf1c51d764fc2b50e09078a8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}