{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9ac2f226_9f2bb6ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2021-08-10T08:41:37Z",
      "side": 1,
      "message": "lgtm with suggestion",
      "revId": "ab8e8ca91fe15ac5d100b082e0a680873fb5e446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "614bba98_f6faaaa6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-08-10T08:45:16Z",
      "side": 1,
      "message": "Please take another",
      "revId": "ab8e8ca91fe15ac5d100b082e0a680873fb5e446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98ec3cbd_0ffb2012",
        "filename": "src/compiler-dispatcher/optimizing-compile-dispatcher.h",
        "patchSetId": 12
      },
      "lineNbr": 64,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2021-08-10T08:41:37Z",
      "side": 1,
      "message": "Can we DCHECK that there are no queued compiles?",
      "range": {
        "startLine": 64,
        "startChar": 4,
        "endLine": 64,
        "endChar": 18
      },
      "revId": "ab8e8ca91fe15ac5d100b082e0a680873fb5e446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d2a3eea_b69c2933",
        "filename": "src/compiler-dispatcher/optimizing-compile-dispatcher.h",
        "patchSetId": 12
      },
      "lineNbr": 64,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-08-10T08:45:16Z",
      "side": 1,
      "message": "Hmm but there\u0027s nothing enforcing that. Especially with --stress-concurrent-inlining we may have a concurrent job from a previous %OptimizeFunctionOnNextCall (whose result will be thrown away).",
      "parentUuid": "98ec3cbd_0ffb2012",
      "range": {
        "startLine": 64,
        "startChar": 4,
        "endLine": 64,
        "endChar": 18
      },
      "revId": "ab8e8ca91fe15ac5d100b082e0a680873fb5e446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "777d415e_425df5d5",
        "filename": "src/compiler-dispatcher/optimizing-compile-dispatcher.h",
        "patchSetId": 12
      },
      "lineNbr": 64,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2021-08-10T08:49:14Z",
      "side": 1,
      "message": "I think that risks us getting TSAN errors from reading finalize_ on the background thread then?",
      "parentUuid": "6d2a3eea_b69c2933",
      "range": {
        "startLine": 64,
        "startChar": 4,
        "endLine": 64,
        "endChar": 18
      },
      "revId": "ab8e8ca91fe15ac5d100b082e0a680873fb5e446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "927054ef_45d2e543",
        "filename": "src/compiler-dispatcher/optimizing-compile-dispatcher.h",
        "patchSetId": 12
      },
      "lineNbr": 64,
      "author": {
        "id": 1119597
      },
      "writtenOn": "2021-08-10T08:54:09Z",
      "side": 1,
      "message": "Good point, I should make this atomic.\n\nAlternatively, I change %DisableOptimizationFinalization such that it firsts waits for any background jobs to complete, then finalizes those, and only then disables finalization.",
      "parentUuid": "777d415e_425df5d5",
      "range": {
        "startLine": 64,
        "startChar": 4,
        "endLine": 64,
        "endChar": 18
      },
      "revId": "ab8e8ca91fe15ac5d100b082e0a680873fb5e446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf4e6c16_0f9da42a",
        "filename": "src/compiler-dispatcher/optimizing-compile-dispatcher.h",
        "patchSetId": 12
      },
      "lineNbr": 64,
      "author": {
        "id": 1162439
      },
      "writtenOn": "2021-08-10T09:01:42Z",
      "side": 1,
      "message": "+1 for the alternative option, it seems more expected behavior to finish in-progress tasks first.",
      "parentUuid": "927054ef_45d2e543",
      "range": {
        "startLine": 64,
        "startChar": 4,
        "endLine": 64,
        "endChar": 18
      },
      "revId": "ab8e8ca91fe15ac5d100b082e0a680873fb5e446",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}