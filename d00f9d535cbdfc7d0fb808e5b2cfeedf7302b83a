{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "89b25ef9_436f9084",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2024-10-25T13:11:21Z",
      "side": 1,
      "message": "LGTM",
      "revId": "d00f9d535cbdfc7d0fb808e5b2cfeedf7302b83a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce1efada_bd9daaed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-10-25T13:36:21Z",
      "side": 1,
      "message": "Thanks for the swift review!",
      "revId": "d00f9d535cbdfc7d0fb808e5b2cfeedf7302b83a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "81229cb3_4c6b64e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1183889
      },
      "writtenOn": "2024-10-25T14:22:00Z",
      "side": 1,
      "message": "lgtm!",
      "revId": "d00f9d535cbdfc7d0fb808e5b2cfeedf7302b83a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26c3db72_21fbbe3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-10-25T14:31:56Z",
      "side": 1,
      "message": "Thanks!",
      "revId": "d00f9d535cbdfc7d0fb808e5b2cfeedf7302b83a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10dc0aa1_aadb11ad",
        "filename": "src/compiler/raw-machine-assembler.cc",
        "patchSetId": 8
      },
      "lineNbr": 632,
      "author": {
        "id": 1374077
      },
      "writtenOn": "2024-10-25T13:11:21Z",
      "side": 1,
      "message": "Can we `DCHECK` this? E.g. using `dynamic_js_parameter_count_`?",
      "range": {
        "startLine": 632,
        "startChar": 2,
        "endLine": 632,
        "endChar": 72
      },
      "revId": "d00f9d535cbdfc7d0fb808e5b2cfeedf7302b83a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad1b87a5_e51520ba",
        "filename": "src/compiler/raw-machine-assembler.cc",
        "patchSetId": 8
      },
      "lineNbr": 632,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-10-25T13:36:21Z",
      "side": 1,
      "message": "I tried, but couldn\u0027t come up with anything better than the `CHECK_EQ` that\u0027s already here. One idea would be to also have a `CHECK(IsJSFunctionCall())`, but that doesn\u0027t always hold. For example here: https://source.chromium.org/chromium/chromium/src/+/main:v8/src/builtins/builtins-shadow-realm-gen.cc;l\u003d291;drc\u003d7e5f34d1c1dfde9855b90d3f3767504be6e2fdae we have a builtin that isn\u0027t a TFJ builtin and doesn\u0027t even exactly use the JS calling convention (it uses some CallTrampoline descriptor), but that still wants to do PopAndReturn (and it\u0027s valid there). The `dynamic_js_parameter_count_` will also be nullptr for most of these builtins. Just a few special ones have will use it.",
      "parentUuid": "10dc0aa1_aadb11ad",
      "range": {
        "startLine": 632,
        "startChar": 2,
        "endLine": 632,
        "endChar": 72
      },
      "revId": "d00f9d535cbdfc7d0fb808e5b2cfeedf7302b83a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "782bd19e_276059af",
        "filename": "src/compiler/raw-machine-assembler.cc",
        "patchSetId": 8
      },
      "lineNbr": 632,
      "author": {
        "id": 1519522
      },
      "writtenOn": "2024-10-25T14:31:56Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "ad1b87a5_e51520ba",
      "range": {
        "startLine": 632,
        "startChar": 2,
        "endLine": 632,
        "endChar": 72
      },
      "revId": "d00f9d535cbdfc7d0fb808e5b2cfeedf7302b83a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "If the author is a V8 committer, code review is required from one other committer (see https://v8.dev/docs/become-committer). Otherwise, code review is required from two committers."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "((uploaderin:cria/project-v8-committers AND label:Code-Review\u003dMAX,user\u003dnon_uploader) OR label:Code-Review\u003dMAX,count\u003e\u003d2) AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"((uploaderin:cria/project-v8-committers AND label:Code-Review=MAX,user=non_uploader) OR label:Code-Review=MAX,count>=2) AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader","uploaderin:cria/project-v8-committers","label:Code-Review=MAX,count>=2"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "d00f9d535cbdfc7d0fb808e5b2cfeedf7302b83a",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overridden with Unresolved-Comment-Reason: \u003creason\u003e line in change message."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "message:\"^.*Unresolved-Comment-Reason:.*\""
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*Unresolved-Comment-Reason:.*\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "d00f9d535cbdfc7d0fb808e5b2cfeedf7302b83a",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "d00f9d535cbdfc7d0fb808e5b2cfeedf7302b83a",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "d00f9d535cbdfc7d0fb808e5b2cfeedf7302b83a",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}