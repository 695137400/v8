{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2aa96c4c_4e0482ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2024-08-22T14:30:13Z",
      "side": 1,
      "message": "@clemensb@chromium.org: PTAL, thanks a lot for the support on investigating this!\n@leszeks@chromium.org: Please component-review the change.",
      "revId": "c99cd903f2de835a235aa9b37f955688328645dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1c20804_e91ed966",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1177599
      },
      "writtenOn": "2024-08-22T14:37:23Z",
      "side": 1,
      "message": "Ah, nice and simple fix. Thanks, LGTM!",
      "revId": "c99cd903f2de835a235aa9b37f955688328645dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "500a582a_967b3b4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2024-08-22T15:34:00Z",
      "side": 1,
      "message": "lgtm for the fix, the comment about mutable roots is interesting though.",
      "revId": "c99cd903f2de835a235aa9b37f955688328645dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d2d373c_e2845252",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 2200,
      "author": {
        "id": 1131764
      },
      "writtenOn": "2024-08-22T14:37:17Z",
      "side": 1,
      "message": "Drive-by: This is one of the things that looks like it\u0027s only on `Heap` because of the root setter?\n\nHow about a public setter for mutable roots so that this code can actually stay closer to where we want it?",
      "range": {
        "startLine": 2200,
        "startChar": 11,
        "endLine": 2200,
        "endChar": 38
      },
      "revId": "c99cd903f2de835a235aa9b37f955688328645dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a17d9d5_a1d88623",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 2200,
      "author": {
        "id": 1175774
      },
      "writtenOn": "2024-08-22T15:33:15Z",
      "side": 1,
      "message": "I assume we want to bottleneck it though, so that the mutable roots don\u0027t accidentally go out of sync with each other -- hard to do that when they have public setters.",
      "parentUuid": "4d2d373c_e2845252",
      "range": {
        "startLine": 2200,
        "startChar": 11,
        "endLine": 2200,
        "endChar": 38
      },
      "revId": "c99cd903f2de835a235aa9b37f955688328645dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "971bd89b_fce6f365",
        "filename": "src/heap/heap.cc",
        "patchSetId": 1
      },
      "lineNbr": 2220,
      "author": {
        "id": 1549182
      },
      "writtenOn": "2024-08-22T14:30:13Z",
      "side": 1,
      "message": "The fix becomes very obvious when looking at this function that grows the canonical types...",
      "revId": "c99cd903f2de835a235aa9b37f955688328645dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}